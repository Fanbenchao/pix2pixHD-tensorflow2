node {
  name: "input_label"
  op: "Placeholder"
  attr {
    key: "_user_specified_name"
    value {
      s: "input_label"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: 18
        }
      }
    }
  }
}
node {
  name: "real_img"
  op: "Placeholder"
  attr {
    key: "_user_specified_name"
    value {
      s: "real_img"
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_2"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_3"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_4"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_5"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_6"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_7"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_8"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_9"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_10"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_11"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_12"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_13"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_14"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_15"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_16"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_17"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_18"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_19"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_20"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_21"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_22"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_23"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_24"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_25"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_26"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_27"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_28"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_29"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_30"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_31"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_32"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_33"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_34"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_35"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_36"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_37"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_38"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_39"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_40"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_41"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_42"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_43"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_44"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_45"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_46"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_47"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_48"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_49"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_50"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_51"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_52"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_53"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_54"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_55"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_56"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_57"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_58"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_59"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_60"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_61"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_62"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_63"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_64"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_65"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_66"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_67"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_68"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_69"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_70"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_71"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_72"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_73"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_74"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_75"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_76"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_77"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_78"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_79"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_80"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_81"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_82"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_83"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_84"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_85"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_86"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_87"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_88"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_89"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_90"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_91"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_92"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_93"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_94"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_95"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_96"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_97"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_98"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_99"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_100"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_101"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_102"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_103"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_104"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_105"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_106"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_107"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_108"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_109"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall/args_110"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "global_generator/StatefulPartitionedCall"
  op: "StatefulPartitionedCall"
  input: "input_label"
  input: "global_generator/StatefulPartitionedCall/args_1"
  input: "global_generator/StatefulPartitionedCall/args_2"
  input: "global_generator/StatefulPartitionedCall/args_3"
  input: "global_generator/StatefulPartitionedCall/args_4"
  input: "global_generator/StatefulPartitionedCall/args_5"
  input: "global_generator/StatefulPartitionedCall/args_6"
  input: "global_generator/StatefulPartitionedCall/args_7"
  input: "global_generator/StatefulPartitionedCall/args_8"
  input: "global_generator/StatefulPartitionedCall/args_9"
  input: "global_generator/StatefulPartitionedCall/args_10"
  input: "global_generator/StatefulPartitionedCall/args_11"
  input: "global_generator/StatefulPartitionedCall/args_12"
  input: "global_generator/StatefulPartitionedCall/args_13"
  input: "global_generator/StatefulPartitionedCall/args_14"
  input: "global_generator/StatefulPartitionedCall/args_15"
  input: "global_generator/StatefulPartitionedCall/args_16"
  input: "global_generator/StatefulPartitionedCall/args_17"
  input: "global_generator/StatefulPartitionedCall/args_18"
  input: "global_generator/StatefulPartitionedCall/args_19"
  input: "global_generator/StatefulPartitionedCall/args_20"
  input: "global_generator/StatefulPartitionedCall/args_21"
  input: "global_generator/StatefulPartitionedCall/args_22"
  input: "global_generator/StatefulPartitionedCall/args_23"
  input: "global_generator/StatefulPartitionedCall/args_24"
  input: "global_generator/StatefulPartitionedCall/args_25"
  input: "global_generator/StatefulPartitionedCall/args_26"
  input: "global_generator/StatefulPartitionedCall/args_27"
  input: "global_generator/StatefulPartitionedCall/args_28"
  input: "global_generator/StatefulPartitionedCall/args_29"
  input: "global_generator/StatefulPartitionedCall/args_30"
  input: "global_generator/StatefulPartitionedCall/args_31"
  input: "global_generator/StatefulPartitionedCall/args_32"
  input: "global_generator/StatefulPartitionedCall/args_33"
  input: "global_generator/StatefulPartitionedCall/args_34"
  input: "global_generator/StatefulPartitionedCall/args_35"
  input: "global_generator/StatefulPartitionedCall/args_36"
  input: "global_generator/StatefulPartitionedCall/args_37"
  input: "global_generator/StatefulPartitionedCall/args_38"
  input: "global_generator/StatefulPartitionedCall/args_39"
  input: "global_generator/StatefulPartitionedCall/args_40"
  input: "global_generator/StatefulPartitionedCall/args_41"
  input: "global_generator/StatefulPartitionedCall/args_42"
  input: "global_generator/StatefulPartitionedCall/args_43"
  input: "global_generator/StatefulPartitionedCall/args_44"
  input: "global_generator/StatefulPartitionedCall/args_45"
  input: "global_generator/StatefulPartitionedCall/args_46"
  input: "global_generator/StatefulPartitionedCall/args_47"
  input: "global_generator/StatefulPartitionedCall/args_48"
  input: "global_generator/StatefulPartitionedCall/args_49"
  input: "global_generator/StatefulPartitionedCall/args_50"
  input: "global_generator/StatefulPartitionedCall/args_51"
  input: "global_generator/StatefulPartitionedCall/args_52"
  input: "global_generator/StatefulPartitionedCall/args_53"
  input: "global_generator/StatefulPartitionedCall/args_54"
  input: "global_generator/StatefulPartitionedCall/args_55"
  input: "global_generator/StatefulPartitionedCall/args_56"
  input: "global_generator/StatefulPartitionedCall/args_57"
  input: "global_generator/StatefulPartitionedCall/args_58"
  input: "global_generator/StatefulPartitionedCall/args_59"
  input: "global_generator/StatefulPartitionedCall/args_60"
  input: "global_generator/StatefulPartitionedCall/args_61"
  input: "global_generator/StatefulPartitionedCall/args_62"
  input: "global_generator/StatefulPartitionedCall/args_63"
  input: "global_generator/StatefulPartitionedCall/args_64"
  input: "global_generator/StatefulPartitionedCall/args_65"
  input: "global_generator/StatefulPartitionedCall/args_66"
  input: "global_generator/StatefulPartitionedCall/args_67"
  input: "global_generator/StatefulPartitionedCall/args_68"
  input: "global_generator/StatefulPartitionedCall/args_69"
  input: "global_generator/StatefulPartitionedCall/args_70"
  input: "global_generator/StatefulPartitionedCall/args_71"
  input: "global_generator/StatefulPartitionedCall/args_72"
  input: "global_generator/StatefulPartitionedCall/args_73"
  input: "global_generator/StatefulPartitionedCall/args_74"
  input: "global_generator/StatefulPartitionedCall/args_75"
  input: "global_generator/StatefulPartitionedCall/args_76"
  input: "global_generator/StatefulPartitionedCall/args_77"
  input: "global_generator/StatefulPartitionedCall/args_78"
  input: "global_generator/StatefulPartitionedCall/args_79"
  input: "global_generator/StatefulPartitionedCall/args_80"
  input: "global_generator/StatefulPartitionedCall/args_81"
  input: "global_generator/StatefulPartitionedCall/args_82"
  input: "global_generator/StatefulPartitionedCall/args_83"
  input: "global_generator/StatefulPartitionedCall/args_84"
  input: "global_generator/StatefulPartitionedCall/args_85"
  input: "global_generator/StatefulPartitionedCall/args_86"
  input: "global_generator/StatefulPartitionedCall/args_87"
  input: "global_generator/StatefulPartitionedCall/args_88"
  input: "global_generator/StatefulPartitionedCall/args_89"
  input: "global_generator/StatefulPartitionedCall/args_90"
  input: "global_generator/StatefulPartitionedCall/args_91"
  input: "global_generator/StatefulPartitionedCall/args_92"
  input: "global_generator/StatefulPartitionedCall/args_93"
  input: "global_generator/StatefulPartitionedCall/args_94"
  input: "global_generator/StatefulPartitionedCall/args_95"
  input: "global_generator/StatefulPartitionedCall/args_96"
  input: "global_generator/StatefulPartitionedCall/args_97"
  input: "global_generator/StatefulPartitionedCall/args_98"
  input: "global_generator/StatefulPartitionedCall/args_99"
  input: "global_generator/StatefulPartitionedCall/args_100"
  input: "global_generator/StatefulPartitionedCall/args_101"
  input: "global_generator/StatefulPartitionedCall/args_102"
  input: "global_generator/StatefulPartitionedCall/args_103"
  input: "global_generator/StatefulPartitionedCall/args_104"
  input: "global_generator/StatefulPartitionedCall/args_105"
  input: "global_generator/StatefulPartitionedCall/args_106"
  input: "global_generator/StatefulPartitionedCall/args_107"
  input: "global_generator/StatefulPartitionedCall/args_108"
  input: "global_generator/StatefulPartitionedCall/args_109"
  input: "global_generator/StatefulPartitionedCall/args_110"
  attr {
    key: "Tin"
    value {
      list {
        type: DT_FLOAT
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
        type: DT_RESOURCE
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_gradient_op_type"
    value {
      s: "PartitionedCall-6070"
    }
  }
  attr {
    key: "config"
    value {
      s: ""
    }
  }
  attr {
    key: "config_proto"
    value {
      s: ""
    }
  }
  attr {
    key: "executor_type"
    value {
      s: ""
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "__inference_call_6069"
      }
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "input_label"
  input: "real_img"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "concat_1"
  op: "ConcatV2"
  input: "input_label"
  input: "global_generator/StatefulPartitionedCall"
  input: "concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultiscaleDiscriminator/conv2d_29/Conv2D/ReadVariableOp/resource"
  op: "Placeholder"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator/conv2d_29/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "MultiscaleDiscriminator/conv2d_29/Conv2D/ReadVariableOp/resource"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator/conv2d_29/Conv2D"
  op: "Conv2D"
  input: "concat_1"
  input: "MultiscaleDiscriminator/conv2d_29/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "MultiscaleDiscriminator/conv2d_29/BiasAdd/ReadVariableOp/resource"
  op: "Placeholder"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator/conv2d_29/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "MultiscaleDiscriminator/conv2d_29/BiasAdd/ReadVariableOp/resource"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator/conv2d_29/BiasAdd"
  op: "BiasAdd"
  input: "MultiscaleDiscriminator/conv2d_29/Conv2D"
  input: "MultiscaleDiscriminator/conv2d_29/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MultiscaleDiscriminator/leaky_re_lu_4/LeakyRelu"
  op: "LeakyRelu"
  input: "MultiscaleDiscriminator/conv2d_29/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.20000000298023224
    }
  }
}
node {
  name: "MultiscaleDiscriminator/conv2d_30/Conv2D/ReadVariableOp/resource"
  op: "Placeholder"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator/conv2d_30/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "MultiscaleDiscriminator/conv2d_30/Conv2D/ReadVariableOp/resource"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator/conv2d_30/Conv2D"
  op: "Conv2D"
  input: "MultiscaleDiscriminator/leaky_re_lu_4/LeakyRelu"
  input: "MultiscaleDiscriminator/conv2d_30/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "MultiscaleDiscriminator/conv2d_30/BiasAdd/ReadVariableOp/resource"
  op: "Placeholder"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator/conv2d_30/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "MultiscaleDiscriminator/conv2d_30/BiasAdd/ReadVariableOp/resource"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator/conv2d_30/BiasAdd"
  op: "BiasAdd"
  input: "MultiscaleDiscriminator/conv2d_30/Conv2D"
  input: "MultiscaleDiscriminator/conv2d_30/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_30/Shape"
  op: "Shape"
  input: "MultiscaleDiscriminator/conv2d_30/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_30/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_30/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_30/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_30/strided_slice"
  op: "StridedSlice"
  input: "MultiscaleDiscriminator/instance_normalization_30/Shape"
  input: "MultiscaleDiscriminator/instance_normalization_30/strided_slice/stack"
  input: "MultiscaleDiscriminator/instance_normalization_30/strided_slice/stack_1"
  input: "MultiscaleDiscriminator/instance_normalization_30/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_30/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_30/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_30/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_30/strided_slice_1"
  op: "StridedSlice"
  input: "MultiscaleDiscriminator/instance_normalization_30/Shape"
  input: "MultiscaleDiscriminator/instance_normalization_30/strided_slice_1/stack"
  input: "MultiscaleDiscriminator/instance_normalization_30/strided_slice_1/stack_1"
  input: "MultiscaleDiscriminator/instance_normalization_30/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_30/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_30/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_30/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_30/strided_slice_2"
  op: "StridedSlice"
  input: "MultiscaleDiscriminator/instance_normalization_30/Shape"
  input: "MultiscaleDiscriminator/instance_normalization_30/strided_slice_2/stack"
  input: "MultiscaleDiscriminator/instance_normalization_30/strided_slice_2/stack_1"
  input: "MultiscaleDiscriminator/instance_normalization_30/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_30/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_30/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_30/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_30/strided_slice_3"
  op: "StridedSlice"
  input: "MultiscaleDiscriminator/instance_normalization_30/Shape"
  input: "MultiscaleDiscriminator/instance_normalization_30/strided_slice_3/stack"
  input: "MultiscaleDiscriminator/instance_normalization_30/strided_slice_3/stack_1"
  input: "MultiscaleDiscriminator/instance_normalization_30/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_30/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_30/stack/4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_30/stack"
  op: "Pack"
  input: "MultiscaleDiscriminator/instance_normalization_30/strided_slice"
  input: "MultiscaleDiscriminator/instance_normalization_30/stack/1"
  input: "MultiscaleDiscriminator/instance_normalization_30/strided_slice_1"
  input: "MultiscaleDiscriminator/instance_normalization_30/strided_slice_2"
  input: "MultiscaleDiscriminator/instance_normalization_30/stack/4"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_30/Reshape"
  op: "Reshape"
  input: "MultiscaleDiscriminator/conv2d_30/BiasAdd"
  input: "MultiscaleDiscriminator/instance_normalization_30/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_30/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_30/moments/mean"
  op: "Mean"
  input: "MultiscaleDiscriminator/instance_normalization_30/Reshape"
  input: "MultiscaleDiscriminator/instance_normalization_30/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_30/moments/StopGradient"
  op: "StopGradient"
  input: "MultiscaleDiscriminator/instance_normalization_30/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_30/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "MultiscaleDiscriminator/instance_normalization_30/Reshape"
  input: "MultiscaleDiscriminator/instance_normalization_30/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_30/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_30/moments/variance"
  op: "Mean"
  input: "MultiscaleDiscriminator/instance_normalization_30/moments/SquaredDifference"
  input: "MultiscaleDiscriminator/instance_normalization_30/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_30/Reshape_1/ReadVariableOp/resource"
  op: "Placeholder"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_30/Reshape_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "MultiscaleDiscriminator/instance_normalization_30/Reshape_1/ReadVariableOp/resource"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_30/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_30/Reshape_1"
  op: "Reshape"
  input: "MultiscaleDiscriminator/instance_normalization_30/Reshape_1/ReadVariableOp"
  input: "MultiscaleDiscriminator/instance_normalization_30/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_30/Reshape_2/ReadVariableOp/resource"
  op: "Placeholder"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_30/Reshape_2/ReadVariableOp"
  op: "ReadVariableOp"
  input: "MultiscaleDiscriminator/instance_normalization_30/Reshape_2/ReadVariableOp/resource"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_30/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_30/Reshape_2"
  op: "Reshape"
  input: "MultiscaleDiscriminator/instance_normalization_30/Reshape_2/ReadVariableOp"
  input: "MultiscaleDiscriminator/instance_normalization_30/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_30/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_30/batchnorm/add"
  op: "Add"
  input: "MultiscaleDiscriminator/instance_normalization_30/moments/variance"
  input: "MultiscaleDiscriminator/instance_normalization_30/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_30/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "MultiscaleDiscriminator/instance_normalization_30/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_30/batchnorm/mul"
  op: "Mul"
  input: "MultiscaleDiscriminator/instance_normalization_30/batchnorm/Rsqrt"
  input: "MultiscaleDiscriminator/instance_normalization_30/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_30/batchnorm/mul_1"
  op: "Mul"
  input: "MultiscaleDiscriminator/instance_normalization_30/Reshape"
  input: "MultiscaleDiscriminator/instance_normalization_30/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_30/batchnorm/mul_2"
  op: "Mul"
  input: "MultiscaleDiscriminator/instance_normalization_30/moments/mean"
  input: "MultiscaleDiscriminator/instance_normalization_30/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_30/batchnorm/sub"
  op: "Sub"
  input: "MultiscaleDiscriminator/instance_normalization_30/Reshape_2"
  input: "MultiscaleDiscriminator/instance_normalization_30/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_30/batchnorm/add_1"
  op: "Add"
  input: "MultiscaleDiscriminator/instance_normalization_30/batchnorm/mul_1"
  input: "MultiscaleDiscriminator/instance_normalization_30/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_30/Reshape_3"
  op: "Reshape"
  input: "MultiscaleDiscriminator/instance_normalization_30/batchnorm/add_1"
  input: "MultiscaleDiscriminator/instance_normalization_30/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultiscaleDiscriminator/leaky_re_lu_5/LeakyRelu"
  op: "LeakyRelu"
  input: "MultiscaleDiscriminator/instance_normalization_30/Reshape_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.20000000298023224
    }
  }
}
node {
  name: "MultiscaleDiscriminator/average_pooling2d/AvgPool"
  op: "AvgPool"
  input: "concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator/conv2d_24/Conv2D/ReadVariableOp/resource"
  op: "Placeholder"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator/conv2d_24/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "MultiscaleDiscriminator/conv2d_24/Conv2D/ReadVariableOp/resource"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator/conv2d_24/Conv2D"
  op: "Conv2D"
  input: "MultiscaleDiscriminator/average_pooling2d/AvgPool"
  input: "MultiscaleDiscriminator/conv2d_24/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "MultiscaleDiscriminator/conv2d_24/BiasAdd/ReadVariableOp/resource"
  op: "Placeholder"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator/conv2d_24/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "MultiscaleDiscriminator/conv2d_24/BiasAdd/ReadVariableOp/resource"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator/conv2d_24/BiasAdd"
  op: "BiasAdd"
  input: "MultiscaleDiscriminator/conv2d_24/Conv2D"
  input: "MultiscaleDiscriminator/conv2d_24/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MultiscaleDiscriminator/leaky_re_lu/LeakyRelu"
  op: "LeakyRelu"
  input: "MultiscaleDiscriminator/conv2d_24/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.20000000298023224
    }
  }
}
node {
  name: "MultiscaleDiscriminator/conv2d_25/Conv2D/ReadVariableOp/resource"
  op: "Placeholder"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator/conv2d_25/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "MultiscaleDiscriminator/conv2d_25/Conv2D/ReadVariableOp/resource"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator/conv2d_25/Conv2D"
  op: "Conv2D"
  input: "MultiscaleDiscriminator/leaky_re_lu/LeakyRelu"
  input: "MultiscaleDiscriminator/conv2d_25/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "MultiscaleDiscriminator/conv2d_25/BiasAdd/ReadVariableOp/resource"
  op: "Placeholder"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator/conv2d_25/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "MultiscaleDiscriminator/conv2d_25/BiasAdd/ReadVariableOp/resource"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator/conv2d_25/BiasAdd"
  op: "BiasAdd"
  input: "MultiscaleDiscriminator/conv2d_25/Conv2D"
  input: "MultiscaleDiscriminator/conv2d_25/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_27/Shape"
  op: "Shape"
  input: "MultiscaleDiscriminator/conv2d_25/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_27/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_27/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_27/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_27/strided_slice"
  op: "StridedSlice"
  input: "MultiscaleDiscriminator/instance_normalization_27/Shape"
  input: "MultiscaleDiscriminator/instance_normalization_27/strided_slice/stack"
  input: "MultiscaleDiscriminator/instance_normalization_27/strided_slice/stack_1"
  input: "MultiscaleDiscriminator/instance_normalization_27/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_27/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_27/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_27/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_27/strided_slice_1"
  op: "StridedSlice"
  input: "MultiscaleDiscriminator/instance_normalization_27/Shape"
  input: "MultiscaleDiscriminator/instance_normalization_27/strided_slice_1/stack"
  input: "MultiscaleDiscriminator/instance_normalization_27/strided_slice_1/stack_1"
  input: "MultiscaleDiscriminator/instance_normalization_27/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_27/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_27/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_27/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_27/strided_slice_2"
  op: "StridedSlice"
  input: "MultiscaleDiscriminator/instance_normalization_27/Shape"
  input: "MultiscaleDiscriminator/instance_normalization_27/strided_slice_2/stack"
  input: "MultiscaleDiscriminator/instance_normalization_27/strided_slice_2/stack_1"
  input: "MultiscaleDiscriminator/instance_normalization_27/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_27/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_27/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_27/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_27/strided_slice_3"
  op: "StridedSlice"
  input: "MultiscaleDiscriminator/instance_normalization_27/Shape"
  input: "MultiscaleDiscriminator/instance_normalization_27/strided_slice_3/stack"
  input: "MultiscaleDiscriminator/instance_normalization_27/strided_slice_3/stack_1"
  input: "MultiscaleDiscriminator/instance_normalization_27/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_27/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_27/stack/4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_27/stack"
  op: "Pack"
  input: "MultiscaleDiscriminator/instance_normalization_27/strided_slice"
  input: "MultiscaleDiscriminator/instance_normalization_27/stack/1"
  input: "MultiscaleDiscriminator/instance_normalization_27/strided_slice_1"
  input: "MultiscaleDiscriminator/instance_normalization_27/strided_slice_2"
  input: "MultiscaleDiscriminator/instance_normalization_27/stack/4"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_27/Reshape"
  op: "Reshape"
  input: "MultiscaleDiscriminator/conv2d_25/BiasAdd"
  input: "MultiscaleDiscriminator/instance_normalization_27/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_27/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_27/moments/mean"
  op: "Mean"
  input: "MultiscaleDiscriminator/instance_normalization_27/Reshape"
  input: "MultiscaleDiscriminator/instance_normalization_27/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_27/moments/StopGradient"
  op: "StopGradient"
  input: "MultiscaleDiscriminator/instance_normalization_27/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_27/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "MultiscaleDiscriminator/instance_normalization_27/Reshape"
  input: "MultiscaleDiscriminator/instance_normalization_27/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_27/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_27/moments/variance"
  op: "Mean"
  input: "MultiscaleDiscriminator/instance_normalization_27/moments/SquaredDifference"
  input: "MultiscaleDiscriminator/instance_normalization_27/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_27/Reshape_1/ReadVariableOp/resource"
  op: "Placeholder"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_27/Reshape_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "MultiscaleDiscriminator/instance_normalization_27/Reshape_1/ReadVariableOp/resource"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_27/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_27/Reshape_1"
  op: "Reshape"
  input: "MultiscaleDiscriminator/instance_normalization_27/Reshape_1/ReadVariableOp"
  input: "MultiscaleDiscriminator/instance_normalization_27/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_27/Reshape_2/ReadVariableOp/resource"
  op: "Placeholder"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_27/Reshape_2/ReadVariableOp"
  op: "ReadVariableOp"
  input: "MultiscaleDiscriminator/instance_normalization_27/Reshape_2/ReadVariableOp/resource"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_27/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_27/Reshape_2"
  op: "Reshape"
  input: "MultiscaleDiscriminator/instance_normalization_27/Reshape_2/ReadVariableOp"
  input: "MultiscaleDiscriminator/instance_normalization_27/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_27/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_27/batchnorm/add"
  op: "Add"
  input: "MultiscaleDiscriminator/instance_normalization_27/moments/variance"
  input: "MultiscaleDiscriminator/instance_normalization_27/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_27/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "MultiscaleDiscriminator/instance_normalization_27/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_27/batchnorm/mul"
  op: "Mul"
  input: "MultiscaleDiscriminator/instance_normalization_27/batchnorm/Rsqrt"
  input: "MultiscaleDiscriminator/instance_normalization_27/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_27/batchnorm/mul_1"
  op: "Mul"
  input: "MultiscaleDiscriminator/instance_normalization_27/Reshape"
  input: "MultiscaleDiscriminator/instance_normalization_27/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_27/batchnorm/mul_2"
  op: "Mul"
  input: "MultiscaleDiscriminator/instance_normalization_27/moments/mean"
  input: "MultiscaleDiscriminator/instance_normalization_27/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_27/batchnorm/sub"
  op: "Sub"
  input: "MultiscaleDiscriminator/instance_normalization_27/Reshape_2"
  input: "MultiscaleDiscriminator/instance_normalization_27/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_27/batchnorm/add_1"
  op: "Add"
  input: "MultiscaleDiscriminator/instance_normalization_27/batchnorm/mul_1"
  input: "MultiscaleDiscriminator/instance_normalization_27/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator/instance_normalization_27/Reshape_3"
  op: "Reshape"
  input: "MultiscaleDiscriminator/instance_normalization_27/batchnorm/add_1"
  input: "MultiscaleDiscriminator/instance_normalization_27/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultiscaleDiscriminator/leaky_re_lu_1/LeakyRelu"
  op: "LeakyRelu"
  input: "MultiscaleDiscriminator/instance_normalization_27/Reshape_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.20000000298023224
    }
  }
}
node {
  name: "zeros_like"
  op: "ZerosLike"
  input: "MultiscaleDiscriminator/leaky_re_lu_5/LeakyRelu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_squared_error/SquaredDifference"
  op: "SquaredDifference"
  input: "zeros_like"
  input: "MultiscaleDiscriminator/leaky_re_lu_5/LeakyRelu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_squared_error/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "mean_squared_error/Mean"
  op: "Mean"
  input: "mean_squared_error/SquaredDifference"
  input: "mean_squared_error/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_squared_error/weighted_loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mean_squared_error/weighted_loss/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/weighted_loss/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "mean_squared_error/weighted_loss/broadcast_weights/assert_broadcastable/values/shape"
  op: "Shape"
  input: "mean_squared_error/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_squared_error/weighted_loss/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "mean_squared_error/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "mean_squared_error/weighted_loss/broadcast_weights/ones_like/Shape"
  op: "Shape"
  input: "mean_squared_error/Mean"
  input: "^mean_squared_error/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_squared_error/weighted_loss/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^mean_squared_error/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mean_squared_error/weighted_loss/broadcast_weights/ones_like"
  op: "Fill"
  input: "mean_squared_error/weighted_loss/broadcast_weights/ones_like/Shape"
  input: "mean_squared_error/weighted_loss/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_squared_error/weighted_loss/broadcast_weights"
  op: "Mul"
  input: "mean_squared_error/weighted_loss/Const"
  input: "mean_squared_error/weighted_loss/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_squared_error/weighted_loss/Mul"
  op: "Mul"
  input: "mean_squared_error/Mean"
  input: "mean_squared_error/weighted_loss/broadcast_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_squared_error/weighted_loss/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "mean_squared_error/weighted_loss/Sum"
  op: "Sum"
  input: "mean_squared_error/weighted_loss/Mul"
  input: "mean_squared_error/weighted_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_squared_error/weighted_loss/num_elements"
  op: "Size"
  input: "mean_squared_error/weighted_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_squared_error/weighted_loss/num_elements/Cast"
  op: "Cast"
  input: "mean_squared_error/weighted_loss/num_elements"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "mean_squared_error/weighted_loss/mul_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mean_squared_error/weighted_loss/mul_1"
  op: "Mul"
  input: "mean_squared_error/weighted_loss/mul_1/x"
  input: "mean_squared_error/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_squared_error/weighted_loss/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error/weighted_loss/Sum_1"
  op: "Sum"
  input: "mean_squared_error/weighted_loss/Sum"
  input: "mean_squared_error/weighted_loss/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_squared_error/weighted_loss/value"
  op: "DivNoNan"
  input: "mean_squared_error/weighted_loss/Sum_1"
  input: "mean_squared_error/weighted_loss/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "add"
  op: "Add"
  input: "add/x"
  input: "mean_squared_error/weighted_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zeros_like_1"
  op: "ZerosLike"
  input: "MultiscaleDiscriminator/leaky_re_lu_1/LeakyRelu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_squared_error_1/SquaredDifference"
  op: "SquaredDifference"
  input: "zeros_like_1"
  input: "MultiscaleDiscriminator/leaky_re_lu_1/LeakyRelu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_squared_error_1/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "mean_squared_error_1/Mean"
  op: "Mean"
  input: "mean_squared_error_1/SquaredDifference"
  input: "mean_squared_error_1/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_squared_error_1/weighted_loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mean_squared_error_1/weighted_loss/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error_1/weighted_loss/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "mean_squared_error_1/weighted_loss/broadcast_weights/assert_broadcastable/values/shape"
  op: "Shape"
  input: "mean_squared_error_1/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_squared_error_1/weighted_loss/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "mean_squared_error_1/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "mean_squared_error_1/weighted_loss/broadcast_weights/ones_like/Shape"
  op: "Shape"
  input: "mean_squared_error_1/Mean"
  input: "^mean_squared_error_1/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_squared_error_1/weighted_loss/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^mean_squared_error_1/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mean_squared_error_1/weighted_loss/broadcast_weights/ones_like"
  op: "Fill"
  input: "mean_squared_error_1/weighted_loss/broadcast_weights/ones_like/Shape"
  input: "mean_squared_error_1/weighted_loss/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_squared_error_1/weighted_loss/broadcast_weights"
  op: "Mul"
  input: "mean_squared_error_1/weighted_loss/Const"
  input: "mean_squared_error_1/weighted_loss/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_squared_error_1/weighted_loss/Mul"
  op: "Mul"
  input: "mean_squared_error_1/Mean"
  input: "mean_squared_error_1/weighted_loss/broadcast_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_squared_error_1/weighted_loss/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "mean_squared_error_1/weighted_loss/Sum"
  op: "Sum"
  input: "mean_squared_error_1/weighted_loss/Mul"
  input: "mean_squared_error_1/weighted_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_squared_error_1/weighted_loss/num_elements"
  op: "Size"
  input: "mean_squared_error_1/weighted_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_squared_error_1/weighted_loss/num_elements/Cast"
  op: "Cast"
  input: "mean_squared_error_1/weighted_loss/num_elements"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "mean_squared_error_1/weighted_loss/mul_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mean_squared_error_1/weighted_loss/mul_1"
  op: "Mul"
  input: "mean_squared_error_1/weighted_loss/mul_1/x"
  input: "mean_squared_error_1/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_squared_error_1/weighted_loss/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error_1/weighted_loss/Sum_1"
  op: "Sum"
  input: "mean_squared_error_1/weighted_loss/Sum"
  input: "mean_squared_error_1/weighted_loss/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_squared_error_1/weighted_loss/value"
  op: "DivNoNan"
  input: "mean_squared_error_1/weighted_loss/Sum_1"
  input: "mean_squared_error_1/weighted_loss/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_1"
  op: "Add"
  input: "add"
  input: "mean_squared_error_1/weighted_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/conv2d_29/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "MultiscaleDiscriminator/conv2d_29/Conv2D/ReadVariableOp/resource"
  input: "^MultiscaleDiscriminator/conv2d_29/Conv2D/ReadVariableOp"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/conv2d_29/Conv2D"
  op: "Conv2D"
  input: "concat"
  input: "MultiscaleDiscriminator_1/conv2d_29/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/conv2d_29/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "MultiscaleDiscriminator/conv2d_29/BiasAdd/ReadVariableOp/resource"
  input: "^MultiscaleDiscriminator/conv2d_29/BiasAdd/ReadVariableOp"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/conv2d_29/BiasAdd"
  op: "BiasAdd"
  input: "MultiscaleDiscriminator_1/conv2d_29/Conv2D"
  input: "MultiscaleDiscriminator_1/conv2d_29/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/leaky_re_lu_4/LeakyRelu"
  op: "LeakyRelu"
  input: "MultiscaleDiscriminator_1/conv2d_29/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.20000000298023224
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/conv2d_30/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "MultiscaleDiscriminator/conv2d_30/Conv2D/ReadVariableOp/resource"
  input: "^MultiscaleDiscriminator/conv2d_30/Conv2D/ReadVariableOp"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/conv2d_30/Conv2D"
  op: "Conv2D"
  input: "MultiscaleDiscriminator_1/leaky_re_lu_4/LeakyRelu"
  input: "MultiscaleDiscriminator_1/conv2d_30/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/conv2d_30/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "MultiscaleDiscriminator/conv2d_30/BiasAdd/ReadVariableOp/resource"
  input: "^MultiscaleDiscriminator/conv2d_30/BiasAdd/ReadVariableOp"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/conv2d_30/BiasAdd"
  op: "BiasAdd"
  input: "MultiscaleDiscriminator_1/conv2d_30/Conv2D"
  input: "MultiscaleDiscriminator_1/conv2d_30/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_30/Shape"
  op: "Shape"
  input: "MultiscaleDiscriminator_1/conv2d_30/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_30/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_30/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_30/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_30/strided_slice"
  op: "StridedSlice"
  input: "MultiscaleDiscriminator_1/instance_normalization_30/Shape"
  input: "MultiscaleDiscriminator_1/instance_normalization_30/strided_slice/stack"
  input: "MultiscaleDiscriminator_1/instance_normalization_30/strided_slice/stack_1"
  input: "MultiscaleDiscriminator_1/instance_normalization_30/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_30/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_30/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_30/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_30/strided_slice_1"
  op: "StridedSlice"
  input: "MultiscaleDiscriminator_1/instance_normalization_30/Shape"
  input: "MultiscaleDiscriminator_1/instance_normalization_30/strided_slice_1/stack"
  input: "MultiscaleDiscriminator_1/instance_normalization_30/strided_slice_1/stack_1"
  input: "MultiscaleDiscriminator_1/instance_normalization_30/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_30/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_30/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_30/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_30/strided_slice_2"
  op: "StridedSlice"
  input: "MultiscaleDiscriminator_1/instance_normalization_30/Shape"
  input: "MultiscaleDiscriminator_1/instance_normalization_30/strided_slice_2/stack"
  input: "MultiscaleDiscriminator_1/instance_normalization_30/strided_slice_2/stack_1"
  input: "MultiscaleDiscriminator_1/instance_normalization_30/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_30/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_30/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_30/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_30/strided_slice_3"
  op: "StridedSlice"
  input: "MultiscaleDiscriminator_1/instance_normalization_30/Shape"
  input: "MultiscaleDiscriminator_1/instance_normalization_30/strided_slice_3/stack"
  input: "MultiscaleDiscriminator_1/instance_normalization_30/strided_slice_3/stack_1"
  input: "MultiscaleDiscriminator_1/instance_normalization_30/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_30/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_30/stack/4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_30/stack"
  op: "Pack"
  input: "MultiscaleDiscriminator_1/instance_normalization_30/strided_slice"
  input: "MultiscaleDiscriminator_1/instance_normalization_30/stack/1"
  input: "MultiscaleDiscriminator_1/instance_normalization_30/strided_slice_1"
  input: "MultiscaleDiscriminator_1/instance_normalization_30/strided_slice_2"
  input: "MultiscaleDiscriminator_1/instance_normalization_30/stack/4"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_30/Reshape"
  op: "Reshape"
  input: "MultiscaleDiscriminator_1/conv2d_30/BiasAdd"
  input: "MultiscaleDiscriminator_1/instance_normalization_30/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_30/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_30/moments/mean"
  op: "Mean"
  input: "MultiscaleDiscriminator_1/instance_normalization_30/Reshape"
  input: "MultiscaleDiscriminator_1/instance_normalization_30/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_30/moments/StopGradient"
  op: "StopGradient"
  input: "MultiscaleDiscriminator_1/instance_normalization_30/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_30/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "MultiscaleDiscriminator_1/instance_normalization_30/Reshape"
  input: "MultiscaleDiscriminator_1/instance_normalization_30/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_30/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_30/moments/variance"
  op: "Mean"
  input: "MultiscaleDiscriminator_1/instance_normalization_30/moments/SquaredDifference"
  input: "MultiscaleDiscriminator_1/instance_normalization_30/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_30/Reshape_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "MultiscaleDiscriminator/instance_normalization_30/Reshape_1/ReadVariableOp/resource"
  input: "^MultiscaleDiscriminator/instance_normalization_30/Reshape_1/ReadVariableOp"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_30/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_30/Reshape_1"
  op: "Reshape"
  input: "MultiscaleDiscriminator_1/instance_normalization_30/Reshape_1/ReadVariableOp"
  input: "MultiscaleDiscriminator_1/instance_normalization_30/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_30/Reshape_2/ReadVariableOp"
  op: "ReadVariableOp"
  input: "MultiscaleDiscriminator/instance_normalization_30/Reshape_2/ReadVariableOp/resource"
  input: "^MultiscaleDiscriminator/instance_normalization_30/Reshape_2/ReadVariableOp"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_30/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_30/Reshape_2"
  op: "Reshape"
  input: "MultiscaleDiscriminator_1/instance_normalization_30/Reshape_2/ReadVariableOp"
  input: "MultiscaleDiscriminator_1/instance_normalization_30/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_30/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_30/batchnorm/add"
  op: "Add"
  input: "MultiscaleDiscriminator_1/instance_normalization_30/moments/variance"
  input: "MultiscaleDiscriminator_1/instance_normalization_30/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_30/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "MultiscaleDiscriminator_1/instance_normalization_30/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_30/batchnorm/mul"
  op: "Mul"
  input: "MultiscaleDiscriminator_1/instance_normalization_30/batchnorm/Rsqrt"
  input: "MultiscaleDiscriminator_1/instance_normalization_30/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_30/batchnorm/mul_1"
  op: "Mul"
  input: "MultiscaleDiscriminator_1/instance_normalization_30/Reshape"
  input: "MultiscaleDiscriminator_1/instance_normalization_30/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_30/batchnorm/mul_2"
  op: "Mul"
  input: "MultiscaleDiscriminator_1/instance_normalization_30/moments/mean"
  input: "MultiscaleDiscriminator_1/instance_normalization_30/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_30/batchnorm/sub"
  op: "Sub"
  input: "MultiscaleDiscriminator_1/instance_normalization_30/Reshape_2"
  input: "MultiscaleDiscriminator_1/instance_normalization_30/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_30/batchnorm/add_1"
  op: "Add"
  input: "MultiscaleDiscriminator_1/instance_normalization_30/batchnorm/mul_1"
  input: "MultiscaleDiscriminator_1/instance_normalization_30/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_30/Reshape_3"
  op: "Reshape"
  input: "MultiscaleDiscriminator_1/instance_normalization_30/batchnorm/add_1"
  input: "MultiscaleDiscriminator_1/instance_normalization_30/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/leaky_re_lu_5/LeakyRelu"
  op: "LeakyRelu"
  input: "MultiscaleDiscriminator_1/instance_normalization_30/Reshape_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.20000000298023224
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/average_pooling2d/AvgPool"
  op: "AvgPool"
  input: "concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/conv2d_24/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "MultiscaleDiscriminator/conv2d_24/Conv2D/ReadVariableOp/resource"
  input: "^MultiscaleDiscriminator/conv2d_24/Conv2D/ReadVariableOp"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/conv2d_24/Conv2D"
  op: "Conv2D"
  input: "MultiscaleDiscriminator_1/average_pooling2d/AvgPool"
  input: "MultiscaleDiscriminator_1/conv2d_24/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/conv2d_24/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "MultiscaleDiscriminator/conv2d_24/BiasAdd/ReadVariableOp/resource"
  input: "^MultiscaleDiscriminator/conv2d_24/BiasAdd/ReadVariableOp"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/conv2d_24/BiasAdd"
  op: "BiasAdd"
  input: "MultiscaleDiscriminator_1/conv2d_24/Conv2D"
  input: "MultiscaleDiscriminator_1/conv2d_24/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/leaky_re_lu/LeakyRelu"
  op: "LeakyRelu"
  input: "MultiscaleDiscriminator_1/conv2d_24/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.20000000298023224
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/conv2d_25/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "MultiscaleDiscriminator/conv2d_25/Conv2D/ReadVariableOp/resource"
  input: "^MultiscaleDiscriminator/conv2d_25/Conv2D/ReadVariableOp"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/conv2d_25/Conv2D"
  op: "Conv2D"
  input: "MultiscaleDiscriminator_1/leaky_re_lu/LeakyRelu"
  input: "MultiscaleDiscriminator_1/conv2d_25/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/conv2d_25/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "MultiscaleDiscriminator/conv2d_25/BiasAdd/ReadVariableOp/resource"
  input: "^MultiscaleDiscriminator/conv2d_25/BiasAdd/ReadVariableOp"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/conv2d_25/BiasAdd"
  op: "BiasAdd"
  input: "MultiscaleDiscriminator_1/conv2d_25/Conv2D"
  input: "MultiscaleDiscriminator_1/conv2d_25/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_27/Shape"
  op: "Shape"
  input: "MultiscaleDiscriminator_1/conv2d_25/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_27/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_27/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_27/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_27/strided_slice"
  op: "StridedSlice"
  input: "MultiscaleDiscriminator_1/instance_normalization_27/Shape"
  input: "MultiscaleDiscriminator_1/instance_normalization_27/strided_slice/stack"
  input: "MultiscaleDiscriminator_1/instance_normalization_27/strided_slice/stack_1"
  input: "MultiscaleDiscriminator_1/instance_normalization_27/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_27/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_27/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_27/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_27/strided_slice_1"
  op: "StridedSlice"
  input: "MultiscaleDiscriminator_1/instance_normalization_27/Shape"
  input: "MultiscaleDiscriminator_1/instance_normalization_27/strided_slice_1/stack"
  input: "MultiscaleDiscriminator_1/instance_normalization_27/strided_slice_1/stack_1"
  input: "MultiscaleDiscriminator_1/instance_normalization_27/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_27/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_27/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_27/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_27/strided_slice_2"
  op: "StridedSlice"
  input: "MultiscaleDiscriminator_1/instance_normalization_27/Shape"
  input: "MultiscaleDiscriminator_1/instance_normalization_27/strided_slice_2/stack"
  input: "MultiscaleDiscriminator_1/instance_normalization_27/strided_slice_2/stack_1"
  input: "MultiscaleDiscriminator_1/instance_normalization_27/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_27/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_27/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_27/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_27/strided_slice_3"
  op: "StridedSlice"
  input: "MultiscaleDiscriminator_1/instance_normalization_27/Shape"
  input: "MultiscaleDiscriminator_1/instance_normalization_27/strided_slice_3/stack"
  input: "MultiscaleDiscriminator_1/instance_normalization_27/strided_slice_3/stack_1"
  input: "MultiscaleDiscriminator_1/instance_normalization_27/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_27/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_27/stack/4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_27/stack"
  op: "Pack"
  input: "MultiscaleDiscriminator_1/instance_normalization_27/strided_slice"
  input: "MultiscaleDiscriminator_1/instance_normalization_27/stack/1"
  input: "MultiscaleDiscriminator_1/instance_normalization_27/strided_slice_1"
  input: "MultiscaleDiscriminator_1/instance_normalization_27/strided_slice_2"
  input: "MultiscaleDiscriminator_1/instance_normalization_27/stack/4"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_27/Reshape"
  op: "Reshape"
  input: "MultiscaleDiscriminator_1/conv2d_25/BiasAdd"
  input: "MultiscaleDiscriminator_1/instance_normalization_27/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_27/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_27/moments/mean"
  op: "Mean"
  input: "MultiscaleDiscriminator_1/instance_normalization_27/Reshape"
  input: "MultiscaleDiscriminator_1/instance_normalization_27/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_27/moments/StopGradient"
  op: "StopGradient"
  input: "MultiscaleDiscriminator_1/instance_normalization_27/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_27/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "MultiscaleDiscriminator_1/instance_normalization_27/Reshape"
  input: "MultiscaleDiscriminator_1/instance_normalization_27/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_27/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_27/moments/variance"
  op: "Mean"
  input: "MultiscaleDiscriminator_1/instance_normalization_27/moments/SquaredDifference"
  input: "MultiscaleDiscriminator_1/instance_normalization_27/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_27/Reshape_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "MultiscaleDiscriminator/instance_normalization_27/Reshape_1/ReadVariableOp/resource"
  input: "^MultiscaleDiscriminator/instance_normalization_27/Reshape_1/ReadVariableOp"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_27/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_27/Reshape_1"
  op: "Reshape"
  input: "MultiscaleDiscriminator_1/instance_normalization_27/Reshape_1/ReadVariableOp"
  input: "MultiscaleDiscriminator_1/instance_normalization_27/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_27/Reshape_2/ReadVariableOp"
  op: "ReadVariableOp"
  input: "MultiscaleDiscriminator/instance_normalization_27/Reshape_2/ReadVariableOp/resource"
  input: "^MultiscaleDiscriminator/instance_normalization_27/Reshape_2/ReadVariableOp"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_27/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_27/Reshape_2"
  op: "Reshape"
  input: "MultiscaleDiscriminator_1/instance_normalization_27/Reshape_2/ReadVariableOp"
  input: "MultiscaleDiscriminator_1/instance_normalization_27/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_27/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_27/batchnorm/add"
  op: "Add"
  input: "MultiscaleDiscriminator_1/instance_normalization_27/moments/variance"
  input: "MultiscaleDiscriminator_1/instance_normalization_27/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_27/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "MultiscaleDiscriminator_1/instance_normalization_27/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_27/batchnorm/mul"
  op: "Mul"
  input: "MultiscaleDiscriminator_1/instance_normalization_27/batchnorm/Rsqrt"
  input: "MultiscaleDiscriminator_1/instance_normalization_27/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_27/batchnorm/mul_1"
  op: "Mul"
  input: "MultiscaleDiscriminator_1/instance_normalization_27/Reshape"
  input: "MultiscaleDiscriminator_1/instance_normalization_27/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_27/batchnorm/mul_2"
  op: "Mul"
  input: "MultiscaleDiscriminator_1/instance_normalization_27/moments/mean"
  input: "MultiscaleDiscriminator_1/instance_normalization_27/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_27/batchnorm/sub"
  op: "Sub"
  input: "MultiscaleDiscriminator_1/instance_normalization_27/Reshape_2"
  input: "MultiscaleDiscriminator_1/instance_normalization_27/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_27/batchnorm/add_1"
  op: "Add"
  input: "MultiscaleDiscriminator_1/instance_normalization_27/batchnorm/mul_1"
  input: "MultiscaleDiscriminator_1/instance_normalization_27/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/instance_normalization_27/Reshape_3"
  op: "Reshape"
  input: "MultiscaleDiscriminator_1/instance_normalization_27/batchnorm/add_1"
  input: "MultiscaleDiscriminator_1/instance_normalization_27/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultiscaleDiscriminator_1/leaky_re_lu_1/LeakyRelu"
  op: "LeakyRelu"
  input: "MultiscaleDiscriminator_1/instance_normalization_27/Reshape_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.20000000298023224
    }
  }
}
node {
  name: "ones_like/Shape"
  op: "Shape"
  input: "MultiscaleDiscriminator_1/leaky_re_lu_5/LeakyRelu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ones_like/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ones_like"
  op: "Fill"
  input: "ones_like/Shape"
  input: "ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_squared_error_2/SquaredDifference"
  op: "SquaredDifference"
  input: "ones_like"
  input: "MultiscaleDiscriminator_1/leaky_re_lu_5/LeakyRelu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_squared_error_2/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "mean_squared_error_2/Mean"
  op: "Mean"
  input: "mean_squared_error_2/SquaredDifference"
  input: "mean_squared_error_2/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_squared_error_2/weighted_loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mean_squared_error_2/weighted_loss/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error_2/weighted_loss/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "mean_squared_error_2/weighted_loss/broadcast_weights/assert_broadcastable/values/shape"
  op: "Shape"
  input: "mean_squared_error_2/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_squared_error_2/weighted_loss/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "mean_squared_error_2/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "mean_squared_error_2/weighted_loss/broadcast_weights/ones_like/Shape"
  op: "Shape"
  input: "mean_squared_error_2/Mean"
  input: "^mean_squared_error_2/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_squared_error_2/weighted_loss/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^mean_squared_error_2/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mean_squared_error_2/weighted_loss/broadcast_weights/ones_like"
  op: "Fill"
  input: "mean_squared_error_2/weighted_loss/broadcast_weights/ones_like/Shape"
  input: "mean_squared_error_2/weighted_loss/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_squared_error_2/weighted_loss/broadcast_weights"
  op: "Mul"
  input: "mean_squared_error_2/weighted_loss/Const"
  input: "mean_squared_error_2/weighted_loss/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_squared_error_2/weighted_loss/Mul"
  op: "Mul"
  input: "mean_squared_error_2/Mean"
  input: "mean_squared_error_2/weighted_loss/broadcast_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_squared_error_2/weighted_loss/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "mean_squared_error_2/weighted_loss/Sum"
  op: "Sum"
  input: "mean_squared_error_2/weighted_loss/Mul"
  input: "mean_squared_error_2/weighted_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_squared_error_2/weighted_loss/num_elements"
  op: "Size"
  input: "mean_squared_error_2/weighted_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_squared_error_2/weighted_loss/num_elements/Cast"
  op: "Cast"
  input: "mean_squared_error_2/weighted_loss/num_elements"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "mean_squared_error_2/weighted_loss/mul_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mean_squared_error_2/weighted_loss/mul_1"
  op: "Mul"
  input: "mean_squared_error_2/weighted_loss/mul_1/x"
  input: "mean_squared_error_2/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_squared_error_2/weighted_loss/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error_2/weighted_loss/Sum_1"
  op: "Sum"
  input: "mean_squared_error_2/weighted_loss/Sum"
  input: "mean_squared_error_2/weighted_loss/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_squared_error_2/weighted_loss/value"
  op: "DivNoNan"
  input: "mean_squared_error_2/weighted_loss/Sum_1"
  input: "mean_squared_error_2/weighted_loss/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "add_2"
  op: "Add"
  input: "add_2/x"
  input: "mean_squared_error_2/weighted_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ones_like_1/Shape"
  op: "Shape"
  input: "MultiscaleDiscriminator_1/leaky_re_lu_1/LeakyRelu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ones_like_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ones_like_1"
  op: "Fill"
  input: "ones_like_1/Shape"
  input: "ones_like_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_squared_error_3/SquaredDifference"
  op: "SquaredDifference"
  input: "ones_like_1"
  input: "MultiscaleDiscriminator_1/leaky_re_lu_1/LeakyRelu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_squared_error_3/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "mean_squared_error_3/Mean"
  op: "Mean"
  input: "mean_squared_error_3/SquaredDifference"
  input: "mean_squared_error_3/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_squared_error_3/weighted_loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mean_squared_error_3/weighted_loss/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error_3/weighted_loss/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "mean_squared_error_3/weighted_loss/broadcast_weights/assert_broadcastable/values/shape"
  op: "Shape"
  input: "mean_squared_error_3/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_squared_error_3/weighted_loss/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "mean_squared_error_3/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "mean_squared_error_3/weighted_loss/broadcast_weights/ones_like/Shape"
  op: "Shape"
  input: "mean_squared_error_3/Mean"
  input: "^mean_squared_error_3/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_squared_error_3/weighted_loss/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^mean_squared_error_3/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mean_squared_error_3/weighted_loss/broadcast_weights/ones_like"
  op: "Fill"
  input: "mean_squared_error_3/weighted_loss/broadcast_weights/ones_like/Shape"
  input: "mean_squared_error_3/weighted_loss/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_squared_error_3/weighted_loss/broadcast_weights"
  op: "Mul"
  input: "mean_squared_error_3/weighted_loss/Const"
  input: "mean_squared_error_3/weighted_loss/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_squared_error_3/weighted_loss/Mul"
  op: "Mul"
  input: "mean_squared_error_3/Mean"
  input: "mean_squared_error_3/weighted_loss/broadcast_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_squared_error_3/weighted_loss/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "mean_squared_error_3/weighted_loss/Sum"
  op: "Sum"
  input: "mean_squared_error_3/weighted_loss/Mul"
  input: "mean_squared_error_3/weighted_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_squared_error_3/weighted_loss/num_elements"
  op: "Size"
  input: "mean_squared_error_3/weighted_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_squared_error_3/weighted_loss/num_elements/Cast"
  op: "Cast"
  input: "mean_squared_error_3/weighted_loss/num_elements"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "mean_squared_error_3/weighted_loss/mul_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mean_squared_error_3/weighted_loss/mul_1"
  op: "Mul"
  input: "mean_squared_error_3/weighted_loss/mul_1/x"
  input: "mean_squared_error_3/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_squared_error_3/weighted_loss/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error_3/weighted_loss/Sum_1"
  op: "Sum"
  input: "mean_squared_error_3/weighted_loss/Sum"
  input: "mean_squared_error_3/weighted_loss/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_squared_error_3/weighted_loss/value"
  op: "DivNoNan"
  input: "mean_squared_error_3/weighted_loss/Sum_1"
  input: "mean_squared_error_3/weighted_loss/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_3"
  op: "Add"
  input: "add_2"
  input: "mean_squared_error_3/weighted_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/conv2d_29/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "MultiscaleDiscriminator/conv2d_29/Conv2D/ReadVariableOp/resource"
  input: "^MultiscaleDiscriminator_1/conv2d_29/Conv2D/ReadVariableOp"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/conv2d_29/Conv2D"
  op: "Conv2D"
  input: "concat_1"
  input: "MultiscaleDiscriminator_2/conv2d_29/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/conv2d_29/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "MultiscaleDiscriminator/conv2d_29/BiasAdd/ReadVariableOp/resource"
  input: "^MultiscaleDiscriminator_1/conv2d_29/BiasAdd/ReadVariableOp"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/conv2d_29/BiasAdd"
  op: "BiasAdd"
  input: "MultiscaleDiscriminator_2/conv2d_29/Conv2D"
  input: "MultiscaleDiscriminator_2/conv2d_29/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/leaky_re_lu_4/LeakyRelu"
  op: "LeakyRelu"
  input: "MultiscaleDiscriminator_2/conv2d_29/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.20000000298023224
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/conv2d_30/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "MultiscaleDiscriminator/conv2d_30/Conv2D/ReadVariableOp/resource"
  input: "^MultiscaleDiscriminator_1/conv2d_30/Conv2D/ReadVariableOp"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/conv2d_30/Conv2D"
  op: "Conv2D"
  input: "MultiscaleDiscriminator_2/leaky_re_lu_4/LeakyRelu"
  input: "MultiscaleDiscriminator_2/conv2d_30/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/conv2d_30/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "MultiscaleDiscriminator/conv2d_30/BiasAdd/ReadVariableOp/resource"
  input: "^MultiscaleDiscriminator_1/conv2d_30/BiasAdd/ReadVariableOp"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/conv2d_30/BiasAdd"
  op: "BiasAdd"
  input: "MultiscaleDiscriminator_2/conv2d_30/Conv2D"
  input: "MultiscaleDiscriminator_2/conv2d_30/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_30/Shape"
  op: "Shape"
  input: "MultiscaleDiscriminator_2/conv2d_30/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_30/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_30/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_30/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_30/strided_slice"
  op: "StridedSlice"
  input: "MultiscaleDiscriminator_2/instance_normalization_30/Shape"
  input: "MultiscaleDiscriminator_2/instance_normalization_30/strided_slice/stack"
  input: "MultiscaleDiscriminator_2/instance_normalization_30/strided_slice/stack_1"
  input: "MultiscaleDiscriminator_2/instance_normalization_30/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_30/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_30/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_30/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_30/strided_slice_1"
  op: "StridedSlice"
  input: "MultiscaleDiscriminator_2/instance_normalization_30/Shape"
  input: "MultiscaleDiscriminator_2/instance_normalization_30/strided_slice_1/stack"
  input: "MultiscaleDiscriminator_2/instance_normalization_30/strided_slice_1/stack_1"
  input: "MultiscaleDiscriminator_2/instance_normalization_30/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_30/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_30/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_30/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_30/strided_slice_2"
  op: "StridedSlice"
  input: "MultiscaleDiscriminator_2/instance_normalization_30/Shape"
  input: "MultiscaleDiscriminator_2/instance_normalization_30/strided_slice_2/stack"
  input: "MultiscaleDiscriminator_2/instance_normalization_30/strided_slice_2/stack_1"
  input: "MultiscaleDiscriminator_2/instance_normalization_30/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_30/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_30/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_30/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_30/strided_slice_3"
  op: "StridedSlice"
  input: "MultiscaleDiscriminator_2/instance_normalization_30/Shape"
  input: "MultiscaleDiscriminator_2/instance_normalization_30/strided_slice_3/stack"
  input: "MultiscaleDiscriminator_2/instance_normalization_30/strided_slice_3/stack_1"
  input: "MultiscaleDiscriminator_2/instance_normalization_30/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_30/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_30/stack/4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_30/stack"
  op: "Pack"
  input: "MultiscaleDiscriminator_2/instance_normalization_30/strided_slice"
  input: "MultiscaleDiscriminator_2/instance_normalization_30/stack/1"
  input: "MultiscaleDiscriminator_2/instance_normalization_30/strided_slice_1"
  input: "MultiscaleDiscriminator_2/instance_normalization_30/strided_slice_2"
  input: "MultiscaleDiscriminator_2/instance_normalization_30/stack/4"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_30/Reshape"
  op: "Reshape"
  input: "MultiscaleDiscriminator_2/conv2d_30/BiasAdd"
  input: "MultiscaleDiscriminator_2/instance_normalization_30/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_30/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_30/moments/mean"
  op: "Mean"
  input: "MultiscaleDiscriminator_2/instance_normalization_30/Reshape"
  input: "MultiscaleDiscriminator_2/instance_normalization_30/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_30/moments/StopGradient"
  op: "StopGradient"
  input: "MultiscaleDiscriminator_2/instance_normalization_30/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_30/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "MultiscaleDiscriminator_2/instance_normalization_30/Reshape"
  input: "MultiscaleDiscriminator_2/instance_normalization_30/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_30/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_30/moments/variance"
  op: "Mean"
  input: "MultiscaleDiscriminator_2/instance_normalization_30/moments/SquaredDifference"
  input: "MultiscaleDiscriminator_2/instance_normalization_30/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_30/Reshape_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "MultiscaleDiscriminator/instance_normalization_30/Reshape_1/ReadVariableOp/resource"
  input: "^MultiscaleDiscriminator_1/instance_normalization_30/Reshape_1/ReadVariableOp"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_30/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_30/Reshape_1"
  op: "Reshape"
  input: "MultiscaleDiscriminator_2/instance_normalization_30/Reshape_1/ReadVariableOp"
  input: "MultiscaleDiscriminator_2/instance_normalization_30/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_30/Reshape_2/ReadVariableOp"
  op: "ReadVariableOp"
  input: "MultiscaleDiscriminator/instance_normalization_30/Reshape_2/ReadVariableOp/resource"
  input: "^MultiscaleDiscriminator_1/instance_normalization_30/Reshape_2/ReadVariableOp"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_30/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_30/Reshape_2"
  op: "Reshape"
  input: "MultiscaleDiscriminator_2/instance_normalization_30/Reshape_2/ReadVariableOp"
  input: "MultiscaleDiscriminator_2/instance_normalization_30/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_30/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_30/batchnorm/add"
  op: "Add"
  input: "MultiscaleDiscriminator_2/instance_normalization_30/moments/variance"
  input: "MultiscaleDiscriminator_2/instance_normalization_30/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_30/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "MultiscaleDiscriminator_2/instance_normalization_30/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_30/batchnorm/mul"
  op: "Mul"
  input: "MultiscaleDiscriminator_2/instance_normalization_30/batchnorm/Rsqrt"
  input: "MultiscaleDiscriminator_2/instance_normalization_30/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_30/batchnorm/mul_1"
  op: "Mul"
  input: "MultiscaleDiscriminator_2/instance_normalization_30/Reshape"
  input: "MultiscaleDiscriminator_2/instance_normalization_30/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_30/batchnorm/mul_2"
  op: "Mul"
  input: "MultiscaleDiscriminator_2/instance_normalization_30/moments/mean"
  input: "MultiscaleDiscriminator_2/instance_normalization_30/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_30/batchnorm/sub"
  op: "Sub"
  input: "MultiscaleDiscriminator_2/instance_normalization_30/Reshape_2"
  input: "MultiscaleDiscriminator_2/instance_normalization_30/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_30/batchnorm/add_1"
  op: "Add"
  input: "MultiscaleDiscriminator_2/instance_normalization_30/batchnorm/mul_1"
  input: "MultiscaleDiscriminator_2/instance_normalization_30/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_30/Reshape_3"
  op: "Reshape"
  input: "MultiscaleDiscriminator_2/instance_normalization_30/batchnorm/add_1"
  input: "MultiscaleDiscriminator_2/instance_normalization_30/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/leaky_re_lu_5/LeakyRelu"
  op: "LeakyRelu"
  input: "MultiscaleDiscriminator_2/instance_normalization_30/Reshape_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.20000000298023224
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/average_pooling2d/AvgPool"
  op: "AvgPool"
  input: "concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 3
        i: 3
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/conv2d_24/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "MultiscaleDiscriminator/conv2d_24/Conv2D/ReadVariableOp/resource"
  input: "^MultiscaleDiscriminator_1/conv2d_24/Conv2D/ReadVariableOp"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/conv2d_24/Conv2D"
  op: "Conv2D"
  input: "MultiscaleDiscriminator_2/average_pooling2d/AvgPool"
  input: "MultiscaleDiscriminator_2/conv2d_24/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/conv2d_24/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "MultiscaleDiscriminator/conv2d_24/BiasAdd/ReadVariableOp/resource"
  input: "^MultiscaleDiscriminator_1/conv2d_24/BiasAdd/ReadVariableOp"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/conv2d_24/BiasAdd"
  op: "BiasAdd"
  input: "MultiscaleDiscriminator_2/conv2d_24/Conv2D"
  input: "MultiscaleDiscriminator_2/conv2d_24/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/leaky_re_lu/LeakyRelu"
  op: "LeakyRelu"
  input: "MultiscaleDiscriminator_2/conv2d_24/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.20000000298023224
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/conv2d_25/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "MultiscaleDiscriminator/conv2d_25/Conv2D/ReadVariableOp/resource"
  input: "^MultiscaleDiscriminator_1/conv2d_25/Conv2D/ReadVariableOp"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/conv2d_25/Conv2D"
  op: "Conv2D"
  input: "MultiscaleDiscriminator_2/leaky_re_lu/LeakyRelu"
  input: "MultiscaleDiscriminator_2/conv2d_25/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/conv2d_25/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "MultiscaleDiscriminator/conv2d_25/BiasAdd/ReadVariableOp/resource"
  input: "^MultiscaleDiscriminator_1/conv2d_25/BiasAdd/ReadVariableOp"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/conv2d_25/BiasAdd"
  op: "BiasAdd"
  input: "MultiscaleDiscriminator_2/conv2d_25/Conv2D"
  input: "MultiscaleDiscriminator_2/conv2d_25/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_27/Shape"
  op: "Shape"
  input: "MultiscaleDiscriminator_2/conv2d_25/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_27/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_27/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_27/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_27/strided_slice"
  op: "StridedSlice"
  input: "MultiscaleDiscriminator_2/instance_normalization_27/Shape"
  input: "MultiscaleDiscriminator_2/instance_normalization_27/strided_slice/stack"
  input: "MultiscaleDiscriminator_2/instance_normalization_27/strided_slice/stack_1"
  input: "MultiscaleDiscriminator_2/instance_normalization_27/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_27/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_27/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_27/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_27/strided_slice_1"
  op: "StridedSlice"
  input: "MultiscaleDiscriminator_2/instance_normalization_27/Shape"
  input: "MultiscaleDiscriminator_2/instance_normalization_27/strided_slice_1/stack"
  input: "MultiscaleDiscriminator_2/instance_normalization_27/strided_slice_1/stack_1"
  input: "MultiscaleDiscriminator_2/instance_normalization_27/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_27/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_27/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_27/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_27/strided_slice_2"
  op: "StridedSlice"
  input: "MultiscaleDiscriminator_2/instance_normalization_27/Shape"
  input: "MultiscaleDiscriminator_2/instance_normalization_27/strided_slice_2/stack"
  input: "MultiscaleDiscriminator_2/instance_normalization_27/strided_slice_2/stack_1"
  input: "MultiscaleDiscriminator_2/instance_normalization_27/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_27/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_27/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_27/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_27/strided_slice_3"
  op: "StridedSlice"
  input: "MultiscaleDiscriminator_2/instance_normalization_27/Shape"
  input: "MultiscaleDiscriminator_2/instance_normalization_27/strided_slice_3/stack"
  input: "MultiscaleDiscriminator_2/instance_normalization_27/strided_slice_3/stack_1"
  input: "MultiscaleDiscriminator_2/instance_normalization_27/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_27/stack/1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 128
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_27/stack/4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_27/stack"
  op: "Pack"
  input: "MultiscaleDiscriminator_2/instance_normalization_27/strided_slice"
  input: "MultiscaleDiscriminator_2/instance_normalization_27/stack/1"
  input: "MultiscaleDiscriminator_2/instance_normalization_27/strided_slice_1"
  input: "MultiscaleDiscriminator_2/instance_normalization_27/strided_slice_2"
  input: "MultiscaleDiscriminator_2/instance_normalization_27/stack/4"
  attr {
    key: "N"
    value {
      i: 5
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_27/Reshape"
  op: "Reshape"
  input: "MultiscaleDiscriminator_2/conv2d_25/BiasAdd"
  input: "MultiscaleDiscriminator_2/instance_normalization_27/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_27/moments/mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_27/moments/mean"
  op: "Mean"
  input: "MultiscaleDiscriminator_2/instance_normalization_27/Reshape"
  input: "MultiscaleDiscriminator_2/instance_normalization_27/moments/mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_27/moments/StopGradient"
  op: "StopGradient"
  input: "MultiscaleDiscriminator_2/instance_normalization_27/moments/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_27/moments/SquaredDifference"
  op: "SquaredDifference"
  input: "MultiscaleDiscriminator_2/instance_normalization_27/Reshape"
  input: "MultiscaleDiscriminator_2/instance_normalization_27/moments/StopGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_27/moments/variance/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_27/moments/variance"
  op: "Mean"
  input: "MultiscaleDiscriminator_2/instance_normalization_27/moments/SquaredDifference"
  input: "MultiscaleDiscriminator_2/instance_normalization_27/moments/variance/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_27/Reshape_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "MultiscaleDiscriminator/instance_normalization_27/Reshape_1/ReadVariableOp/resource"
  input: "^MultiscaleDiscriminator_1/instance_normalization_27/Reshape_1/ReadVariableOp"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_27/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_27/Reshape_1"
  op: "Reshape"
  input: "MultiscaleDiscriminator_2/instance_normalization_27/Reshape_1/ReadVariableOp"
  input: "MultiscaleDiscriminator_2/instance_normalization_27/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_27/Reshape_2/ReadVariableOp"
  op: "ReadVariableOp"
  input: "MultiscaleDiscriminator/instance_normalization_27/Reshape_2/ReadVariableOp/resource"
  input: "^MultiscaleDiscriminator_1/instance_normalization_27/Reshape_2/ReadVariableOp"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_27/Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_27/Reshape_2"
  op: "Reshape"
  input: "MultiscaleDiscriminator_2/instance_normalization_27/Reshape_2/ReadVariableOp"
  input: "MultiscaleDiscriminator_2/instance_normalization_27/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_27/batchnorm/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_27/batchnorm/add"
  op: "Add"
  input: "MultiscaleDiscriminator_2/instance_normalization_27/moments/variance"
  input: "MultiscaleDiscriminator_2/instance_normalization_27/batchnorm/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_27/batchnorm/Rsqrt"
  op: "Rsqrt"
  input: "MultiscaleDiscriminator_2/instance_normalization_27/batchnorm/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_27/batchnorm/mul"
  op: "Mul"
  input: "MultiscaleDiscriminator_2/instance_normalization_27/batchnorm/Rsqrt"
  input: "MultiscaleDiscriminator_2/instance_normalization_27/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_27/batchnorm/mul_1"
  op: "Mul"
  input: "MultiscaleDiscriminator_2/instance_normalization_27/Reshape"
  input: "MultiscaleDiscriminator_2/instance_normalization_27/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_27/batchnorm/mul_2"
  op: "Mul"
  input: "MultiscaleDiscriminator_2/instance_normalization_27/moments/mean"
  input: "MultiscaleDiscriminator_2/instance_normalization_27/batchnorm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_27/batchnorm/sub"
  op: "Sub"
  input: "MultiscaleDiscriminator_2/instance_normalization_27/Reshape_2"
  input: "MultiscaleDiscriminator_2/instance_normalization_27/batchnorm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_27/batchnorm/add_1"
  op: "Add"
  input: "MultiscaleDiscriminator_2/instance_normalization_27/batchnorm/mul_1"
  input: "MultiscaleDiscriminator_2/instance_normalization_27/batchnorm/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/instance_normalization_27/Reshape_3"
  op: "Reshape"
  input: "MultiscaleDiscriminator_2/instance_normalization_27/batchnorm/add_1"
  input: "MultiscaleDiscriminator_2/instance_normalization_27/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MultiscaleDiscriminator_2/leaky_re_lu_1/LeakyRelu"
  op: "LeakyRelu"
  input: "MultiscaleDiscriminator_2/instance_normalization_27/Reshape_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "alpha"
    value {
      f: 0.20000000298023224
    }
  }
}
node {
  name: "ones_like_2/Shape"
  op: "Shape"
  input: "MultiscaleDiscriminator_2/leaky_re_lu_5/LeakyRelu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ones_like_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ones_like_2"
  op: "Fill"
  input: "ones_like_2/Shape"
  input: "ones_like_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_squared_error_4/SquaredDifference"
  op: "SquaredDifference"
  input: "ones_like_2"
  input: "MultiscaleDiscriminator_2/leaky_re_lu_5/LeakyRelu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_squared_error_4/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "mean_squared_error_4/Mean"
  op: "Mean"
  input: "mean_squared_error_4/SquaredDifference"
  input: "mean_squared_error_4/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_squared_error_4/weighted_loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mean_squared_error_4/weighted_loss/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error_4/weighted_loss/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "mean_squared_error_4/weighted_loss/broadcast_weights/assert_broadcastable/values/shape"
  op: "Shape"
  input: "mean_squared_error_4/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_squared_error_4/weighted_loss/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "mean_squared_error_4/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "mean_squared_error_4/weighted_loss/broadcast_weights/ones_like/Shape"
  op: "Shape"
  input: "mean_squared_error_4/Mean"
  input: "^mean_squared_error_4/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_squared_error_4/weighted_loss/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^mean_squared_error_4/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mean_squared_error_4/weighted_loss/broadcast_weights/ones_like"
  op: "Fill"
  input: "mean_squared_error_4/weighted_loss/broadcast_weights/ones_like/Shape"
  input: "mean_squared_error_4/weighted_loss/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_squared_error_4/weighted_loss/broadcast_weights"
  op: "Mul"
  input: "mean_squared_error_4/weighted_loss/Const"
  input: "mean_squared_error_4/weighted_loss/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_squared_error_4/weighted_loss/Mul"
  op: "Mul"
  input: "mean_squared_error_4/Mean"
  input: "mean_squared_error_4/weighted_loss/broadcast_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_squared_error_4/weighted_loss/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "mean_squared_error_4/weighted_loss/Sum"
  op: "Sum"
  input: "mean_squared_error_4/weighted_loss/Mul"
  input: "mean_squared_error_4/weighted_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_squared_error_4/weighted_loss/num_elements"
  op: "Size"
  input: "mean_squared_error_4/weighted_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_squared_error_4/weighted_loss/num_elements/Cast"
  op: "Cast"
  input: "mean_squared_error_4/weighted_loss/num_elements"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "mean_squared_error_4/weighted_loss/mul_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mean_squared_error_4/weighted_loss/mul_1"
  op: "Mul"
  input: "mean_squared_error_4/weighted_loss/mul_1/x"
  input: "mean_squared_error_4/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_squared_error_4/weighted_loss/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error_4/weighted_loss/Sum_1"
  op: "Sum"
  input: "mean_squared_error_4/weighted_loss/Sum"
  input: "mean_squared_error_4/weighted_loss/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_squared_error_4/weighted_loss/value"
  op: "DivNoNan"
  input: "mean_squared_error_4/weighted_loss/Sum_1"
  input: "mean_squared_error_4/weighted_loss/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_4/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "add_4"
  op: "Add"
  input: "add_4/x"
  input: "mean_squared_error_4/weighted_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "ones_like_3/Shape"
  op: "Shape"
  input: "MultiscaleDiscriminator_2/leaky_re_lu_1/LeakyRelu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "ones_like_3/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "ones_like_3"
  op: "Fill"
  input: "ones_like_3/Shape"
  input: "ones_like_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_squared_error_5/SquaredDifference"
  op: "SquaredDifference"
  input: "ones_like_3"
  input: "MultiscaleDiscriminator_2/leaky_re_lu_1/LeakyRelu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_squared_error_5/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "mean_squared_error_5/Mean"
  op: "Mean"
  input: "mean_squared_error_5/SquaredDifference"
  input: "mean_squared_error_5/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_squared_error_5/weighted_loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mean_squared_error_5/weighted_loss/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error_5/weighted_loss/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "mean_squared_error_5/weighted_loss/broadcast_weights/assert_broadcastable/values/shape"
  op: "Shape"
  input: "mean_squared_error_5/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_squared_error_5/weighted_loss/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "mean_squared_error_5/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "mean_squared_error_5/weighted_loss/broadcast_weights/ones_like/Shape"
  op: "Shape"
  input: "mean_squared_error_5/Mean"
  input: "^mean_squared_error_5/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_squared_error_5/weighted_loss/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^mean_squared_error_5/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mean_squared_error_5/weighted_loss/broadcast_weights/ones_like"
  op: "Fill"
  input: "mean_squared_error_5/weighted_loss/broadcast_weights/ones_like/Shape"
  input: "mean_squared_error_5/weighted_loss/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_squared_error_5/weighted_loss/broadcast_weights"
  op: "Mul"
  input: "mean_squared_error_5/weighted_loss/Const"
  input: "mean_squared_error_5/weighted_loss/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_squared_error_5/weighted_loss/Mul"
  op: "Mul"
  input: "mean_squared_error_5/Mean"
  input: "mean_squared_error_5/weighted_loss/broadcast_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_squared_error_5/weighted_loss/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "mean_squared_error_5/weighted_loss/Sum"
  op: "Sum"
  input: "mean_squared_error_5/weighted_loss/Mul"
  input: "mean_squared_error_5/weighted_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_squared_error_5/weighted_loss/num_elements"
  op: "Size"
  input: "mean_squared_error_5/weighted_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_squared_error_5/weighted_loss/num_elements/Cast"
  op: "Cast"
  input: "mean_squared_error_5/weighted_loss/num_elements"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "mean_squared_error_5/weighted_loss/mul_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mean_squared_error_5/weighted_loss/mul_1"
  op: "Mul"
  input: "mean_squared_error_5/weighted_loss/mul_1/x"
  input: "mean_squared_error_5/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_squared_error_5/weighted_loss/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "mean_squared_error_5/weighted_loss/Sum_1"
  op: "Sum"
  input: "mean_squared_error_5/weighted_loss/Sum"
  input: "mean_squared_error_5/weighted_loss/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_squared_error_5/weighted_loss/value"
  op: "DivNoNan"
  input: "mean_squared_error_5/weighted_loss/Sum_1"
  input: "mean_squared_error_5/weighted_loss/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_5"
  op: "Add"
  input: "add_4"
  input: "mean_squared_error_5/weighted_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_absolute_error/sub"
  op: "Sub"
  input: "MultiscaleDiscriminator_1/conv2d_29/BiasAdd"
  input: "MultiscaleDiscriminator_2/conv2d_29/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_absolute_error/Abs"
  op: "Abs"
  input: "mean_absolute_error/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_absolute_error/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "mean_absolute_error/Mean"
  op: "Mean"
  input: "mean_absolute_error/Abs"
  input: "mean_absolute_error/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_absolute_error/weighted_loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mean_absolute_error/weighted_loss/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "mean_absolute_error/weighted_loss/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "mean_absolute_error/weighted_loss/broadcast_weights/assert_broadcastable/values/shape"
  op: "Shape"
  input: "mean_absolute_error/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_absolute_error/weighted_loss/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "mean_absolute_error/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "mean_absolute_error/weighted_loss/broadcast_weights/ones_like/Shape"
  op: "Shape"
  input: "mean_absolute_error/Mean"
  input: "^mean_absolute_error/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_absolute_error/weighted_loss/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^mean_absolute_error/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mean_absolute_error/weighted_loss/broadcast_weights/ones_like"
  op: "Fill"
  input: "mean_absolute_error/weighted_loss/broadcast_weights/ones_like/Shape"
  input: "mean_absolute_error/weighted_loss/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_absolute_error/weighted_loss/broadcast_weights"
  op: "Mul"
  input: "mean_absolute_error/weighted_loss/Const"
  input: "mean_absolute_error/weighted_loss/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_absolute_error/weighted_loss/Mul"
  op: "Mul"
  input: "mean_absolute_error/Mean"
  input: "mean_absolute_error/weighted_loss/broadcast_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_absolute_error/weighted_loss/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "mean_absolute_error/weighted_loss/Sum"
  op: "Sum"
  input: "mean_absolute_error/weighted_loss/Mul"
  input: "mean_absolute_error/weighted_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_absolute_error/weighted_loss/num_elements"
  op: "Size"
  input: "mean_absolute_error/weighted_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_absolute_error/weighted_loss/num_elements/Cast"
  op: "Cast"
  input: "mean_absolute_error/weighted_loss/num_elements"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "mean_absolute_error/weighted_loss/mul_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mean_absolute_error/weighted_loss/mul_1"
  op: "Mul"
  input: "mean_absolute_error/weighted_loss/mul_1/x"
  input: "mean_absolute_error/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_absolute_error/weighted_loss/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "mean_absolute_error/weighted_loss/Sum_1"
  op: "Sum"
  input: "mean_absolute_error/weighted_loss/Sum"
  input: "mean_absolute_error/weighted_loss/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_absolute_error/weighted_loss/value"
  op: "DivNoNan"
  input: "mean_absolute_error/weighted_loss/Sum_1"
  input: "mean_absolute_error/weighted_loss/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "mul"
  op: "Mul"
  input: "mul/x"
  input: "mean_absolute_error/weighted_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 10.0
      }
    }
  }
}
node {
  name: "mul_1"
  op: "Mul"
  input: "mul"
  input: "mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_6/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "add_6"
  op: "Add"
  input: "add_6/x"
  input: "mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_absolute_error_1/sub"
  op: "Sub"
  input: "MultiscaleDiscriminator_1/leaky_re_lu_4/LeakyRelu"
  input: "MultiscaleDiscriminator_2/leaky_re_lu_4/LeakyRelu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_absolute_error_1/Abs"
  op: "Abs"
  input: "mean_absolute_error_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_absolute_error_1/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "mean_absolute_error_1/Mean"
  op: "Mean"
  input: "mean_absolute_error_1/Abs"
  input: "mean_absolute_error_1/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_absolute_error_1/weighted_loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mean_absolute_error_1/weighted_loss/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "mean_absolute_error_1/weighted_loss/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "mean_absolute_error_1/weighted_loss/broadcast_weights/assert_broadcastable/values/shape"
  op: "Shape"
  input: "mean_absolute_error_1/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_absolute_error_1/weighted_loss/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "mean_absolute_error_1/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "mean_absolute_error_1/weighted_loss/broadcast_weights/ones_like/Shape"
  op: "Shape"
  input: "mean_absolute_error_1/Mean"
  input: "^mean_absolute_error_1/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_absolute_error_1/weighted_loss/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^mean_absolute_error_1/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mean_absolute_error_1/weighted_loss/broadcast_weights/ones_like"
  op: "Fill"
  input: "mean_absolute_error_1/weighted_loss/broadcast_weights/ones_like/Shape"
  input: "mean_absolute_error_1/weighted_loss/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_absolute_error_1/weighted_loss/broadcast_weights"
  op: "Mul"
  input: "mean_absolute_error_1/weighted_loss/Const"
  input: "mean_absolute_error_1/weighted_loss/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_absolute_error_1/weighted_loss/Mul"
  op: "Mul"
  input: "mean_absolute_error_1/Mean"
  input: "mean_absolute_error_1/weighted_loss/broadcast_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_absolute_error_1/weighted_loss/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "mean_absolute_error_1/weighted_loss/Sum"
  op: "Sum"
  input: "mean_absolute_error_1/weighted_loss/Mul"
  input: "mean_absolute_error_1/weighted_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_absolute_error_1/weighted_loss/num_elements"
  op: "Size"
  input: "mean_absolute_error_1/weighted_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_absolute_error_1/weighted_loss/num_elements/Cast"
  op: "Cast"
  input: "mean_absolute_error_1/weighted_loss/num_elements"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "mean_absolute_error_1/weighted_loss/mul_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mean_absolute_error_1/weighted_loss/mul_1"
  op: "Mul"
  input: "mean_absolute_error_1/weighted_loss/mul_1/x"
  input: "mean_absolute_error_1/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_absolute_error_1/weighted_loss/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "mean_absolute_error_1/weighted_loss/Sum_1"
  op: "Sum"
  input: "mean_absolute_error_1/weighted_loss/Sum"
  input: "mean_absolute_error_1/weighted_loss/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_absolute_error_1/weighted_loss/value"
  op: "DivNoNan"
  input: "mean_absolute_error_1/weighted_loss/Sum_1"
  input: "mean_absolute_error_1/weighted_loss/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "mul_2"
  op: "Mul"
  input: "mul_2/x"
  input: "mean_absolute_error_1/weighted_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 10.0
      }
    }
  }
}
node {
  name: "mul_3"
  op: "Mul"
  input: "mul_2"
  input: "mul_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_7"
  op: "Add"
  input: "add_6"
  input: "mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_absolute_error_2/sub"
  op: "Sub"
  input: "MultiscaleDiscriminator_1/conv2d_30/BiasAdd"
  input: "MultiscaleDiscriminator_2/conv2d_30/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_absolute_error_2/Abs"
  op: "Abs"
  input: "mean_absolute_error_2/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_absolute_error_2/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "mean_absolute_error_2/Mean"
  op: "Mean"
  input: "mean_absolute_error_2/Abs"
  input: "mean_absolute_error_2/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_absolute_error_2/weighted_loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mean_absolute_error_2/weighted_loss/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "mean_absolute_error_2/weighted_loss/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "mean_absolute_error_2/weighted_loss/broadcast_weights/assert_broadcastable/values/shape"
  op: "Shape"
  input: "mean_absolute_error_2/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_absolute_error_2/weighted_loss/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "mean_absolute_error_2/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "mean_absolute_error_2/weighted_loss/broadcast_weights/ones_like/Shape"
  op: "Shape"
  input: "mean_absolute_error_2/Mean"
  input: "^mean_absolute_error_2/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_absolute_error_2/weighted_loss/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^mean_absolute_error_2/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mean_absolute_error_2/weighted_loss/broadcast_weights/ones_like"
  op: "Fill"
  input: "mean_absolute_error_2/weighted_loss/broadcast_weights/ones_like/Shape"
  input: "mean_absolute_error_2/weighted_loss/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_absolute_error_2/weighted_loss/broadcast_weights"
  op: "Mul"
  input: "mean_absolute_error_2/weighted_loss/Const"
  input: "mean_absolute_error_2/weighted_loss/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_absolute_error_2/weighted_loss/Mul"
  op: "Mul"
  input: "mean_absolute_error_2/Mean"
  input: "mean_absolute_error_2/weighted_loss/broadcast_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_absolute_error_2/weighted_loss/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "mean_absolute_error_2/weighted_loss/Sum"
  op: "Sum"
  input: "mean_absolute_error_2/weighted_loss/Mul"
  input: "mean_absolute_error_2/weighted_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_absolute_error_2/weighted_loss/num_elements"
  op: "Size"
  input: "mean_absolute_error_2/weighted_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_absolute_error_2/weighted_loss/num_elements/Cast"
  op: "Cast"
  input: "mean_absolute_error_2/weighted_loss/num_elements"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "mean_absolute_error_2/weighted_loss/mul_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mean_absolute_error_2/weighted_loss/mul_1"
  op: "Mul"
  input: "mean_absolute_error_2/weighted_loss/mul_1/x"
  input: "mean_absolute_error_2/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_absolute_error_2/weighted_loss/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "mean_absolute_error_2/weighted_loss/Sum_1"
  op: "Sum"
  input: "mean_absolute_error_2/weighted_loss/Sum"
  input: "mean_absolute_error_2/weighted_loss/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_absolute_error_2/weighted_loss/value"
  op: "DivNoNan"
  input: "mean_absolute_error_2/weighted_loss/Sum_1"
  input: "mean_absolute_error_2/weighted_loss/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_4/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "mul_4"
  op: "Mul"
  input: "mul_4/x"
  input: "mean_absolute_error_2/weighted_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_5/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 10.0
      }
    }
  }
}
node {
  name: "mul_5"
  op: "Mul"
  input: "mul_4"
  input: "mul_5/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_8"
  op: "Add"
  input: "add_7"
  input: "mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_absolute_error_3/sub"
  op: "Sub"
  input: "MultiscaleDiscriminator_1/instance_normalization_30/Reshape_3"
  input: "MultiscaleDiscriminator_2/instance_normalization_30/Reshape_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_absolute_error_3/Abs"
  op: "Abs"
  input: "mean_absolute_error_3/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_absolute_error_3/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "mean_absolute_error_3/Mean"
  op: "Mean"
  input: "mean_absolute_error_3/Abs"
  input: "mean_absolute_error_3/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_absolute_error_3/weighted_loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mean_absolute_error_3/weighted_loss/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "mean_absolute_error_3/weighted_loss/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "mean_absolute_error_3/weighted_loss/broadcast_weights/assert_broadcastable/values/shape"
  op: "Shape"
  input: "mean_absolute_error_3/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_absolute_error_3/weighted_loss/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "mean_absolute_error_3/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "mean_absolute_error_3/weighted_loss/broadcast_weights/ones_like/Shape"
  op: "Shape"
  input: "mean_absolute_error_3/Mean"
  input: "^mean_absolute_error_3/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_absolute_error_3/weighted_loss/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^mean_absolute_error_3/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mean_absolute_error_3/weighted_loss/broadcast_weights/ones_like"
  op: "Fill"
  input: "mean_absolute_error_3/weighted_loss/broadcast_weights/ones_like/Shape"
  input: "mean_absolute_error_3/weighted_loss/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_absolute_error_3/weighted_loss/broadcast_weights"
  op: "Mul"
  input: "mean_absolute_error_3/weighted_loss/Const"
  input: "mean_absolute_error_3/weighted_loss/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_absolute_error_3/weighted_loss/Mul"
  op: "Mul"
  input: "mean_absolute_error_3/Mean"
  input: "mean_absolute_error_3/weighted_loss/broadcast_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_absolute_error_3/weighted_loss/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "mean_absolute_error_3/weighted_loss/Sum"
  op: "Sum"
  input: "mean_absolute_error_3/weighted_loss/Mul"
  input: "mean_absolute_error_3/weighted_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_absolute_error_3/weighted_loss/num_elements"
  op: "Size"
  input: "mean_absolute_error_3/weighted_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_absolute_error_3/weighted_loss/num_elements/Cast"
  op: "Cast"
  input: "mean_absolute_error_3/weighted_loss/num_elements"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "mean_absolute_error_3/weighted_loss/mul_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mean_absolute_error_3/weighted_loss/mul_1"
  op: "Mul"
  input: "mean_absolute_error_3/weighted_loss/mul_1/x"
  input: "mean_absolute_error_3/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_absolute_error_3/weighted_loss/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "mean_absolute_error_3/weighted_loss/Sum_1"
  op: "Sum"
  input: "mean_absolute_error_3/weighted_loss/Sum"
  input: "mean_absolute_error_3/weighted_loss/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_absolute_error_3/weighted_loss/value"
  op: "DivNoNan"
  input: "mean_absolute_error_3/weighted_loss/Sum_1"
  input: "mean_absolute_error_3/weighted_loss/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_6/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "mul_6"
  op: "Mul"
  input: "mul_6/x"
  input: "mean_absolute_error_3/weighted_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_7/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 10.0
      }
    }
  }
}
node {
  name: "mul_7"
  op: "Mul"
  input: "mul_6"
  input: "mul_7/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_9"
  op: "Add"
  input: "add_8"
  input: "mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_absolute_error_4/sub"
  op: "Sub"
  input: "MultiscaleDiscriminator_1/conv2d_24/BiasAdd"
  input: "MultiscaleDiscriminator_2/conv2d_24/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_absolute_error_4/Abs"
  op: "Abs"
  input: "mean_absolute_error_4/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_absolute_error_4/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "mean_absolute_error_4/Mean"
  op: "Mean"
  input: "mean_absolute_error_4/Abs"
  input: "mean_absolute_error_4/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_absolute_error_4/weighted_loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mean_absolute_error_4/weighted_loss/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "mean_absolute_error_4/weighted_loss/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "mean_absolute_error_4/weighted_loss/broadcast_weights/assert_broadcastable/values/shape"
  op: "Shape"
  input: "mean_absolute_error_4/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_absolute_error_4/weighted_loss/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "mean_absolute_error_4/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "mean_absolute_error_4/weighted_loss/broadcast_weights/ones_like/Shape"
  op: "Shape"
  input: "mean_absolute_error_4/Mean"
  input: "^mean_absolute_error_4/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_absolute_error_4/weighted_loss/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^mean_absolute_error_4/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mean_absolute_error_4/weighted_loss/broadcast_weights/ones_like"
  op: "Fill"
  input: "mean_absolute_error_4/weighted_loss/broadcast_weights/ones_like/Shape"
  input: "mean_absolute_error_4/weighted_loss/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_absolute_error_4/weighted_loss/broadcast_weights"
  op: "Mul"
  input: "mean_absolute_error_4/weighted_loss/Const"
  input: "mean_absolute_error_4/weighted_loss/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_absolute_error_4/weighted_loss/Mul"
  op: "Mul"
  input: "mean_absolute_error_4/Mean"
  input: "mean_absolute_error_4/weighted_loss/broadcast_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_absolute_error_4/weighted_loss/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "mean_absolute_error_4/weighted_loss/Sum"
  op: "Sum"
  input: "mean_absolute_error_4/weighted_loss/Mul"
  input: "mean_absolute_error_4/weighted_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_absolute_error_4/weighted_loss/num_elements"
  op: "Size"
  input: "mean_absolute_error_4/weighted_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_absolute_error_4/weighted_loss/num_elements/Cast"
  op: "Cast"
  input: "mean_absolute_error_4/weighted_loss/num_elements"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "mean_absolute_error_4/weighted_loss/mul_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mean_absolute_error_4/weighted_loss/mul_1"
  op: "Mul"
  input: "mean_absolute_error_4/weighted_loss/mul_1/x"
  input: "mean_absolute_error_4/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_absolute_error_4/weighted_loss/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "mean_absolute_error_4/weighted_loss/Sum_1"
  op: "Sum"
  input: "mean_absolute_error_4/weighted_loss/Sum"
  input: "mean_absolute_error_4/weighted_loss/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_absolute_error_4/weighted_loss/value"
  op: "DivNoNan"
  input: "mean_absolute_error_4/weighted_loss/Sum_1"
  input: "mean_absolute_error_4/weighted_loss/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_8/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "mul_8"
  op: "Mul"
  input: "mul_8/x"
  input: "mean_absolute_error_4/weighted_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_9/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 10.0
      }
    }
  }
}
node {
  name: "mul_9"
  op: "Mul"
  input: "mul_8"
  input: "mul_9/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_10"
  op: "Add"
  input: "add_9"
  input: "mul_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_absolute_error_5/sub"
  op: "Sub"
  input: "MultiscaleDiscriminator_1/leaky_re_lu/LeakyRelu"
  input: "MultiscaleDiscriminator_2/leaky_re_lu/LeakyRelu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_absolute_error_5/Abs"
  op: "Abs"
  input: "mean_absolute_error_5/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_absolute_error_5/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "mean_absolute_error_5/Mean"
  op: "Mean"
  input: "mean_absolute_error_5/Abs"
  input: "mean_absolute_error_5/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_absolute_error_5/weighted_loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mean_absolute_error_5/weighted_loss/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "mean_absolute_error_5/weighted_loss/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "mean_absolute_error_5/weighted_loss/broadcast_weights/assert_broadcastable/values/shape"
  op: "Shape"
  input: "mean_absolute_error_5/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_absolute_error_5/weighted_loss/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "mean_absolute_error_5/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "mean_absolute_error_5/weighted_loss/broadcast_weights/ones_like/Shape"
  op: "Shape"
  input: "mean_absolute_error_5/Mean"
  input: "^mean_absolute_error_5/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_absolute_error_5/weighted_loss/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^mean_absolute_error_5/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mean_absolute_error_5/weighted_loss/broadcast_weights/ones_like"
  op: "Fill"
  input: "mean_absolute_error_5/weighted_loss/broadcast_weights/ones_like/Shape"
  input: "mean_absolute_error_5/weighted_loss/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_absolute_error_5/weighted_loss/broadcast_weights"
  op: "Mul"
  input: "mean_absolute_error_5/weighted_loss/Const"
  input: "mean_absolute_error_5/weighted_loss/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_absolute_error_5/weighted_loss/Mul"
  op: "Mul"
  input: "mean_absolute_error_5/Mean"
  input: "mean_absolute_error_5/weighted_loss/broadcast_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_absolute_error_5/weighted_loss/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "mean_absolute_error_5/weighted_loss/Sum"
  op: "Sum"
  input: "mean_absolute_error_5/weighted_loss/Mul"
  input: "mean_absolute_error_5/weighted_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_absolute_error_5/weighted_loss/num_elements"
  op: "Size"
  input: "mean_absolute_error_5/weighted_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_absolute_error_5/weighted_loss/num_elements/Cast"
  op: "Cast"
  input: "mean_absolute_error_5/weighted_loss/num_elements"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "mean_absolute_error_5/weighted_loss/mul_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mean_absolute_error_5/weighted_loss/mul_1"
  op: "Mul"
  input: "mean_absolute_error_5/weighted_loss/mul_1/x"
  input: "mean_absolute_error_5/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_absolute_error_5/weighted_loss/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "mean_absolute_error_5/weighted_loss/Sum_1"
  op: "Sum"
  input: "mean_absolute_error_5/weighted_loss/Sum"
  input: "mean_absolute_error_5/weighted_loss/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_absolute_error_5/weighted_loss/value"
  op: "DivNoNan"
  input: "mean_absolute_error_5/weighted_loss/Sum_1"
  input: "mean_absolute_error_5/weighted_loss/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_10/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "mul_10"
  op: "Mul"
  input: "mul_10/x"
  input: "mean_absolute_error_5/weighted_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_11/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 10.0
      }
    }
  }
}
node {
  name: "mul_11"
  op: "Mul"
  input: "mul_10"
  input: "mul_11/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_11"
  op: "Add"
  input: "add_10"
  input: "mul_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_absolute_error_6/sub"
  op: "Sub"
  input: "MultiscaleDiscriminator_1/conv2d_25/BiasAdd"
  input: "MultiscaleDiscriminator_2/conv2d_25/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_absolute_error_6/Abs"
  op: "Abs"
  input: "mean_absolute_error_6/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_absolute_error_6/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "mean_absolute_error_6/Mean"
  op: "Mean"
  input: "mean_absolute_error_6/Abs"
  input: "mean_absolute_error_6/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_absolute_error_6/weighted_loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mean_absolute_error_6/weighted_loss/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "mean_absolute_error_6/weighted_loss/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "mean_absolute_error_6/weighted_loss/broadcast_weights/assert_broadcastable/values/shape"
  op: "Shape"
  input: "mean_absolute_error_6/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_absolute_error_6/weighted_loss/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "mean_absolute_error_6/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "mean_absolute_error_6/weighted_loss/broadcast_weights/ones_like/Shape"
  op: "Shape"
  input: "mean_absolute_error_6/Mean"
  input: "^mean_absolute_error_6/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_absolute_error_6/weighted_loss/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^mean_absolute_error_6/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mean_absolute_error_6/weighted_loss/broadcast_weights/ones_like"
  op: "Fill"
  input: "mean_absolute_error_6/weighted_loss/broadcast_weights/ones_like/Shape"
  input: "mean_absolute_error_6/weighted_loss/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_absolute_error_6/weighted_loss/broadcast_weights"
  op: "Mul"
  input: "mean_absolute_error_6/weighted_loss/Const"
  input: "mean_absolute_error_6/weighted_loss/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_absolute_error_6/weighted_loss/Mul"
  op: "Mul"
  input: "mean_absolute_error_6/Mean"
  input: "mean_absolute_error_6/weighted_loss/broadcast_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_absolute_error_6/weighted_loss/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "mean_absolute_error_6/weighted_loss/Sum"
  op: "Sum"
  input: "mean_absolute_error_6/weighted_loss/Mul"
  input: "mean_absolute_error_6/weighted_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_absolute_error_6/weighted_loss/num_elements"
  op: "Size"
  input: "mean_absolute_error_6/weighted_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_absolute_error_6/weighted_loss/num_elements/Cast"
  op: "Cast"
  input: "mean_absolute_error_6/weighted_loss/num_elements"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "mean_absolute_error_6/weighted_loss/mul_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mean_absolute_error_6/weighted_loss/mul_1"
  op: "Mul"
  input: "mean_absolute_error_6/weighted_loss/mul_1/x"
  input: "mean_absolute_error_6/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_absolute_error_6/weighted_loss/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "mean_absolute_error_6/weighted_loss/Sum_1"
  op: "Sum"
  input: "mean_absolute_error_6/weighted_loss/Sum"
  input: "mean_absolute_error_6/weighted_loss/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_absolute_error_6/weighted_loss/value"
  op: "DivNoNan"
  input: "mean_absolute_error_6/weighted_loss/Sum_1"
  input: "mean_absolute_error_6/weighted_loss/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_12/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "mul_12"
  op: "Mul"
  input: "mul_12/x"
  input: "mean_absolute_error_6/weighted_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_13/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 10.0
      }
    }
  }
}
node {
  name: "mul_13"
  op: "Mul"
  input: "mul_12"
  input: "mul_13/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_12"
  op: "Add"
  input: "add_11"
  input: "mul_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_absolute_error_7/sub"
  op: "Sub"
  input: "MultiscaleDiscriminator_1/instance_normalization_27/Reshape_3"
  input: "MultiscaleDiscriminator_2/instance_normalization_27/Reshape_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_absolute_error_7/Abs"
  op: "Abs"
  input: "mean_absolute_error_7/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_absolute_error_7/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "mean_absolute_error_7/Mean"
  op: "Mean"
  input: "mean_absolute_error_7/Abs"
  input: "mean_absolute_error_7/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_absolute_error_7/weighted_loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mean_absolute_error_7/weighted_loss/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "mean_absolute_error_7/weighted_loss/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "mean_absolute_error_7/weighted_loss/broadcast_weights/assert_broadcastable/values/shape"
  op: "Shape"
  input: "mean_absolute_error_7/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_absolute_error_7/weighted_loss/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "mean_absolute_error_7/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "mean_absolute_error_7/weighted_loss/broadcast_weights/ones_like/Shape"
  op: "Shape"
  input: "mean_absolute_error_7/Mean"
  input: "^mean_absolute_error_7/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_absolute_error_7/weighted_loss/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^mean_absolute_error_7/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mean_absolute_error_7/weighted_loss/broadcast_weights/ones_like"
  op: "Fill"
  input: "mean_absolute_error_7/weighted_loss/broadcast_weights/ones_like/Shape"
  input: "mean_absolute_error_7/weighted_loss/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_absolute_error_7/weighted_loss/broadcast_weights"
  op: "Mul"
  input: "mean_absolute_error_7/weighted_loss/Const"
  input: "mean_absolute_error_7/weighted_loss/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_absolute_error_7/weighted_loss/Mul"
  op: "Mul"
  input: "mean_absolute_error_7/Mean"
  input: "mean_absolute_error_7/weighted_loss/broadcast_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_absolute_error_7/weighted_loss/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "mean_absolute_error_7/weighted_loss/Sum"
  op: "Sum"
  input: "mean_absolute_error_7/weighted_loss/Mul"
  input: "mean_absolute_error_7/weighted_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_absolute_error_7/weighted_loss/num_elements"
  op: "Size"
  input: "mean_absolute_error_7/weighted_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "mean_absolute_error_7/weighted_loss/num_elements/Cast"
  op: "Cast"
  input: "mean_absolute_error_7/weighted_loss/num_elements"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "mean_absolute_error_7/weighted_loss/mul_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "mean_absolute_error_7/weighted_loss/mul_1"
  op: "Mul"
  input: "mean_absolute_error_7/weighted_loss/mul_1/x"
  input: "mean_absolute_error_7/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mean_absolute_error_7/weighted_loss/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "mean_absolute_error_7/weighted_loss/Sum_1"
  op: "Sum"
  input: "mean_absolute_error_7/weighted_loss/Sum"
  input: "mean_absolute_error_7/weighted_loss/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "mean_absolute_error_7/weighted_loss/value"
  op: "DivNoNan"
  input: "mean_absolute_error_7/weighted_loss/Sum_1"
  input: "mean_absolute_error_7/weighted_loss/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_14/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.5
      }
    }
  }
}
node {
  name: "mul_14"
  op: "Mul"
  input: "mul_14/x"
  input: "mean_absolute_error_7/weighted_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_15/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 10.0
      }
    }
  }
}
node {
  name: "mul_15"
  op: "Mul"
  input: "mul_14"
  input: "mul_15/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_13"
  op: "Add"
  input: "add_12"
  input: "mul_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_17/block1_conv1/Conv2D/ReadVariableOp/resource"
  op: "Placeholder"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_17/block1_conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "VGGLoss/Vgg19/sequential_17/block1_conv1/Conv2D/ReadVariableOp/resource"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_17/block1_conv1/Conv2D"
  op: "Conv2D"
  input: "global_generator/StatefulPartitionedCall"
  input: "VGGLoss/Vgg19/sequential_17/block1_conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_17/block1_conv1/BiasAdd/ReadVariableOp/resource"
  op: "Placeholder"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_17/block1_conv1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "VGGLoss/Vgg19/sequential_17/block1_conv1/BiasAdd/ReadVariableOp/resource"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_17/block1_conv1/BiasAdd"
  op: "BiasAdd"
  input: "VGGLoss/Vgg19/sequential_17/block1_conv1/Conv2D"
  input: "VGGLoss/Vgg19/sequential_17/block1_conv1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_17/block1_conv1/Relu"
  op: "Relu"
  input: "VGGLoss/Vgg19/sequential_17/block1_conv1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_18/block1_conv2/Conv2D/ReadVariableOp/resource"
  op: "Placeholder"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_18/block1_conv2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "VGGLoss/Vgg19/sequential_18/block1_conv2/Conv2D/ReadVariableOp/resource"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_18/block1_conv2/Conv2D"
  op: "Conv2D"
  input: "VGGLoss/Vgg19/sequential_17/block1_conv1/Relu"
  input: "VGGLoss/Vgg19/sequential_18/block1_conv2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_18/block1_conv2/BiasAdd/ReadVariableOp/resource"
  op: "Placeholder"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_18/block1_conv2/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "VGGLoss/Vgg19/sequential_18/block1_conv2/BiasAdd/ReadVariableOp/resource"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_18/block1_conv2/BiasAdd"
  op: "BiasAdd"
  input: "VGGLoss/Vgg19/sequential_18/block1_conv2/Conv2D"
  input: "VGGLoss/Vgg19/sequential_18/block1_conv2/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_18/block1_conv2/Relu"
  op: "Relu"
  input: "VGGLoss/Vgg19/sequential_18/block1_conv2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_18/block1_pool/MaxPool"
  op: "MaxPool"
  input: "VGGLoss/Vgg19/sequential_18/block1_conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_18/block2_conv1/Conv2D/ReadVariableOp/resource"
  op: "Placeholder"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_18/block2_conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "VGGLoss/Vgg19/sequential_18/block2_conv1/Conv2D/ReadVariableOp/resource"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_18/block2_conv1/Conv2D"
  op: "Conv2D"
  input: "VGGLoss/Vgg19/sequential_18/block1_pool/MaxPool"
  input: "VGGLoss/Vgg19/sequential_18/block2_conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_18/block2_conv1/BiasAdd/ReadVariableOp/resource"
  op: "Placeholder"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_18/block2_conv1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "VGGLoss/Vgg19/sequential_18/block2_conv1/BiasAdd/ReadVariableOp/resource"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_18/block2_conv1/BiasAdd"
  op: "BiasAdd"
  input: "VGGLoss/Vgg19/sequential_18/block2_conv1/Conv2D"
  input: "VGGLoss/Vgg19/sequential_18/block2_conv1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_18/block2_conv1/Relu"
  op: "Relu"
  input: "VGGLoss/Vgg19/sequential_18/block2_conv1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_19/block2_conv2/Conv2D/ReadVariableOp/resource"
  op: "Placeholder"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_19/block2_conv2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "VGGLoss/Vgg19/sequential_19/block2_conv2/Conv2D/ReadVariableOp/resource"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_19/block2_conv2/Conv2D"
  op: "Conv2D"
  input: "VGGLoss/Vgg19/sequential_18/block2_conv1/Relu"
  input: "VGGLoss/Vgg19/sequential_19/block2_conv2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_19/block2_conv2/BiasAdd/ReadVariableOp/resource"
  op: "Placeholder"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_19/block2_conv2/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "VGGLoss/Vgg19/sequential_19/block2_conv2/BiasAdd/ReadVariableOp/resource"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_19/block2_conv2/BiasAdd"
  op: "BiasAdd"
  input: "VGGLoss/Vgg19/sequential_19/block2_conv2/Conv2D"
  input: "VGGLoss/Vgg19/sequential_19/block2_conv2/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_19/block2_conv2/Relu"
  op: "Relu"
  input: "VGGLoss/Vgg19/sequential_19/block2_conv2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_19/block2_pool/MaxPool"
  op: "MaxPool"
  input: "VGGLoss/Vgg19/sequential_19/block2_conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_19/block3_conv1/Conv2D/ReadVariableOp/resource"
  op: "Placeholder"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_19/block3_conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "VGGLoss/Vgg19/sequential_19/block3_conv1/Conv2D/ReadVariableOp/resource"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_19/block3_conv1/Conv2D"
  op: "Conv2D"
  input: "VGGLoss/Vgg19/sequential_19/block2_pool/MaxPool"
  input: "VGGLoss/Vgg19/sequential_19/block3_conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_19/block3_conv1/BiasAdd/ReadVariableOp/resource"
  op: "Placeholder"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_19/block3_conv1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "VGGLoss/Vgg19/sequential_19/block3_conv1/BiasAdd/ReadVariableOp/resource"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_19/block3_conv1/BiasAdd"
  op: "BiasAdd"
  input: "VGGLoss/Vgg19/sequential_19/block3_conv1/Conv2D"
  input: "VGGLoss/Vgg19/sequential_19/block3_conv1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_19/block3_conv1/Relu"
  op: "Relu"
  input: "VGGLoss/Vgg19/sequential_19/block3_conv1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_20/block3_conv2/Conv2D/ReadVariableOp/resource"
  op: "Placeholder"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_20/block3_conv2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "VGGLoss/Vgg19/sequential_20/block3_conv2/Conv2D/ReadVariableOp/resource"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_20/block3_conv2/Conv2D"
  op: "Conv2D"
  input: "VGGLoss/Vgg19/sequential_19/block3_conv1/Relu"
  input: "VGGLoss/Vgg19/sequential_20/block3_conv2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_20/block3_conv2/BiasAdd/ReadVariableOp/resource"
  op: "Placeholder"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_20/block3_conv2/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "VGGLoss/Vgg19/sequential_20/block3_conv2/BiasAdd/ReadVariableOp/resource"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_20/block3_conv2/BiasAdd"
  op: "BiasAdd"
  input: "VGGLoss/Vgg19/sequential_20/block3_conv2/Conv2D"
  input: "VGGLoss/Vgg19/sequential_20/block3_conv2/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_20/block3_conv2/Relu"
  op: "Relu"
  input: "VGGLoss/Vgg19/sequential_20/block3_conv2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_20/block3_conv3/Conv2D/ReadVariableOp/resource"
  op: "Placeholder"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_20/block3_conv3/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "VGGLoss/Vgg19/sequential_20/block3_conv3/Conv2D/ReadVariableOp/resource"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_20/block3_conv3/Conv2D"
  op: "Conv2D"
  input: "VGGLoss/Vgg19/sequential_20/block3_conv2/Relu"
  input: "VGGLoss/Vgg19/sequential_20/block3_conv3/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_20/block3_conv3/BiasAdd/ReadVariableOp/resource"
  op: "Placeholder"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_20/block3_conv3/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "VGGLoss/Vgg19/sequential_20/block3_conv3/BiasAdd/ReadVariableOp/resource"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_20/block3_conv3/BiasAdd"
  op: "BiasAdd"
  input: "VGGLoss/Vgg19/sequential_20/block3_conv3/Conv2D"
  input: "VGGLoss/Vgg19/sequential_20/block3_conv3/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_20/block3_conv3/Relu"
  op: "Relu"
  input: "VGGLoss/Vgg19/sequential_20/block3_conv3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_20/block3_conv4/Conv2D/ReadVariableOp/resource"
  op: "Placeholder"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_20/block3_conv4/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "VGGLoss/Vgg19/sequential_20/block3_conv4/Conv2D/ReadVariableOp/resource"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_20/block3_conv4/Conv2D"
  op: "Conv2D"
  input: "VGGLoss/Vgg19/sequential_20/block3_conv3/Relu"
  input: "VGGLoss/Vgg19/sequential_20/block3_conv4/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_20/block3_conv4/BiasAdd/ReadVariableOp/resource"
  op: "Placeholder"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_20/block3_conv4/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "VGGLoss/Vgg19/sequential_20/block3_conv4/BiasAdd/ReadVariableOp/resource"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_20/block3_conv4/BiasAdd"
  op: "BiasAdd"
  input: "VGGLoss/Vgg19/sequential_20/block3_conv4/Conv2D"
  input: "VGGLoss/Vgg19/sequential_20/block3_conv4/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_20/block3_conv4/Relu"
  op: "Relu"
  input: "VGGLoss/Vgg19/sequential_20/block3_conv4/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_20/block3_pool/MaxPool"
  op: "MaxPool"
  input: "VGGLoss/Vgg19/sequential_20/block3_conv4/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_20/block4_conv1/Conv2D/ReadVariableOp/resource"
  op: "Placeholder"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_20/block4_conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "VGGLoss/Vgg19/sequential_20/block4_conv1/Conv2D/ReadVariableOp/resource"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_20/block4_conv1/Conv2D"
  op: "Conv2D"
  input: "VGGLoss/Vgg19/sequential_20/block3_pool/MaxPool"
  input: "VGGLoss/Vgg19/sequential_20/block4_conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_20/block4_conv1/BiasAdd/ReadVariableOp/resource"
  op: "Placeholder"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_20/block4_conv1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "VGGLoss/Vgg19/sequential_20/block4_conv1/BiasAdd/ReadVariableOp/resource"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_20/block4_conv1/BiasAdd"
  op: "BiasAdd"
  input: "VGGLoss/Vgg19/sequential_20/block4_conv1/Conv2D"
  input: "VGGLoss/Vgg19/sequential_20/block4_conv1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_20/block4_conv1/Relu"
  op: "Relu"
  input: "VGGLoss/Vgg19/sequential_20/block4_conv1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_21/block4_conv2/Conv2D/ReadVariableOp/resource"
  op: "Placeholder"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_21/block4_conv2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "VGGLoss/Vgg19/sequential_21/block4_conv2/Conv2D/ReadVariableOp/resource"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_21/block4_conv2/Conv2D"
  op: "Conv2D"
  input: "VGGLoss/Vgg19/sequential_20/block4_conv1/Relu"
  input: "VGGLoss/Vgg19/sequential_21/block4_conv2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_21/block4_conv2/BiasAdd/ReadVariableOp/resource"
  op: "Placeholder"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_21/block4_conv2/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "VGGLoss/Vgg19/sequential_21/block4_conv2/BiasAdd/ReadVariableOp/resource"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_21/block4_conv2/BiasAdd"
  op: "BiasAdd"
  input: "VGGLoss/Vgg19/sequential_21/block4_conv2/Conv2D"
  input: "VGGLoss/Vgg19/sequential_21/block4_conv2/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_21/block4_conv2/Relu"
  op: "Relu"
  input: "VGGLoss/Vgg19/sequential_21/block4_conv2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_21/block4_conv3/Conv2D/ReadVariableOp/resource"
  op: "Placeholder"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_21/block4_conv3/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "VGGLoss/Vgg19/sequential_21/block4_conv3/Conv2D/ReadVariableOp/resource"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_21/block4_conv3/Conv2D"
  op: "Conv2D"
  input: "VGGLoss/Vgg19/sequential_21/block4_conv2/Relu"
  input: "VGGLoss/Vgg19/sequential_21/block4_conv3/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_21/block4_conv3/BiasAdd/ReadVariableOp/resource"
  op: "Placeholder"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_21/block4_conv3/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "VGGLoss/Vgg19/sequential_21/block4_conv3/BiasAdd/ReadVariableOp/resource"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_21/block4_conv3/BiasAdd"
  op: "BiasAdd"
  input: "VGGLoss/Vgg19/sequential_21/block4_conv3/Conv2D"
  input: "VGGLoss/Vgg19/sequential_21/block4_conv3/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_21/block4_conv3/Relu"
  op: "Relu"
  input: "VGGLoss/Vgg19/sequential_21/block4_conv3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_21/block4_conv4/Conv2D/ReadVariableOp/resource"
  op: "Placeholder"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_21/block4_conv4/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "VGGLoss/Vgg19/sequential_21/block4_conv4/Conv2D/ReadVariableOp/resource"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_21/block4_conv4/Conv2D"
  op: "Conv2D"
  input: "VGGLoss/Vgg19/sequential_21/block4_conv3/Relu"
  input: "VGGLoss/Vgg19/sequential_21/block4_conv4/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_21/block4_conv4/BiasAdd/ReadVariableOp/resource"
  op: "Placeholder"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_21/block4_conv4/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "VGGLoss/Vgg19/sequential_21/block4_conv4/BiasAdd/ReadVariableOp/resource"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_21/block4_conv4/BiasAdd"
  op: "BiasAdd"
  input: "VGGLoss/Vgg19/sequential_21/block4_conv4/Conv2D"
  input: "VGGLoss/Vgg19/sequential_21/block4_conv4/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_21/block4_conv4/Relu"
  op: "Relu"
  input: "VGGLoss/Vgg19/sequential_21/block4_conv4/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_21/block4_pool/MaxPool"
  op: "MaxPool"
  input: "VGGLoss/Vgg19/sequential_21/block4_conv4/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_21/block5_conv1/Conv2D/ReadVariableOp/resource"
  op: "Placeholder"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_21/block5_conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "VGGLoss/Vgg19/sequential_21/block5_conv1/Conv2D/ReadVariableOp/resource"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_21/block5_conv1/Conv2D"
  op: "Conv2D"
  input: "VGGLoss/Vgg19/sequential_21/block4_pool/MaxPool"
  input: "VGGLoss/Vgg19/sequential_21/block5_conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_21/block5_conv1/BiasAdd/ReadVariableOp/resource"
  op: "Placeholder"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_21/block5_conv1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "VGGLoss/Vgg19/sequential_21/block5_conv1/BiasAdd/ReadVariableOp/resource"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_21/block5_conv1/BiasAdd"
  op: "BiasAdd"
  input: "VGGLoss/Vgg19/sequential_21/block5_conv1/Conv2D"
  input: "VGGLoss/Vgg19/sequential_21/block5_conv1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "VGGLoss/Vgg19/sequential_21/block5_conv1/Relu"
  op: "Relu"
  input: "VGGLoss/Vgg19/sequential_21/block5_conv1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_17/block1_conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "VGGLoss/Vgg19/sequential_17/block1_conv1/Conv2D/ReadVariableOp/resource"
  input: "^VGGLoss/Vgg19/sequential_17/block1_conv1/Conv2D/ReadVariableOp"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_17/block1_conv1/Conv2D"
  op: "Conv2D"
  input: "real_img"
  input: "VGGLoss/Vgg19_1/sequential_17/block1_conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_17/block1_conv1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "VGGLoss/Vgg19/sequential_17/block1_conv1/BiasAdd/ReadVariableOp/resource"
  input: "^VGGLoss/Vgg19/sequential_17/block1_conv1/BiasAdd/ReadVariableOp"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_17/block1_conv1/BiasAdd"
  op: "BiasAdd"
  input: "VGGLoss/Vgg19_1/sequential_17/block1_conv1/Conv2D"
  input: "VGGLoss/Vgg19_1/sequential_17/block1_conv1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_17/block1_conv1/Relu"
  op: "Relu"
  input: "VGGLoss/Vgg19_1/sequential_17/block1_conv1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_18/block1_conv2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "VGGLoss/Vgg19/sequential_18/block1_conv2/Conv2D/ReadVariableOp/resource"
  input: "^VGGLoss/Vgg19/sequential_18/block1_conv2/Conv2D/ReadVariableOp"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_18/block1_conv2/Conv2D"
  op: "Conv2D"
  input: "VGGLoss/Vgg19_1/sequential_17/block1_conv1/Relu"
  input: "VGGLoss/Vgg19_1/sequential_18/block1_conv2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_18/block1_conv2/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "VGGLoss/Vgg19/sequential_18/block1_conv2/BiasAdd/ReadVariableOp/resource"
  input: "^VGGLoss/Vgg19/sequential_18/block1_conv2/BiasAdd/ReadVariableOp"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_18/block1_conv2/BiasAdd"
  op: "BiasAdd"
  input: "VGGLoss/Vgg19_1/sequential_18/block1_conv2/Conv2D"
  input: "VGGLoss/Vgg19_1/sequential_18/block1_conv2/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_18/block1_conv2/Relu"
  op: "Relu"
  input: "VGGLoss/Vgg19_1/sequential_18/block1_conv2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_18/block1_pool/MaxPool"
  op: "MaxPool"
  input: "VGGLoss/Vgg19_1/sequential_18/block1_conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_18/block2_conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "VGGLoss/Vgg19/sequential_18/block2_conv1/Conv2D/ReadVariableOp/resource"
  input: "^VGGLoss/Vgg19/sequential_18/block2_conv1/Conv2D/ReadVariableOp"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_18/block2_conv1/Conv2D"
  op: "Conv2D"
  input: "VGGLoss/Vgg19_1/sequential_18/block1_pool/MaxPool"
  input: "VGGLoss/Vgg19_1/sequential_18/block2_conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_18/block2_conv1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "VGGLoss/Vgg19/sequential_18/block2_conv1/BiasAdd/ReadVariableOp/resource"
  input: "^VGGLoss/Vgg19/sequential_18/block2_conv1/BiasAdd/ReadVariableOp"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_18/block2_conv1/BiasAdd"
  op: "BiasAdd"
  input: "VGGLoss/Vgg19_1/sequential_18/block2_conv1/Conv2D"
  input: "VGGLoss/Vgg19_1/sequential_18/block2_conv1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_18/block2_conv1/Relu"
  op: "Relu"
  input: "VGGLoss/Vgg19_1/sequential_18/block2_conv1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_19/block2_conv2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "VGGLoss/Vgg19/sequential_19/block2_conv2/Conv2D/ReadVariableOp/resource"
  input: "^VGGLoss/Vgg19/sequential_19/block2_conv2/Conv2D/ReadVariableOp"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_19/block2_conv2/Conv2D"
  op: "Conv2D"
  input: "VGGLoss/Vgg19_1/sequential_18/block2_conv1/Relu"
  input: "VGGLoss/Vgg19_1/sequential_19/block2_conv2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_19/block2_conv2/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "VGGLoss/Vgg19/sequential_19/block2_conv2/BiasAdd/ReadVariableOp/resource"
  input: "^VGGLoss/Vgg19/sequential_19/block2_conv2/BiasAdd/ReadVariableOp"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_19/block2_conv2/BiasAdd"
  op: "BiasAdd"
  input: "VGGLoss/Vgg19_1/sequential_19/block2_conv2/Conv2D"
  input: "VGGLoss/Vgg19_1/sequential_19/block2_conv2/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_19/block2_conv2/Relu"
  op: "Relu"
  input: "VGGLoss/Vgg19_1/sequential_19/block2_conv2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_19/block2_pool/MaxPool"
  op: "MaxPool"
  input: "VGGLoss/Vgg19_1/sequential_19/block2_conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_19/block3_conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "VGGLoss/Vgg19/sequential_19/block3_conv1/Conv2D/ReadVariableOp/resource"
  input: "^VGGLoss/Vgg19/sequential_19/block3_conv1/Conv2D/ReadVariableOp"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_19/block3_conv1/Conv2D"
  op: "Conv2D"
  input: "VGGLoss/Vgg19_1/sequential_19/block2_pool/MaxPool"
  input: "VGGLoss/Vgg19_1/sequential_19/block3_conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_19/block3_conv1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "VGGLoss/Vgg19/sequential_19/block3_conv1/BiasAdd/ReadVariableOp/resource"
  input: "^VGGLoss/Vgg19/sequential_19/block3_conv1/BiasAdd/ReadVariableOp"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_19/block3_conv1/BiasAdd"
  op: "BiasAdd"
  input: "VGGLoss/Vgg19_1/sequential_19/block3_conv1/Conv2D"
  input: "VGGLoss/Vgg19_1/sequential_19/block3_conv1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_19/block3_conv1/Relu"
  op: "Relu"
  input: "VGGLoss/Vgg19_1/sequential_19/block3_conv1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_20/block3_conv2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "VGGLoss/Vgg19/sequential_20/block3_conv2/Conv2D/ReadVariableOp/resource"
  input: "^VGGLoss/Vgg19/sequential_20/block3_conv2/Conv2D/ReadVariableOp"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_20/block3_conv2/Conv2D"
  op: "Conv2D"
  input: "VGGLoss/Vgg19_1/sequential_19/block3_conv1/Relu"
  input: "VGGLoss/Vgg19_1/sequential_20/block3_conv2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_20/block3_conv2/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "VGGLoss/Vgg19/sequential_20/block3_conv2/BiasAdd/ReadVariableOp/resource"
  input: "^VGGLoss/Vgg19/sequential_20/block3_conv2/BiasAdd/ReadVariableOp"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_20/block3_conv2/BiasAdd"
  op: "BiasAdd"
  input: "VGGLoss/Vgg19_1/sequential_20/block3_conv2/Conv2D"
  input: "VGGLoss/Vgg19_1/sequential_20/block3_conv2/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_20/block3_conv2/Relu"
  op: "Relu"
  input: "VGGLoss/Vgg19_1/sequential_20/block3_conv2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_20/block3_conv3/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "VGGLoss/Vgg19/sequential_20/block3_conv3/Conv2D/ReadVariableOp/resource"
  input: "^VGGLoss/Vgg19/sequential_20/block3_conv3/Conv2D/ReadVariableOp"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_20/block3_conv3/Conv2D"
  op: "Conv2D"
  input: "VGGLoss/Vgg19_1/sequential_20/block3_conv2/Relu"
  input: "VGGLoss/Vgg19_1/sequential_20/block3_conv3/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_20/block3_conv3/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "VGGLoss/Vgg19/sequential_20/block3_conv3/BiasAdd/ReadVariableOp/resource"
  input: "^VGGLoss/Vgg19/sequential_20/block3_conv3/BiasAdd/ReadVariableOp"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_20/block3_conv3/BiasAdd"
  op: "BiasAdd"
  input: "VGGLoss/Vgg19_1/sequential_20/block3_conv3/Conv2D"
  input: "VGGLoss/Vgg19_1/sequential_20/block3_conv3/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_20/block3_conv3/Relu"
  op: "Relu"
  input: "VGGLoss/Vgg19_1/sequential_20/block3_conv3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_20/block3_conv4/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "VGGLoss/Vgg19/sequential_20/block3_conv4/Conv2D/ReadVariableOp/resource"
  input: "^VGGLoss/Vgg19/sequential_20/block3_conv4/Conv2D/ReadVariableOp"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_20/block3_conv4/Conv2D"
  op: "Conv2D"
  input: "VGGLoss/Vgg19_1/sequential_20/block3_conv3/Relu"
  input: "VGGLoss/Vgg19_1/sequential_20/block3_conv4/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_20/block3_conv4/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "VGGLoss/Vgg19/sequential_20/block3_conv4/BiasAdd/ReadVariableOp/resource"
  input: "^VGGLoss/Vgg19/sequential_20/block3_conv4/BiasAdd/ReadVariableOp"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_20/block3_conv4/BiasAdd"
  op: "BiasAdd"
  input: "VGGLoss/Vgg19_1/sequential_20/block3_conv4/Conv2D"
  input: "VGGLoss/Vgg19_1/sequential_20/block3_conv4/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_20/block3_conv4/Relu"
  op: "Relu"
  input: "VGGLoss/Vgg19_1/sequential_20/block3_conv4/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_20/block3_pool/MaxPool"
  op: "MaxPool"
  input: "VGGLoss/Vgg19_1/sequential_20/block3_conv4/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_20/block4_conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "VGGLoss/Vgg19/sequential_20/block4_conv1/Conv2D/ReadVariableOp/resource"
  input: "^VGGLoss/Vgg19/sequential_20/block4_conv1/Conv2D/ReadVariableOp"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_20/block4_conv1/Conv2D"
  op: "Conv2D"
  input: "VGGLoss/Vgg19_1/sequential_20/block3_pool/MaxPool"
  input: "VGGLoss/Vgg19_1/sequential_20/block4_conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_20/block4_conv1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "VGGLoss/Vgg19/sequential_20/block4_conv1/BiasAdd/ReadVariableOp/resource"
  input: "^VGGLoss/Vgg19/sequential_20/block4_conv1/BiasAdd/ReadVariableOp"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_20/block4_conv1/BiasAdd"
  op: "BiasAdd"
  input: "VGGLoss/Vgg19_1/sequential_20/block4_conv1/Conv2D"
  input: "VGGLoss/Vgg19_1/sequential_20/block4_conv1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_20/block4_conv1/Relu"
  op: "Relu"
  input: "VGGLoss/Vgg19_1/sequential_20/block4_conv1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_21/block4_conv2/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "VGGLoss/Vgg19/sequential_21/block4_conv2/Conv2D/ReadVariableOp/resource"
  input: "^VGGLoss/Vgg19/sequential_21/block4_conv2/Conv2D/ReadVariableOp"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_21/block4_conv2/Conv2D"
  op: "Conv2D"
  input: "VGGLoss/Vgg19_1/sequential_20/block4_conv1/Relu"
  input: "VGGLoss/Vgg19_1/sequential_21/block4_conv2/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_21/block4_conv2/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "VGGLoss/Vgg19/sequential_21/block4_conv2/BiasAdd/ReadVariableOp/resource"
  input: "^VGGLoss/Vgg19/sequential_21/block4_conv2/BiasAdd/ReadVariableOp"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_21/block4_conv2/BiasAdd"
  op: "BiasAdd"
  input: "VGGLoss/Vgg19_1/sequential_21/block4_conv2/Conv2D"
  input: "VGGLoss/Vgg19_1/sequential_21/block4_conv2/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_21/block4_conv2/Relu"
  op: "Relu"
  input: "VGGLoss/Vgg19_1/sequential_21/block4_conv2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_21/block4_conv3/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "VGGLoss/Vgg19/sequential_21/block4_conv3/Conv2D/ReadVariableOp/resource"
  input: "^VGGLoss/Vgg19/sequential_21/block4_conv3/Conv2D/ReadVariableOp"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_21/block4_conv3/Conv2D"
  op: "Conv2D"
  input: "VGGLoss/Vgg19_1/sequential_21/block4_conv2/Relu"
  input: "VGGLoss/Vgg19_1/sequential_21/block4_conv3/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_21/block4_conv3/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "VGGLoss/Vgg19/sequential_21/block4_conv3/BiasAdd/ReadVariableOp/resource"
  input: "^VGGLoss/Vgg19/sequential_21/block4_conv3/BiasAdd/ReadVariableOp"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_21/block4_conv3/BiasAdd"
  op: "BiasAdd"
  input: "VGGLoss/Vgg19_1/sequential_21/block4_conv3/Conv2D"
  input: "VGGLoss/Vgg19_1/sequential_21/block4_conv3/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_21/block4_conv3/Relu"
  op: "Relu"
  input: "VGGLoss/Vgg19_1/sequential_21/block4_conv3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_21/block4_conv4/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "VGGLoss/Vgg19/sequential_21/block4_conv4/Conv2D/ReadVariableOp/resource"
  input: "^VGGLoss/Vgg19/sequential_21/block4_conv4/Conv2D/ReadVariableOp"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_21/block4_conv4/Conv2D"
  op: "Conv2D"
  input: "VGGLoss/Vgg19_1/sequential_21/block4_conv3/Relu"
  input: "VGGLoss/Vgg19_1/sequential_21/block4_conv4/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_21/block4_conv4/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "VGGLoss/Vgg19/sequential_21/block4_conv4/BiasAdd/ReadVariableOp/resource"
  input: "^VGGLoss/Vgg19/sequential_21/block4_conv4/BiasAdd/ReadVariableOp"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_21/block4_conv4/BiasAdd"
  op: "BiasAdd"
  input: "VGGLoss/Vgg19_1/sequential_21/block4_conv4/Conv2D"
  input: "VGGLoss/Vgg19_1/sequential_21/block4_conv4/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_21/block4_conv4/Relu"
  op: "Relu"
  input: "VGGLoss/Vgg19_1/sequential_21/block4_conv4/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_21/block4_pool/MaxPool"
  op: "MaxPool"
  input: "VGGLoss/Vgg19_1/sequential_21/block4_conv4/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_21/block5_conv1/Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "VGGLoss/Vgg19/sequential_21/block5_conv1/Conv2D/ReadVariableOp/resource"
  input: "^VGGLoss/Vgg19/sequential_21/block5_conv1/Conv2D/ReadVariableOp"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_21/block5_conv1/Conv2D"
  op: "Conv2D"
  input: "VGGLoss/Vgg19_1/sequential_21/block4_pool/MaxPool"
  input: "VGGLoss/Vgg19_1/sequential_21/block5_conv1/Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_21/block5_conv1/BiasAdd/ReadVariableOp"
  op: "ReadVariableOp"
  input: "VGGLoss/Vgg19/sequential_21/block5_conv1/BiasAdd/ReadVariableOp/resource"
  input: "^VGGLoss/Vgg19/sequential_21/block5_conv1/BiasAdd/ReadVariableOp"
  device: "/job:localhost/replica:0/task:0/device:GPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_21/block5_conv1/BiasAdd"
  op: "BiasAdd"
  input: "VGGLoss/Vgg19_1/sequential_21/block5_conv1/Conv2D"
  input: "VGGLoss/Vgg19_1/sequential_21/block5_conv1/BiasAdd/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "VGGLoss/Vgg19_1/sequential_21/block5_conv1/Relu"
  op: "Relu"
  input: "VGGLoss/Vgg19_1/sequential_21/block5_conv1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/StopGradient"
  op: "StopGradient"
  input: "VGGLoss/Vgg19_1/sequential_17/block1_conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error/sub"
  op: "Sub"
  input: "VGGLoss/StopGradient"
  input: "VGGLoss/Vgg19/sequential_17/block1_conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error/Abs"
  op: "Abs"
  input: "VGGLoss/mean_absolute_error/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error/Mean"
  op: "Mean"
  input: "VGGLoss/mean_absolute_error/Abs"
  input: "VGGLoss/mean_absolute_error/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error/weighted_loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error/weighted_loss/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error/weighted_loss/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error/weighted_loss/broadcast_weights/assert_broadcastable/values/shape"
  op: "Shape"
  input: "VGGLoss/mean_absolute_error/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error/weighted_loss/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "VGGLoss/mean_absolute_error/weighted_loss/broadcast_weights/ones_like/Shape"
  op: "Shape"
  input: "VGGLoss/mean_absolute_error/Mean"
  input: "^VGGLoss/mean_absolute_error/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error/weighted_loss/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^VGGLoss/mean_absolute_error/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error/weighted_loss/broadcast_weights/ones_like"
  op: "Fill"
  input: "VGGLoss/mean_absolute_error/weighted_loss/broadcast_weights/ones_like/Shape"
  input: "VGGLoss/mean_absolute_error/weighted_loss/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error/weighted_loss/broadcast_weights"
  op: "Mul"
  input: "VGGLoss/mean_absolute_error/weighted_loss/Const"
  input: "VGGLoss/mean_absolute_error/weighted_loss/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error/weighted_loss/Mul"
  op: "Mul"
  input: "VGGLoss/mean_absolute_error/Mean"
  input: "VGGLoss/mean_absolute_error/weighted_loss/broadcast_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error/weighted_loss/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error/weighted_loss/Sum"
  op: "Sum"
  input: "VGGLoss/mean_absolute_error/weighted_loss/Mul"
  input: "VGGLoss/mean_absolute_error/weighted_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error/weighted_loss/num_elements"
  op: "Size"
  input: "VGGLoss/mean_absolute_error/weighted_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error/weighted_loss/num_elements/Cast"
  op: "Cast"
  input: "VGGLoss/mean_absolute_error/weighted_loss/num_elements"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error/weighted_loss/mul_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error/weighted_loss/mul_1"
  op: "Mul"
  input: "VGGLoss/mean_absolute_error/weighted_loss/mul_1/x"
  input: "VGGLoss/mean_absolute_error/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error/weighted_loss/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error/weighted_loss/Sum_1"
  op: "Sum"
  input: "VGGLoss/mean_absolute_error/weighted_loss/Sum"
  input: "VGGLoss/mean_absolute_error/weighted_loss/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error/weighted_loss/value"
  op: "DivNoNan"
  input: "VGGLoss/mean_absolute_error/weighted_loss/Sum_1"
  input: "VGGLoss/mean_absolute_error/weighted_loss/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03125
      }
    }
  }
}
node {
  name: "VGGLoss/mul"
  op: "Mul"
  input: "VGGLoss/mul/x"
  input: "VGGLoss/mean_absolute_error/weighted_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/add/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "VGGLoss/add"
  op: "Add"
  input: "VGGLoss/add/x"
  input: "VGGLoss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/StopGradient_1"
  op: "StopGradient"
  input: "VGGLoss/Vgg19_1/sequential_18/block2_conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_1/sub"
  op: "Sub"
  input: "VGGLoss/StopGradient_1"
  input: "VGGLoss/Vgg19/sequential_18/block2_conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_1/Abs"
  op: "Abs"
  input: "VGGLoss/mean_absolute_error_1/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_1/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_1/Mean"
  op: "Mean"
  input: "VGGLoss/mean_absolute_error_1/Abs"
  input: "VGGLoss/mean_absolute_error_1/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_1/weighted_loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_1/weighted_loss/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_1/weighted_loss/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_1/weighted_loss/broadcast_weights/assert_broadcastable/values/shape"
  op: "Shape"
  input: "VGGLoss/mean_absolute_error_1/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_1/weighted_loss/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_1/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "VGGLoss/mean_absolute_error_1/weighted_loss/broadcast_weights/ones_like/Shape"
  op: "Shape"
  input: "VGGLoss/mean_absolute_error_1/Mean"
  input: "^VGGLoss/mean_absolute_error_1/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_1/weighted_loss/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^VGGLoss/mean_absolute_error_1/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_1/weighted_loss/broadcast_weights/ones_like"
  op: "Fill"
  input: "VGGLoss/mean_absolute_error_1/weighted_loss/broadcast_weights/ones_like/Shape"
  input: "VGGLoss/mean_absolute_error_1/weighted_loss/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_1/weighted_loss/broadcast_weights"
  op: "Mul"
  input: "VGGLoss/mean_absolute_error_1/weighted_loss/Const"
  input: "VGGLoss/mean_absolute_error_1/weighted_loss/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_1/weighted_loss/Mul"
  op: "Mul"
  input: "VGGLoss/mean_absolute_error_1/Mean"
  input: "VGGLoss/mean_absolute_error_1/weighted_loss/broadcast_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_1/weighted_loss/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_1/weighted_loss/Sum"
  op: "Sum"
  input: "VGGLoss/mean_absolute_error_1/weighted_loss/Mul"
  input: "VGGLoss/mean_absolute_error_1/weighted_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_1/weighted_loss/num_elements"
  op: "Size"
  input: "VGGLoss/mean_absolute_error_1/weighted_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_1/weighted_loss/num_elements/Cast"
  op: "Cast"
  input: "VGGLoss/mean_absolute_error_1/weighted_loss/num_elements"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_1/weighted_loss/mul_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_1/weighted_loss/mul_1"
  op: "Mul"
  input: "VGGLoss/mean_absolute_error_1/weighted_loss/mul_1/x"
  input: "VGGLoss/mean_absolute_error_1/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_1/weighted_loss/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_1/weighted_loss/Sum_1"
  op: "Sum"
  input: "VGGLoss/mean_absolute_error_1/weighted_loss/Sum"
  input: "VGGLoss/mean_absolute_error_1/weighted_loss/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_1/weighted_loss/value"
  op: "DivNoNan"
  input: "VGGLoss/mean_absolute_error_1/weighted_loss/Sum_1"
  input: "VGGLoss/mean_absolute_error_1/weighted_loss/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/mul_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0625
      }
    }
  }
}
node {
  name: "VGGLoss/mul_1"
  op: "Mul"
  input: "VGGLoss/mul_1/x"
  input: "VGGLoss/mean_absolute_error_1/weighted_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/add_1"
  op: "Add"
  input: "VGGLoss/add"
  input: "VGGLoss/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/StopGradient_2"
  op: "StopGradient"
  input: "VGGLoss/Vgg19_1/sequential_19/block3_conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_2/sub"
  op: "Sub"
  input: "VGGLoss/StopGradient_2"
  input: "VGGLoss/Vgg19/sequential_19/block3_conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_2/Abs"
  op: "Abs"
  input: "VGGLoss/mean_absolute_error_2/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_2/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_2/Mean"
  op: "Mean"
  input: "VGGLoss/mean_absolute_error_2/Abs"
  input: "VGGLoss/mean_absolute_error_2/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_2/weighted_loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_2/weighted_loss/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_2/weighted_loss/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_2/weighted_loss/broadcast_weights/assert_broadcastable/values/shape"
  op: "Shape"
  input: "VGGLoss/mean_absolute_error_2/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_2/weighted_loss/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_2/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "VGGLoss/mean_absolute_error_2/weighted_loss/broadcast_weights/ones_like/Shape"
  op: "Shape"
  input: "VGGLoss/mean_absolute_error_2/Mean"
  input: "^VGGLoss/mean_absolute_error_2/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_2/weighted_loss/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^VGGLoss/mean_absolute_error_2/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_2/weighted_loss/broadcast_weights/ones_like"
  op: "Fill"
  input: "VGGLoss/mean_absolute_error_2/weighted_loss/broadcast_weights/ones_like/Shape"
  input: "VGGLoss/mean_absolute_error_2/weighted_loss/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_2/weighted_loss/broadcast_weights"
  op: "Mul"
  input: "VGGLoss/mean_absolute_error_2/weighted_loss/Const"
  input: "VGGLoss/mean_absolute_error_2/weighted_loss/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_2/weighted_loss/Mul"
  op: "Mul"
  input: "VGGLoss/mean_absolute_error_2/Mean"
  input: "VGGLoss/mean_absolute_error_2/weighted_loss/broadcast_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_2/weighted_loss/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_2/weighted_loss/Sum"
  op: "Sum"
  input: "VGGLoss/mean_absolute_error_2/weighted_loss/Mul"
  input: "VGGLoss/mean_absolute_error_2/weighted_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_2/weighted_loss/num_elements"
  op: "Size"
  input: "VGGLoss/mean_absolute_error_2/weighted_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_2/weighted_loss/num_elements/Cast"
  op: "Cast"
  input: "VGGLoss/mean_absolute_error_2/weighted_loss/num_elements"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_2/weighted_loss/mul_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_2/weighted_loss/mul_1"
  op: "Mul"
  input: "VGGLoss/mean_absolute_error_2/weighted_loss/mul_1/x"
  input: "VGGLoss/mean_absolute_error_2/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_2/weighted_loss/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_2/weighted_loss/Sum_1"
  op: "Sum"
  input: "VGGLoss/mean_absolute_error_2/weighted_loss/Sum"
  input: "VGGLoss/mean_absolute_error_2/weighted_loss/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_2/weighted_loss/value"
  op: "DivNoNan"
  input: "VGGLoss/mean_absolute_error_2/weighted_loss/Sum_1"
  input: "VGGLoss/mean_absolute_error_2/weighted_loss/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/mul_2/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "VGGLoss/mul_2"
  op: "Mul"
  input: "VGGLoss/mul_2/x"
  input: "VGGLoss/mean_absolute_error_2/weighted_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/add_2"
  op: "Add"
  input: "VGGLoss/add_1"
  input: "VGGLoss/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/StopGradient_3"
  op: "StopGradient"
  input: "VGGLoss/Vgg19_1/sequential_20/block4_conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_3/sub"
  op: "Sub"
  input: "VGGLoss/StopGradient_3"
  input: "VGGLoss/Vgg19/sequential_20/block4_conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_3/Abs"
  op: "Abs"
  input: "VGGLoss/mean_absolute_error_3/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_3/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_3/Mean"
  op: "Mean"
  input: "VGGLoss/mean_absolute_error_3/Abs"
  input: "VGGLoss/mean_absolute_error_3/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_3/weighted_loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_3/weighted_loss/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_3/weighted_loss/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_3/weighted_loss/broadcast_weights/assert_broadcastable/values/shape"
  op: "Shape"
  input: "VGGLoss/mean_absolute_error_3/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_3/weighted_loss/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_3/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "VGGLoss/mean_absolute_error_3/weighted_loss/broadcast_weights/ones_like/Shape"
  op: "Shape"
  input: "VGGLoss/mean_absolute_error_3/Mean"
  input: "^VGGLoss/mean_absolute_error_3/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_3/weighted_loss/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^VGGLoss/mean_absolute_error_3/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_3/weighted_loss/broadcast_weights/ones_like"
  op: "Fill"
  input: "VGGLoss/mean_absolute_error_3/weighted_loss/broadcast_weights/ones_like/Shape"
  input: "VGGLoss/mean_absolute_error_3/weighted_loss/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_3/weighted_loss/broadcast_weights"
  op: "Mul"
  input: "VGGLoss/mean_absolute_error_3/weighted_loss/Const"
  input: "VGGLoss/mean_absolute_error_3/weighted_loss/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_3/weighted_loss/Mul"
  op: "Mul"
  input: "VGGLoss/mean_absolute_error_3/Mean"
  input: "VGGLoss/mean_absolute_error_3/weighted_loss/broadcast_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_3/weighted_loss/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_3/weighted_loss/Sum"
  op: "Sum"
  input: "VGGLoss/mean_absolute_error_3/weighted_loss/Mul"
  input: "VGGLoss/mean_absolute_error_3/weighted_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_3/weighted_loss/num_elements"
  op: "Size"
  input: "VGGLoss/mean_absolute_error_3/weighted_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_3/weighted_loss/num_elements/Cast"
  op: "Cast"
  input: "VGGLoss/mean_absolute_error_3/weighted_loss/num_elements"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_3/weighted_loss/mul_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_3/weighted_loss/mul_1"
  op: "Mul"
  input: "VGGLoss/mean_absolute_error_3/weighted_loss/mul_1/x"
  input: "VGGLoss/mean_absolute_error_3/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_3/weighted_loss/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_3/weighted_loss/Sum_1"
  op: "Sum"
  input: "VGGLoss/mean_absolute_error_3/weighted_loss/Sum"
  input: "VGGLoss/mean_absolute_error_3/weighted_loss/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_3/weighted_loss/value"
  op: "DivNoNan"
  input: "VGGLoss/mean_absolute_error_3/weighted_loss/Sum_1"
  input: "VGGLoss/mean_absolute_error_3/weighted_loss/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/mul_3/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.25
      }
    }
  }
}
node {
  name: "VGGLoss/mul_3"
  op: "Mul"
  input: "VGGLoss/mul_3/x"
  input: "VGGLoss/mean_absolute_error_3/weighted_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/add_3"
  op: "Add"
  input: "VGGLoss/add_2"
  input: "VGGLoss/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/StopGradient_4"
  op: "StopGradient"
  input: "VGGLoss/Vgg19_1/sequential_21/block5_conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_4/sub"
  op: "Sub"
  input: "VGGLoss/StopGradient_4"
  input: "VGGLoss/Vgg19/sequential_21/block5_conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_4/Abs"
  op: "Abs"
  input: "VGGLoss/mean_absolute_error_4/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_4/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_4/Mean"
  op: "Mean"
  input: "VGGLoss/mean_absolute_error_4/Abs"
  input: "VGGLoss/mean_absolute_error_4/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_4/weighted_loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_4/weighted_loss/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_4/weighted_loss/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_4/weighted_loss/broadcast_weights/assert_broadcastable/values/shape"
  op: "Shape"
  input: "VGGLoss/mean_absolute_error_4/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_4/weighted_loss/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_4/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "VGGLoss/mean_absolute_error_4/weighted_loss/broadcast_weights/ones_like/Shape"
  op: "Shape"
  input: "VGGLoss/mean_absolute_error_4/Mean"
  input: "^VGGLoss/mean_absolute_error_4/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_4/weighted_loss/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^VGGLoss/mean_absolute_error_4/weighted_loss/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_4/weighted_loss/broadcast_weights/ones_like"
  op: "Fill"
  input: "VGGLoss/mean_absolute_error_4/weighted_loss/broadcast_weights/ones_like/Shape"
  input: "VGGLoss/mean_absolute_error_4/weighted_loss/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_4/weighted_loss/broadcast_weights"
  op: "Mul"
  input: "VGGLoss/mean_absolute_error_4/weighted_loss/Const"
  input: "VGGLoss/mean_absolute_error_4/weighted_loss/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_4/weighted_loss/Mul"
  op: "Mul"
  input: "VGGLoss/mean_absolute_error_4/Mean"
  input: "VGGLoss/mean_absolute_error_4/weighted_loss/broadcast_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_4/weighted_loss/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_4/weighted_loss/Sum"
  op: "Sum"
  input: "VGGLoss/mean_absolute_error_4/weighted_loss/Mul"
  input: "VGGLoss/mean_absolute_error_4/weighted_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_4/weighted_loss/num_elements"
  op: "Size"
  input: "VGGLoss/mean_absolute_error_4/weighted_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_4/weighted_loss/num_elements/Cast"
  op: "Cast"
  input: "VGGLoss/mean_absolute_error_4/weighted_loss/num_elements"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_4/weighted_loss/mul_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_4/weighted_loss/mul_1"
  op: "Mul"
  input: "VGGLoss/mean_absolute_error_4/weighted_loss/mul_1/x"
  input: "VGGLoss/mean_absolute_error_4/weighted_loss/num_elements/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_4/weighted_loss/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_4/weighted_loss/Sum_1"
  op: "Sum"
  input: "VGGLoss/mean_absolute_error_4/weighted_loss/Sum"
  input: "VGGLoss/mean_absolute_error_4/weighted_loss/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "VGGLoss/mean_absolute_error_4/weighted_loss/value"
  op: "DivNoNan"
  input: "VGGLoss/mean_absolute_error_4/weighted_loss/Sum_1"
  input: "VGGLoss/mean_absolute_error_4/weighted_loss/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/mul_4/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "VGGLoss/mul_4"
  op: "Mul"
  input: "VGGLoss/mul_4/x"
  input: "VGGLoss/mean_absolute_error_4/weighted_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "VGGLoss/add_4"
  op: "Add"
  input: "VGGLoss/add_3"
  input: "VGGLoss/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "mul_16/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 10.0
      }
    }
  }
}
node {
  name: "mul_16"
  op: "Mul"
  input: "VGGLoss/add_4"
  input: "mul_16/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Identity"
  op: "Identity"
  input: "add_1"
  input: "^MultiscaleDiscriminator/conv2d_24/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator/conv2d_24/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator/conv2d_25/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator/conv2d_25/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator/conv2d_29/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator/conv2d_29/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator/conv2d_30/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator/conv2d_30/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator/instance_normalization_27/Reshape_1/ReadVariableOp"
  input: "^MultiscaleDiscriminator/instance_normalization_27/Reshape_2/ReadVariableOp"
  input: "^MultiscaleDiscriminator/instance_normalization_30/Reshape_1/ReadVariableOp"
  input: "^MultiscaleDiscriminator/instance_normalization_30/Reshape_2/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/conv2d_24/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/conv2d_24/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/conv2d_25/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/conv2d_25/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/conv2d_29/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/conv2d_29/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/conv2d_30/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/conv2d_30/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/instance_normalization_27/Reshape_1/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/instance_normalization_27/Reshape_2/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/instance_normalization_30/Reshape_1/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/instance_normalization_30/Reshape_2/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/conv2d_24/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/conv2d_24/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/conv2d_25/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/conv2d_25/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/conv2d_29/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/conv2d_29/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/conv2d_30/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/conv2d_30/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/instance_normalization_27/Reshape_1/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/instance_normalization_27/Reshape_2/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/instance_normalization_30/Reshape_1/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/instance_normalization_30/Reshape_2/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_17/block1_conv1/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_17/block1_conv1/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_18/block1_conv2/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_18/block1_conv2/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_18/block2_conv1/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_18/block2_conv1/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_19/block2_conv2/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_19/block2_conv2/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_19/block3_conv1/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_19/block3_conv1/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_20/block3_conv2/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_20/block3_conv2/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_20/block3_conv3/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_20/block3_conv3/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_20/block3_conv4/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_20/block3_conv4/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_20/block4_conv1/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_20/block4_conv1/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_21/block4_conv2/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_21/block4_conv2/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_21/block4_conv3/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_21/block4_conv3/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_21/block4_conv4/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_21/block4_conv4/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_21/block5_conv1/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_21/block5_conv1/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_17/block1_conv1/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_17/block1_conv1/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_18/block1_conv2/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_18/block1_conv2/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_18/block2_conv1/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_18/block2_conv1/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_19/block2_conv2/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_19/block2_conv2/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_19/block3_conv1/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_19/block3_conv1/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_20/block3_conv2/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_20/block3_conv2/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_20/block3_conv3/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_20/block3_conv3/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_20/block3_conv4/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_20/block3_conv4/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_20/block4_conv1/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_20/block4_conv1/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_21/block4_conv2/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_21/block4_conv2/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_21/block4_conv3/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_21/block4_conv3/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_21/block4_conv4/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_21/block4_conv4/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_21/block5_conv1/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_21/block5_conv1/Conv2D/ReadVariableOp"
  input: "^global_generator/StatefulPartitionedCall"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Identity_1"
  op: "Identity"
  input: "add_3"
  input: "^MultiscaleDiscriminator/conv2d_24/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator/conv2d_24/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator/conv2d_25/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator/conv2d_25/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator/conv2d_29/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator/conv2d_29/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator/conv2d_30/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator/conv2d_30/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator/instance_normalization_27/Reshape_1/ReadVariableOp"
  input: "^MultiscaleDiscriminator/instance_normalization_27/Reshape_2/ReadVariableOp"
  input: "^MultiscaleDiscriminator/instance_normalization_30/Reshape_1/ReadVariableOp"
  input: "^MultiscaleDiscriminator/instance_normalization_30/Reshape_2/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/conv2d_24/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/conv2d_24/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/conv2d_25/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/conv2d_25/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/conv2d_29/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/conv2d_29/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/conv2d_30/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/conv2d_30/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/instance_normalization_27/Reshape_1/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/instance_normalization_27/Reshape_2/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/instance_normalization_30/Reshape_1/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/instance_normalization_30/Reshape_2/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/conv2d_24/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/conv2d_24/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/conv2d_25/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/conv2d_25/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/conv2d_29/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/conv2d_29/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/conv2d_30/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/conv2d_30/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/instance_normalization_27/Reshape_1/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/instance_normalization_27/Reshape_2/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/instance_normalization_30/Reshape_1/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/instance_normalization_30/Reshape_2/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_17/block1_conv1/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_17/block1_conv1/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_18/block1_conv2/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_18/block1_conv2/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_18/block2_conv1/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_18/block2_conv1/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_19/block2_conv2/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_19/block2_conv2/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_19/block3_conv1/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_19/block3_conv1/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_20/block3_conv2/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_20/block3_conv2/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_20/block3_conv3/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_20/block3_conv3/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_20/block3_conv4/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_20/block3_conv4/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_20/block4_conv1/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_20/block4_conv1/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_21/block4_conv2/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_21/block4_conv2/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_21/block4_conv3/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_21/block4_conv3/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_21/block4_conv4/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_21/block4_conv4/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_21/block5_conv1/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_21/block5_conv1/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_17/block1_conv1/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_17/block1_conv1/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_18/block1_conv2/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_18/block1_conv2/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_18/block2_conv1/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_18/block2_conv1/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_19/block2_conv2/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_19/block2_conv2/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_19/block3_conv1/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_19/block3_conv1/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_20/block3_conv2/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_20/block3_conv2/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_20/block3_conv3/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_20/block3_conv3/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_20/block3_conv4/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_20/block3_conv4/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_20/block4_conv1/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_20/block4_conv1/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_21/block4_conv2/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_21/block4_conv2/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_21/block4_conv3/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_21/block4_conv3/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_21/block4_conv4/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_21/block4_conv4/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_21/block5_conv1/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_21/block5_conv1/Conv2D/ReadVariableOp"
  input: "^global_generator/StatefulPartitionedCall"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Identity_2"
  op: "Identity"
  input: "add_5"
  input: "^MultiscaleDiscriminator/conv2d_24/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator/conv2d_24/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator/conv2d_25/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator/conv2d_25/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator/conv2d_29/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator/conv2d_29/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator/conv2d_30/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator/conv2d_30/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator/instance_normalization_27/Reshape_1/ReadVariableOp"
  input: "^MultiscaleDiscriminator/instance_normalization_27/Reshape_2/ReadVariableOp"
  input: "^MultiscaleDiscriminator/instance_normalization_30/Reshape_1/ReadVariableOp"
  input: "^MultiscaleDiscriminator/instance_normalization_30/Reshape_2/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/conv2d_24/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/conv2d_24/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/conv2d_25/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/conv2d_25/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/conv2d_29/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/conv2d_29/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/conv2d_30/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/conv2d_30/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/instance_normalization_27/Reshape_1/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/instance_normalization_27/Reshape_2/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/instance_normalization_30/Reshape_1/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/instance_normalization_30/Reshape_2/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/conv2d_24/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/conv2d_24/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/conv2d_25/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/conv2d_25/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/conv2d_29/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/conv2d_29/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/conv2d_30/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/conv2d_30/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/instance_normalization_27/Reshape_1/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/instance_normalization_27/Reshape_2/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/instance_normalization_30/Reshape_1/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/instance_normalization_30/Reshape_2/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_17/block1_conv1/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_17/block1_conv1/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_18/block1_conv2/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_18/block1_conv2/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_18/block2_conv1/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_18/block2_conv1/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_19/block2_conv2/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_19/block2_conv2/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_19/block3_conv1/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_19/block3_conv1/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_20/block3_conv2/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_20/block3_conv2/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_20/block3_conv3/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_20/block3_conv3/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_20/block3_conv4/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_20/block3_conv4/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_20/block4_conv1/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_20/block4_conv1/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_21/block4_conv2/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_21/block4_conv2/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_21/block4_conv3/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_21/block4_conv3/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_21/block4_conv4/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_21/block4_conv4/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_21/block5_conv1/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_21/block5_conv1/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_17/block1_conv1/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_17/block1_conv1/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_18/block1_conv2/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_18/block1_conv2/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_18/block2_conv1/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_18/block2_conv1/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_19/block2_conv2/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_19/block2_conv2/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_19/block3_conv1/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_19/block3_conv1/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_20/block3_conv2/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_20/block3_conv2/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_20/block3_conv3/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_20/block3_conv3/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_20/block3_conv4/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_20/block3_conv4/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_20/block4_conv1/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_20/block4_conv1/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_21/block4_conv2/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_21/block4_conv2/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_21/block4_conv3/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_21/block4_conv3/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_21/block4_conv4/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_21/block4_conv4/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_21/block5_conv1/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_21/block5_conv1/Conv2D/ReadVariableOp"
  input: "^global_generator/StatefulPartitionedCall"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Identity_3"
  op: "Identity"
  input: "add_13"
  input: "^MultiscaleDiscriminator/conv2d_24/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator/conv2d_24/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator/conv2d_25/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator/conv2d_25/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator/conv2d_29/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator/conv2d_29/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator/conv2d_30/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator/conv2d_30/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator/instance_normalization_27/Reshape_1/ReadVariableOp"
  input: "^MultiscaleDiscriminator/instance_normalization_27/Reshape_2/ReadVariableOp"
  input: "^MultiscaleDiscriminator/instance_normalization_30/Reshape_1/ReadVariableOp"
  input: "^MultiscaleDiscriminator/instance_normalization_30/Reshape_2/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/conv2d_24/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/conv2d_24/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/conv2d_25/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/conv2d_25/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/conv2d_29/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/conv2d_29/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/conv2d_30/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/conv2d_30/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/instance_normalization_27/Reshape_1/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/instance_normalization_27/Reshape_2/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/instance_normalization_30/Reshape_1/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/instance_normalization_30/Reshape_2/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/conv2d_24/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/conv2d_24/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/conv2d_25/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/conv2d_25/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/conv2d_29/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/conv2d_29/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/conv2d_30/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/conv2d_30/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/instance_normalization_27/Reshape_1/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/instance_normalization_27/Reshape_2/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/instance_normalization_30/Reshape_1/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/instance_normalization_30/Reshape_2/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_17/block1_conv1/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_17/block1_conv1/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_18/block1_conv2/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_18/block1_conv2/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_18/block2_conv1/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_18/block2_conv1/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_19/block2_conv2/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_19/block2_conv2/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_19/block3_conv1/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_19/block3_conv1/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_20/block3_conv2/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_20/block3_conv2/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_20/block3_conv3/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_20/block3_conv3/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_20/block3_conv4/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_20/block3_conv4/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_20/block4_conv1/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_20/block4_conv1/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_21/block4_conv2/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_21/block4_conv2/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_21/block4_conv3/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_21/block4_conv3/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_21/block4_conv4/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_21/block4_conv4/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_21/block5_conv1/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_21/block5_conv1/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_17/block1_conv1/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_17/block1_conv1/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_18/block1_conv2/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_18/block1_conv2/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_18/block2_conv1/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_18/block2_conv1/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_19/block2_conv2/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_19/block2_conv2/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_19/block3_conv1/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_19/block3_conv1/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_20/block3_conv2/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_20/block3_conv2/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_20/block3_conv3/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_20/block3_conv3/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_20/block3_conv4/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_20/block3_conv4/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_20/block4_conv1/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_20/block4_conv1/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_21/block4_conv2/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_21/block4_conv2/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_21/block4_conv3/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_21/block4_conv3/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_21/block4_conv4/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_21/block4_conv4/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_21/block5_conv1/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_21/block5_conv1/Conv2D/ReadVariableOp"
  input: "^global_generator/StatefulPartitionedCall"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Identity_4"
  op: "Identity"
  input: "mul_16"
  input: "^MultiscaleDiscriminator/conv2d_24/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator/conv2d_24/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator/conv2d_25/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator/conv2d_25/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator/conv2d_29/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator/conv2d_29/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator/conv2d_30/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator/conv2d_30/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator/instance_normalization_27/Reshape_1/ReadVariableOp"
  input: "^MultiscaleDiscriminator/instance_normalization_27/Reshape_2/ReadVariableOp"
  input: "^MultiscaleDiscriminator/instance_normalization_30/Reshape_1/ReadVariableOp"
  input: "^MultiscaleDiscriminator/instance_normalization_30/Reshape_2/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/conv2d_24/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/conv2d_24/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/conv2d_25/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/conv2d_25/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/conv2d_29/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/conv2d_29/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/conv2d_30/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/conv2d_30/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/instance_normalization_27/Reshape_1/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/instance_normalization_27/Reshape_2/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/instance_normalization_30/Reshape_1/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/instance_normalization_30/Reshape_2/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/conv2d_24/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/conv2d_24/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/conv2d_25/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/conv2d_25/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/conv2d_29/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/conv2d_29/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/conv2d_30/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/conv2d_30/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/instance_normalization_27/Reshape_1/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/instance_normalization_27/Reshape_2/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/instance_normalization_30/Reshape_1/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/instance_normalization_30/Reshape_2/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_17/block1_conv1/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_17/block1_conv1/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_18/block1_conv2/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_18/block1_conv2/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_18/block2_conv1/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_18/block2_conv1/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_19/block2_conv2/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_19/block2_conv2/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_19/block3_conv1/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_19/block3_conv1/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_20/block3_conv2/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_20/block3_conv2/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_20/block3_conv3/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_20/block3_conv3/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_20/block3_conv4/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_20/block3_conv4/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_20/block4_conv1/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_20/block4_conv1/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_21/block4_conv2/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_21/block4_conv2/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_21/block4_conv3/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_21/block4_conv3/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_21/block4_conv4/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_21/block4_conv4/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_21/block5_conv1/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_21/block5_conv1/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_17/block1_conv1/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_17/block1_conv1/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_18/block1_conv2/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_18/block1_conv2/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_18/block2_conv1/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_18/block2_conv1/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_19/block2_conv2/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_19/block2_conv2/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_19/block3_conv1/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_19/block3_conv1/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_20/block3_conv2/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_20/block3_conv2/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_20/block3_conv3/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_20/block3_conv3/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_20/block3_conv4/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_20/block3_conv4/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_20/block4_conv1/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_20/block4_conv1/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_21/block4_conv2/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_21/block4_conv2/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_21/block4_conv3/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_21/block4_conv3/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_21/block4_conv4/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_21/block4_conv4/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_21/block5_conv1/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_21/block5_conv1/Conv2D/ReadVariableOp"
  input: "^global_generator/StatefulPartitionedCall"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Identity_5"
  op: "Identity"
  input: "global_generator/StatefulPartitionedCall"
  input: "^MultiscaleDiscriminator/conv2d_24/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator/conv2d_24/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator/conv2d_25/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator/conv2d_25/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator/conv2d_29/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator/conv2d_29/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator/conv2d_30/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator/conv2d_30/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator/instance_normalization_27/Reshape_1/ReadVariableOp"
  input: "^MultiscaleDiscriminator/instance_normalization_27/Reshape_2/ReadVariableOp"
  input: "^MultiscaleDiscriminator/instance_normalization_30/Reshape_1/ReadVariableOp"
  input: "^MultiscaleDiscriminator/instance_normalization_30/Reshape_2/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/conv2d_24/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/conv2d_24/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/conv2d_25/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/conv2d_25/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/conv2d_29/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/conv2d_29/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/conv2d_30/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/conv2d_30/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/instance_normalization_27/Reshape_1/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/instance_normalization_27/Reshape_2/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/instance_normalization_30/Reshape_1/ReadVariableOp"
  input: "^MultiscaleDiscriminator_1/instance_normalization_30/Reshape_2/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/conv2d_24/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/conv2d_24/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/conv2d_25/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/conv2d_25/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/conv2d_29/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/conv2d_29/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/conv2d_30/BiasAdd/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/conv2d_30/Conv2D/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/instance_normalization_27/Reshape_1/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/instance_normalization_27/Reshape_2/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/instance_normalization_30/Reshape_1/ReadVariableOp"
  input: "^MultiscaleDiscriminator_2/instance_normalization_30/Reshape_2/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_17/block1_conv1/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_17/block1_conv1/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_18/block1_conv2/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_18/block1_conv2/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_18/block2_conv1/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_18/block2_conv1/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_19/block2_conv2/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_19/block2_conv2/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_19/block3_conv1/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_19/block3_conv1/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_20/block3_conv2/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_20/block3_conv2/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_20/block3_conv3/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_20/block3_conv3/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_20/block3_conv4/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_20/block3_conv4/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_20/block4_conv1/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_20/block4_conv1/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_21/block4_conv2/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_21/block4_conv2/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_21/block4_conv3/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_21/block4_conv3/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_21/block4_conv4/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_21/block4_conv4/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_21/block5_conv1/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19/sequential_21/block5_conv1/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_17/block1_conv1/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_17/block1_conv1/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_18/block1_conv2/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_18/block1_conv2/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_18/block2_conv1/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_18/block2_conv1/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_19/block2_conv2/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_19/block2_conv2/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_19/block3_conv1/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_19/block3_conv1/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_20/block3_conv2/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_20/block3_conv2/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_20/block3_conv3/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_20/block3_conv3/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_20/block3_conv4/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_20/block3_conv4/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_20/block4_conv1/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_20/block4_conv1/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_21/block4_conv2/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_21/block4_conv2/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_21/block4_conv3/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_21/block4_conv3/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_21/block4_conv4/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_21/block4_conv4/Conv2D/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_21/block5_conv1/BiasAdd/ReadVariableOp"
  input: "^VGGLoss/Vgg19_1/sequential_21/block5_conv1/Conv2D/ReadVariableOp"
  input: "^global_generator/StatefulPartitionedCall"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
library {
  function {
    signature {
      name: "__inference_call_6069"
      input_arg {
        name: "x"
        type: DT_FLOAT
      }
      input_arg {
        name: "sequential_conv2d_conv2d_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_conv2d_biasadd_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_instance_normalization_reshape_1_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_instance_normalization_reshape_2_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_conv2d_1_conv2d_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_conv2d_1_biasadd_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_instance_normalization_1_reshape_1_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_instance_normalization_1_reshape_2_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_conv2d_2_conv2d_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_conv2d_2_biasadd_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_instance_normalization_2_reshape_1_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_instance_normalization_2_reshape_2_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_conv2d_3_conv2d_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_conv2d_3_biasadd_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_instance_normalization_3_reshape_1_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_instance_normalization_3_reshape_2_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_conv2d_4_conv2d_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_conv2d_4_biasadd_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_instance_normalization_4_reshape_1_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_instance_normalization_4_reshape_2_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_sequential_1_conv2d_5_conv2d_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_sequential_1_conv2d_5_biasadd_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_sequential_1_instance_normalization_5_reshape_1_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_sequential_1_instance_normalization_5_reshape_2_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_sequential_1_conv2d_6_conv2d_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_sequential_1_conv2d_6_biasadd_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_sequential_1_instance_normalization_6_reshape_1_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_sequential_1_instance_normalization_6_reshape_2_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_1_sequential_2_conv2d_7_conv2d_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_1_sequential_2_conv2d_7_biasadd_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_1_sequential_2_instance_normalization_7_reshape_1_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_1_sequential_2_instance_normalization_7_reshape_2_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_1_sequential_2_conv2d_8_conv2d_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_1_sequential_2_conv2d_8_biasadd_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_1_sequential_2_instance_normalization_8_reshape_1_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_1_sequential_2_instance_normalization_8_reshape_2_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_2_sequential_3_conv2d_9_conv2d_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_2_sequential_3_conv2d_9_biasadd_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_2_sequential_3_instance_normalization_9_reshape_1_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_2_sequential_3_instance_normalization_9_reshape_2_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_2_sequential_3_conv2d_10_conv2d_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_2_sequential_3_conv2d_10_biasadd_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_2_sequential_3_instance_normalization_10_reshape_1_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_2_sequential_3_instance_normalization_10_reshape_2_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_3_sequential_4_conv2d_11_conv2d_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_3_sequential_4_conv2d_11_biasadd_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_3_sequential_4_instance_normalization_11_reshape_1_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_3_sequential_4_instance_normalization_11_reshape_2_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_3_sequential_4_conv2d_12_conv2d_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_3_sequential_4_conv2d_12_biasadd_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_3_sequential_4_instance_normalization_12_reshape_1_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_3_sequential_4_instance_normalization_12_reshape_2_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_4_sequential_5_conv2d_13_conv2d_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_4_sequential_5_conv2d_13_biasadd_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_4_sequential_5_instance_normalization_13_reshape_1_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_4_sequential_5_instance_normalization_13_reshape_2_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_4_sequential_5_conv2d_14_conv2d_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_4_sequential_5_conv2d_14_biasadd_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_4_sequential_5_instance_normalization_14_reshape_1_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_4_sequential_5_instance_normalization_14_reshape_2_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_5_sequential_6_conv2d_15_conv2d_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_5_sequential_6_conv2d_15_biasadd_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_5_sequential_6_instance_normalization_15_reshape_1_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_5_sequential_6_instance_normalization_15_reshape_2_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_5_sequential_6_conv2d_16_conv2d_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_5_sequential_6_conv2d_16_biasadd_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_5_sequential_6_instance_normalization_16_reshape_1_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_5_sequential_6_instance_normalization_16_reshape_2_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_6_sequential_7_conv2d_17_conv2d_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_6_sequential_7_conv2d_17_biasadd_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_6_sequential_7_instance_normalization_17_reshape_1_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_6_sequential_7_instance_normalization_17_reshape_2_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_6_sequential_7_conv2d_18_conv2d_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_6_sequential_7_conv2d_18_biasadd_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_6_sequential_7_instance_normalization_18_reshape_1_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_6_sequential_7_instance_normalization_18_reshape_2_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_7_sequential_8_conv2d_19_conv2d_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_7_sequential_8_conv2d_19_biasadd_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_7_sequential_8_instance_normalization_19_reshape_1_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_7_sequential_8_instance_normalization_19_reshape_2_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_7_sequential_8_conv2d_20_conv2d_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_7_sequential_8_conv2d_20_biasadd_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_7_sequential_8_instance_normalization_20_reshape_1_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_7_sequential_8_instance_normalization_20_reshape_2_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_8_sequential_9_conv2d_21_conv2d_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_8_sequential_9_conv2d_21_biasadd_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_8_sequential_9_instance_normalization_21_reshape_1_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_8_sequential_9_instance_normalization_21_reshape_2_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_8_sequential_9_conv2d_22_conv2d_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_8_sequential_9_conv2d_22_biasadd_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_8_sequential_9_instance_normalization_22_reshape_1_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_resnet_block_8_sequential_9_instance_normalization_22_reshape_2_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_conv2d_transpose_conv2d_transpose_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_conv2d_transpose_biasadd_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_instance_normalization_23_reshape_1_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_instance_normalization_23_reshape_2_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_conv2d_transpose_1_conv2d_transpose_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_conv2d_transpose_1_biasadd_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_instance_normalization_24_reshape_1_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_instance_normalization_24_reshape_2_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_conv2d_transpose_2_conv2d_transpose_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_conv2d_transpose_2_biasadd_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_instance_normalization_25_reshape_1_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_instance_normalization_25_reshape_2_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_conv2d_transpose_3_conv2d_transpose_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_conv2d_transpose_3_biasadd_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_instance_normalization_26_reshape_1_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_instance_normalization_26_reshape_2_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_conv2d_23_conv2d_readvariableop_resource"
        type: DT_RESOURCE
      }
      input_arg {
        name: "sequential_conv2d_23_biasadd_readvariableop_resource"
        type: DT_RESOURCE
      }
      output_arg {
        name: "identity"
        type: DT_FLOAT
      }
      is_stateful: true
      control_output: "sequential/resnet_block_4/sequential_5/instance_normalization_13/Reshape_1/ReadVariableOp"
      control_output: "sequential/resnet_block_5/sequential_6/conv2d_16/Conv2D/ReadVariableOp"
      control_output: "sequential/instance_normalization_24/Reshape_2/ReadVariableOp"
      control_output: "sequential/conv2d_3/BiasAdd/ReadVariableOp"
      control_output: "sequential/resnet_block_5/sequential_6/instance_normalization_15/Reshape_2/ReadVariableOp"
      control_output: "sequential/conv2d_3/Conv2D/ReadVariableOp"
      control_output: "sequential/resnet_block_5/sequential_6/conv2d_15/Conv2D/ReadVariableOp"
      control_output: "sequential/resnet_block_8/sequential_9/conv2d_21/BiasAdd/ReadVariableOp"
      control_output: "sequential/resnet_block_7/sequential_8/instance_normalization_19/Reshape_1/ReadVariableOp"
      control_output: "sequential/conv2d_transpose/BiasAdd/ReadVariableOp"
      control_output: "sequential/resnet_block_4/sequential_5/instance_normalization_14/Reshape_1/ReadVariableOp"
      control_output: "sequential/conv2d_1/BiasAdd/ReadVariableOp"
      control_output: "sequential/resnet_block_3/sequential_4/conv2d_12/BiasAdd/ReadVariableOp"
      control_output: "sequential/resnet_block_5/sequential_6/instance_normalization_16/Reshape_2/ReadVariableOp"
      control_output: "sequential/resnet_block_1/sequential_2/instance_normalization_7/Reshape_1/ReadVariableOp"
      control_output: "sequential/resnet_block_6/sequential_7/conv2d_17/BiasAdd/ReadVariableOp"
      control_output: "sequential/resnet_block_8/sequential_9/instance_normalization_21/Reshape_2/ReadVariableOp"
      control_output: "sequential/conv2d_transpose_2/conv2d_transpose/ReadVariableOp"
      control_output: "sequential/resnet_block_6/sequential_7/instance_normalization_18/Reshape_1/ReadVariableOp"
      control_output: "sequential/resnet_block_8/sequential_9/conv2d_21/Conv2D/ReadVariableOp"
      control_output: "sequential/conv2d_transpose_1/conv2d_transpose/ReadVariableOp"
      control_output: "sequential/resnet_block_7/sequential_8/instance_normalization_20/Reshape_2/ReadVariableOp"
      control_output: "sequential/instance_normalization_23/Reshape_2/ReadVariableOp"
      control_output: "sequential/instance_normalization_3/Reshape_2/ReadVariableOp"
      control_output: "sequential/resnet_block/sequential_1/instance_normalization_6/Reshape_1/ReadVariableOp"
      control_output: "sequential/instance_normalization_26/Reshape_1/ReadVariableOp"
      control_output: "sequential/resnet_block_7/sequential_8/conv2d_20/Conv2D/ReadVariableOp"
      control_output: "sequential/resnet_block_5/sequential_6/conv2d_15/BiasAdd/ReadVariableOp"
      control_output: "sequential/resnet_block_1/sequential_2/conv2d_8/Conv2D/ReadVariableOp"
      control_output: "sequential/resnet_block_8/sequential_9/conv2d_22/BiasAdd/ReadVariableOp"
      control_output: "sequential/conv2d_transpose_2/BiasAdd/ReadVariableOp"
      control_output: "sequential/resnet_block_3/sequential_4/instance_normalization_12/Reshape_1/ReadVariableOp"
      control_output: "sequential/conv2d_transpose_1/BiasAdd/ReadVariableOp"
      control_output: "sequential/resnet_block_4/sequential_5/instance_normalization_14/Reshape_2/ReadVariableOp"
      control_output: "sequential/conv2d_23/Conv2D/ReadVariableOp"
      control_output: "sequential/conv2d_4/BiasAdd/ReadVariableOp"
      control_output: "sequential/resnet_block_4/sequential_5/conv2d_14/Conv2D/ReadVariableOp"
      control_output: "sequential/instance_normalization_1/Reshape_1/ReadVariableOp"
      control_output: "sequential/conv2d/Conv2D/ReadVariableOp"
      control_output: "sequential/instance_normalization/Reshape_1/ReadVariableOp"
      control_output: "sequential/resnet_block_2/sequential_3/instance_normalization_9/Reshape_1/ReadVariableOp"
      control_output: "sequential/resnet_block_3/sequential_4/conv2d_11/BiasAdd/ReadVariableOp"
      control_output: "sequential/resnet_block_5/sequential_6/conv2d_16/BiasAdd/ReadVariableOp"
      control_output: "sequential/resnet_block_7/sequential_8/conv2d_20/BiasAdd/ReadVariableOp"
      control_output: "sequential/instance_normalization_25/Reshape_1/ReadVariableOp"
      control_output: "sequential/resnet_block_1/sequential_2/conv2d_8/BiasAdd/ReadVariableOp"
      control_output: "sequential/resnet_block_6/sequential_7/instance_normalization_17/Reshape_1/ReadVariableOp"
      control_output: "sequential/resnet_block_7/sequential_8/instance_normalization_19/Reshape_2/ReadVariableOp"
      control_output: "sequential/instance_normalization_4/Reshape_1/ReadVariableOp"
      control_output: "sequential/resnet_block/sequential_1/instance_normalization_5/Reshape_1/ReadVariableOp"
      control_output: "sequential/resnet_block_2/sequential_3/instance_normalization_10/Reshape_2/ReadVariableOp"
      control_output: "sequential/conv2d_transpose_3/BiasAdd/ReadVariableOp"
      control_output: "sequential/resnet_block_1/sequential_2/instance_normalization_7/Reshape_2/ReadVariableOp"
      control_output: "sequential/resnet_block_7/sequential_8/conv2d_19/Conv2D/ReadVariableOp"
      control_output: "sequential/conv2d_23/BiasAdd/ReadVariableOp"
      control_output: "sequential/resnet_block_2/sequential_3/conv2d_10/BiasAdd/ReadVariableOp"
      control_output: "sequential/resnet_block_4/sequential_5/conv2d_14/BiasAdd/ReadVariableOp"
      control_output: "sequential/conv2d_transpose/conv2d_transpose/ReadVariableOp"
      control_output: "sequential/resnet_block_1/sequential_2/conv2d_7/Conv2D/ReadVariableOp"
      control_output: "sequential/resnet_block_3/sequential_4/instance_normalization_11/Reshape_1/ReadVariableOp"
      control_output: "sequential/instance_normalization_26/Reshape_2/ReadVariableOp"
      control_output: "sequential/resnet_block_4/sequential_5/instance_normalization_13/Reshape_2/ReadVariableOp"
      control_output: "sequential/resnet_block_8/sequential_9/instance_normalization_22/Reshape_1/ReadVariableOp"
      control_output: "sequential/conv2d/BiasAdd/ReadVariableOp"
      control_output: "sequential/resnet_block_2/sequential_3/conv2d_9/BiasAdd/ReadVariableOp"
      control_output: "sequential/conv2d_2/Conv2D/ReadVariableOp"
      control_output: "sequential/conv2d_4/Conv2D/ReadVariableOp"
      control_output: "sequential/resnet_block_1/sequential_2/instance_normalization_8/Reshape_2/ReadVariableOp"
      control_output: "sequential/resnet_block_4/sequential_5/conv2d_13/Conv2D/ReadVariableOp"
      control_output: "sequential/resnet_block_2/sequential_3/conv2d_10/Conv2D/ReadVariableOp"
      control_output: "sequential/resnet_block_7/sequential_8/conv2d_19/BiasAdd/ReadVariableOp"
      control_output: "sequential/resnet_block_5/sequential_6/instance_normalization_16/Reshape_1/ReadVariableOp"
      control_output: "sequential/instance_normalization_1/Reshape_2/ReadVariableOp"
      control_output: "sequential/resnet_block_1/sequential_2/conv2d_7/BiasAdd/ReadVariableOp"
      control_output: "sequential/resnet_block_6/sequential_7/instance_normalization_18/Reshape_2/ReadVariableOp"
      control_output: "sequential/instance_normalization_24/Reshape_1/ReadVariableOp"
      control_output: "sequential/conv2d_2/BiasAdd/ReadVariableOp"
      control_output: "sequential/resnet_block/sequential_1/instance_normalization_6/Reshape_2/ReadVariableOp"
      control_output: "sequential/resnet_block_6/sequential_7/conv2d_18/Conv2D/ReadVariableOp"
      control_output: "sequential/resnet_block_4/sequential_5/conv2d_13/BiasAdd/ReadVariableOp"
      control_output: "sequential/resnet_block/sequential_1/conv2d_6/Conv2D/ReadVariableOp"
      control_output: "sequential/resnet_block_3/sequential_4/instance_normalization_12/Reshape_2/ReadVariableOp"
      control_output: "sequential/resnet_block_8/sequential_9/instance_normalization_21/Reshape_1/ReadVariableOp"
      control_output: "sequential/resnet_block_2/sequential_3/instance_normalization_10/Reshape_1/ReadVariableOp"
      control_output: "sequential/resnet_block_3/sequential_4/conv2d_11/Conv2D/ReadVariableOp"
      control_output: "sequential/resnet_block_3/sequential_4/conv2d_12/Conv2D/ReadVariableOp"
      control_output: "sequential/resnet_block/sequential_1/conv2d_5/BiasAdd/ReadVariableOp"
      control_output: "sequential/conv2d_transpose_3/conv2d_transpose/ReadVariableOp"
      control_output: "sequential/resnet_block_6/sequential_7/conv2d_18/BiasAdd/ReadVariableOp"
      control_output: "sequential/instance_normalization_25/Reshape_2/ReadVariableOp"
      control_output: "sequential/instance_normalization_4/Reshape_2/ReadVariableOp"
      control_output: "sequential/resnet_block/sequential_1/conv2d_6/BiasAdd/ReadVariableOp"
      control_output: "sequential/resnet_block_5/sequential_6/instance_normalization_15/Reshape_1/ReadVariableOp"
      control_output: "sequential/resnet_block_6/sequential_7/instance_normalization_17/Reshape_2/ReadVariableOp"
      control_output: "sequential/resnet_block/sequential_1/instance_normalization_5/Reshape_2/ReadVariableOp"
      control_output: "sequential/resnet_block_6/sequential_7/conv2d_17/Conv2D/ReadVariableOp"
      control_output: "sequential/resnet_block_2/sequential_3/conv2d_9/Conv2D/ReadVariableOp"
      control_output: "sequential/conv2d_1/Conv2D/ReadVariableOp"
      control_output: "sequential/resnet_block_7/sequential_8/instance_normalization_20/Reshape_1/ReadVariableOp"
      control_output: "sequential/resnet_block_3/sequential_4/instance_normalization_11/Reshape_2/ReadVariableOp"
      control_output: "sequential/instance_normalization_23/Reshape_1/ReadVariableOp"
      control_output: "sequential/instance_normalization/Reshape_2/ReadVariableOp"
      control_output: "sequential/resnet_block_8/sequential_9/instance_normalization_22/Reshape_2/ReadVariableOp"
      control_output: "sequential/resnet_block_1/sequential_2/instance_normalization_8/Reshape_1/ReadVariableOp"
      control_output: "sequential/resnet_block_8/sequential_9/conv2d_22/Conv2D/ReadVariableOp"
      control_output: "sequential/resnet_block/sequential_1/conv2d_5/Conv2D/ReadVariableOp"
      control_output: "sequential/resnet_block_2/sequential_3/instance_normalization_9/Reshape_2/ReadVariableOp"
      control_output: "sequential/instance_normalization_2/Reshape_1/ReadVariableOp"
      control_output: "sequential/instance_normalization_2/Reshape_2/ReadVariableOp"
      control_output: "sequential/instance_normalization_3/Reshape_1/ReadVariableOp"
    }
    node_def {
      name: "sequential/reflection_pad2d/MirrorPad/paddings"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000\003\000\000\000\003\000\000\000\003\000\000\000\003\000\000\000\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/reflection_pad2d/MirrorPad"
      op: "MirrorPad"
      input: "x"
      input: "sequential/reflection_pad2d/MirrorPad/paddings:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tpaddings"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "mode"
        value {
          s: "REFLECT"
        }
      }
    }
    node_def {
      name: "sequential/conv2d/Conv2D/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_conv2d_conv2d_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/conv2d/Conv2D"
      op: "Conv2D"
      input: "sequential/reflection_pad2d/MirrorPad:output:0"
      input: "sequential/conv2d/Conv2D/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/conv2d/BiasAdd/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_conv2d_biasadd_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/conv2d/BiasAdd"
      op: "BiasAdd"
      input: "sequential/conv2d/Conv2D:output:0"
      input: "sequential/conv2d/BiasAdd/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization/Shape"
      op: "Shape"
      input: "sequential/conv2d/BiasAdd:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization/strided_slice/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization/strided_slice"
      op: "StridedSlice"
      input: "sequential/instance_normalization/Shape:output:0"
      input: "sequential/instance_normalization/strided_slice/stack:output:0"
      input: "sequential/instance_normalization/strided_slice/stack_1:output:0"
      input: "sequential/instance_normalization/strided_slice/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization/strided_slice_1"
      op: "StridedSlice"
      input: "sequential/instance_normalization/Shape:output:0"
      input: "sequential/instance_normalization/strided_slice_1/stack:output:0"
      input: "sequential/instance_normalization/strided_slice_1/stack_1:output:0"
      input: "sequential/instance_normalization/strided_slice_1/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization/strided_slice_2/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization/strided_slice_2/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization/strided_slice_2/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization/strided_slice_2"
      op: "StridedSlice"
      input: "sequential/instance_normalization/Shape:output:0"
      input: "sequential/instance_normalization/strided_slice_2/stack:output:0"
      input: "sequential/instance_normalization/strided_slice_2/stack_1:output:0"
      input: "sequential/instance_normalization/strided_slice_2/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization/strided_slice_3/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization/strided_slice_3/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 4
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization/strided_slice_3/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization/strided_slice_3"
      op: "StridedSlice"
      input: "sequential/instance_normalization/Shape:output:0"
      input: "sequential/instance_normalization/strided_slice_3/stack:output:0"
      input: "sequential/instance_normalization/strided_slice_3/stack_1:output:0"
      input: "sequential/instance_normalization/strided_slice_3/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization/stack/1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 64
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization/stack/4"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization/stack"
      op: "Pack"
      input: "sequential/instance_normalization/strided_slice:output:0"
      input: "sequential/instance_normalization/stack/1:output:0"
      input: "sequential/instance_normalization/strided_slice_1:output:0"
      input: "sequential/instance_normalization/strided_slice_2:output:0"
      input: "sequential/instance_normalization/stack/4:output:0"
      attr {
        key: "N"
        value {
          i: 5
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization/Reshape"
      op: "Reshape"
      input: "sequential/conv2d/BiasAdd:output:0"
      input: "sequential/instance_normalization/stack:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization/moments/mean/reduction_indices"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization/moments/mean"
      op: "Mean"
      input: "sequential/instance_normalization/Reshape:output:0"
      input: "sequential/instance_normalization/moments/mean/reduction_indices:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization/moments/StopGradient"
      op: "StopGradient"
      input: "sequential/instance_normalization/moments/mean:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization/moments/SquaredDifference"
      op: "SquaredDifference"
      input: "sequential/instance_normalization/Reshape:output:0"
      input: "sequential/instance_normalization/moments/StopGradient:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization/moments/variance/reduction_indices"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization/moments/variance"
      op: "Mean"
      input: "sequential/instance_normalization/moments/SquaredDifference:z:0"
      input: "sequential/instance_normalization/moments/variance/reduction_indices:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization/Reshape_1/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_instance_normalization_reshape_1_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization/Reshape_1/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 5
              }
            }
            tensor_content: "\001\000\000\000@\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization/Reshape_1"
      op: "Reshape"
      input: "sequential/instance_normalization/Reshape_1/ReadVariableOp:value:0"
      input: "sequential/instance_normalization/Reshape_1/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization/Reshape_2/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_instance_normalization_reshape_2_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization/Reshape_2/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 5
              }
            }
            tensor_content: "\001\000\000\000@\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization/Reshape_2"
      op: "Reshape"
      input: "sequential/instance_normalization/Reshape_2/ReadVariableOp:value:0"
      input: "sequential/instance_normalization/Reshape_2/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization/batchnorm/add/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999747378752e-06
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization/batchnorm/add"
      op: "Add"
      input: "sequential/instance_normalization/moments/variance:output:0"
      input: "sequential/instance_normalization/batchnorm/add/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization/batchnorm/Rsqrt"
      op: "Rsqrt"
      input: "sequential/instance_normalization/batchnorm/add:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization/batchnorm/mul"
      op: "Mul"
      input: "sequential/instance_normalization/batchnorm/Rsqrt:y:0"
      input: "sequential/instance_normalization/Reshape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization/batchnorm/mul_1"
      op: "Mul"
      input: "sequential/instance_normalization/Reshape:output:0"
      input: "sequential/instance_normalization/batchnorm/mul:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization/batchnorm/mul_2"
      op: "Mul"
      input: "sequential/instance_normalization/moments/mean:output:0"
      input: "sequential/instance_normalization/batchnorm/mul:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization/batchnorm/sub"
      op: "Sub"
      input: "sequential/instance_normalization/Reshape_2:output:0"
      input: "sequential/instance_normalization/batchnorm/mul_2:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization/batchnorm/add_1"
      op: "Add"
      input: "sequential/instance_normalization/batchnorm/mul_1:z:0"
      input: "sequential/instance_normalization/batchnorm/sub:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization/Reshape_3"
      op: "Reshape"
      input: "sequential/instance_normalization/batchnorm/add_1:z:0"
      input: "sequential/instance_normalization/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/re_lu_1/Relu"
      op: "Relu"
      input: "sequential/instance_normalization/Reshape_3:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/conv2d_1/Conv2D/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_conv2d_1_conv2d_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/conv2d_1/Conv2D"
      op: "Conv2D"
      input: "sequential/re_lu_1/Relu:activations:0"
      input: "sequential/conv2d_1/Conv2D/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 2
            i: 2
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/conv2d_1/BiasAdd/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_conv2d_1_biasadd_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/conv2d_1/BiasAdd"
      op: "BiasAdd"
      input: "sequential/conv2d_1/Conv2D:output:0"
      input: "sequential/conv2d_1/BiasAdd/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_1/Shape"
      op: "Shape"
      input: "sequential/conv2d_1/BiasAdd:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_1/strided_slice/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_1/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_1/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_1/strided_slice"
      op: "StridedSlice"
      input: "sequential/instance_normalization_1/Shape:output:0"
      input: "sequential/instance_normalization_1/strided_slice/stack:output:0"
      input: "sequential/instance_normalization_1/strided_slice/stack_1:output:0"
      input: "sequential/instance_normalization_1/strided_slice/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_1/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_1/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_1/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_1/strided_slice_1"
      op: "StridedSlice"
      input: "sequential/instance_normalization_1/Shape:output:0"
      input: "sequential/instance_normalization_1/strided_slice_1/stack:output:0"
      input: "sequential/instance_normalization_1/strided_slice_1/stack_1:output:0"
      input: "sequential/instance_normalization_1/strided_slice_1/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_1/strided_slice_2/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_1/strided_slice_2/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_1/strided_slice_2/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_1/strided_slice_2"
      op: "StridedSlice"
      input: "sequential/instance_normalization_1/Shape:output:0"
      input: "sequential/instance_normalization_1/strided_slice_2/stack:output:0"
      input: "sequential/instance_normalization_1/strided_slice_2/stack_1:output:0"
      input: "sequential/instance_normalization_1/strided_slice_2/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_1/strided_slice_3/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_1/strided_slice_3/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 4
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_1/strided_slice_3/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_1/strided_slice_3"
      op: "StridedSlice"
      input: "sequential/instance_normalization_1/Shape:output:0"
      input: "sequential/instance_normalization_1/strided_slice_3/stack:output:0"
      input: "sequential/instance_normalization_1/strided_slice_3/stack_1:output:0"
      input: "sequential/instance_normalization_1/strided_slice_3/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_1/stack/1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 128
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_1/stack/4"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_1/stack"
      op: "Pack"
      input: "sequential/instance_normalization_1/strided_slice:output:0"
      input: "sequential/instance_normalization_1/stack/1:output:0"
      input: "sequential/instance_normalization_1/strided_slice_1:output:0"
      input: "sequential/instance_normalization_1/strided_slice_2:output:0"
      input: "sequential/instance_normalization_1/stack/4:output:0"
      attr {
        key: "N"
        value {
          i: 5
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_1/Reshape"
      op: "Reshape"
      input: "sequential/conv2d_1/BiasAdd:output:0"
      input: "sequential/instance_normalization_1/stack:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_1/moments/mean/reduction_indices"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_1/moments/mean"
      op: "Mean"
      input: "sequential/instance_normalization_1/Reshape:output:0"
      input: "sequential/instance_normalization_1/moments/mean/reduction_indices:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_1/moments/StopGradient"
      op: "StopGradient"
      input: "sequential/instance_normalization_1/moments/mean:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_1/moments/SquaredDifference"
      op: "SquaredDifference"
      input: "sequential/instance_normalization_1/Reshape:output:0"
      input: "sequential/instance_normalization_1/moments/StopGradient:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_1/moments/variance/reduction_indices"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_1/moments/variance"
      op: "Mean"
      input: "sequential/instance_normalization_1/moments/SquaredDifference:z:0"
      input: "sequential/instance_normalization_1/moments/variance/reduction_indices:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_1/Reshape_1/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_instance_normalization_1_reshape_1_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_1/Reshape_1/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 5
              }
            }
            tensor_content: "\001\000\000\000\200\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_1/Reshape_1"
      op: "Reshape"
      input: "sequential/instance_normalization_1/Reshape_1/ReadVariableOp:value:0"
      input: "sequential/instance_normalization_1/Reshape_1/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_1/Reshape_2/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_instance_normalization_1_reshape_2_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_1/Reshape_2/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 5
              }
            }
            tensor_content: "\001\000\000\000\200\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_1/Reshape_2"
      op: "Reshape"
      input: "sequential/instance_normalization_1/Reshape_2/ReadVariableOp:value:0"
      input: "sequential/instance_normalization_1/Reshape_2/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_1/batchnorm/add/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999747378752e-06
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_1/batchnorm/add"
      op: "Add"
      input: "sequential/instance_normalization_1/moments/variance:output:0"
      input: "sequential/instance_normalization_1/batchnorm/add/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_1/batchnorm/Rsqrt"
      op: "Rsqrt"
      input: "sequential/instance_normalization_1/batchnorm/add:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_1/batchnorm/mul"
      op: "Mul"
      input: "sequential/instance_normalization_1/batchnorm/Rsqrt:y:0"
      input: "sequential/instance_normalization_1/Reshape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_1/batchnorm/mul_1"
      op: "Mul"
      input: "sequential/instance_normalization_1/Reshape:output:0"
      input: "sequential/instance_normalization_1/batchnorm/mul:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_1/batchnorm/mul_2"
      op: "Mul"
      input: "sequential/instance_normalization_1/moments/mean:output:0"
      input: "sequential/instance_normalization_1/batchnorm/mul:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_1/batchnorm/sub"
      op: "Sub"
      input: "sequential/instance_normalization_1/Reshape_2:output:0"
      input: "sequential/instance_normalization_1/batchnorm/mul_2:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_1/batchnorm/add_1"
      op: "Add"
      input: "sequential/instance_normalization_1/batchnorm/mul_1:z:0"
      input: "sequential/instance_normalization_1/batchnorm/sub:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_1/Reshape_3"
      op: "Reshape"
      input: "sequential/instance_normalization_1/batchnorm/add_1:z:0"
      input: "sequential/instance_normalization_1/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/re_lu_1_1/Relu"
      op: "Relu"
      input: "sequential/instance_normalization_1/Reshape_3:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/conv2d_2/Conv2D/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_conv2d_2_conv2d_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/conv2d_2/Conv2D"
      op: "Conv2D"
      input: "sequential/re_lu_1_1/Relu:activations:0"
      input: "sequential/conv2d_2/Conv2D/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 2
            i: 2
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/conv2d_2/BiasAdd/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_conv2d_2_biasadd_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/conv2d_2/BiasAdd"
      op: "BiasAdd"
      input: "sequential/conv2d_2/Conv2D:output:0"
      input: "sequential/conv2d_2/BiasAdd/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_2/Shape"
      op: "Shape"
      input: "sequential/conv2d_2/BiasAdd:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_2/strided_slice/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_2/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_2/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_2/strided_slice"
      op: "StridedSlice"
      input: "sequential/instance_normalization_2/Shape:output:0"
      input: "sequential/instance_normalization_2/strided_slice/stack:output:0"
      input: "sequential/instance_normalization_2/strided_slice/stack_1:output:0"
      input: "sequential/instance_normalization_2/strided_slice/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_2/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_2/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_2/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_2/strided_slice_1"
      op: "StridedSlice"
      input: "sequential/instance_normalization_2/Shape:output:0"
      input: "sequential/instance_normalization_2/strided_slice_1/stack:output:0"
      input: "sequential/instance_normalization_2/strided_slice_1/stack_1:output:0"
      input: "sequential/instance_normalization_2/strided_slice_1/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_2/strided_slice_2/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_2/strided_slice_2/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_2/strided_slice_2/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_2/strided_slice_2"
      op: "StridedSlice"
      input: "sequential/instance_normalization_2/Shape:output:0"
      input: "sequential/instance_normalization_2/strided_slice_2/stack:output:0"
      input: "sequential/instance_normalization_2/strided_slice_2/stack_1:output:0"
      input: "sequential/instance_normalization_2/strided_slice_2/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_2/strided_slice_3/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_2/strided_slice_3/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 4
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_2/strided_slice_3/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_2/strided_slice_3"
      op: "StridedSlice"
      input: "sequential/instance_normalization_2/Shape:output:0"
      input: "sequential/instance_normalization_2/strided_slice_3/stack:output:0"
      input: "sequential/instance_normalization_2/strided_slice_3/stack_1:output:0"
      input: "sequential/instance_normalization_2/strided_slice_3/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_2/stack/1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 256
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_2/stack/4"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_2/stack"
      op: "Pack"
      input: "sequential/instance_normalization_2/strided_slice:output:0"
      input: "sequential/instance_normalization_2/stack/1:output:0"
      input: "sequential/instance_normalization_2/strided_slice_1:output:0"
      input: "sequential/instance_normalization_2/strided_slice_2:output:0"
      input: "sequential/instance_normalization_2/stack/4:output:0"
      attr {
        key: "N"
        value {
          i: 5
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_2/Reshape"
      op: "Reshape"
      input: "sequential/conv2d_2/BiasAdd:output:0"
      input: "sequential/instance_normalization_2/stack:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_2/moments/mean/reduction_indices"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_2/moments/mean"
      op: "Mean"
      input: "sequential/instance_normalization_2/Reshape:output:0"
      input: "sequential/instance_normalization_2/moments/mean/reduction_indices:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_2/moments/StopGradient"
      op: "StopGradient"
      input: "sequential/instance_normalization_2/moments/mean:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_2/moments/SquaredDifference"
      op: "SquaredDifference"
      input: "sequential/instance_normalization_2/Reshape:output:0"
      input: "sequential/instance_normalization_2/moments/StopGradient:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_2/moments/variance/reduction_indices"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_2/moments/variance"
      op: "Mean"
      input: "sequential/instance_normalization_2/moments/SquaredDifference:z:0"
      input: "sequential/instance_normalization_2/moments/variance/reduction_indices:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_2/Reshape_1/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_instance_normalization_2_reshape_1_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_2/Reshape_1/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 5
              }
            }
            tensor_content: "\001\000\000\000\000\001\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_2/Reshape_1"
      op: "Reshape"
      input: "sequential/instance_normalization_2/Reshape_1/ReadVariableOp:value:0"
      input: "sequential/instance_normalization_2/Reshape_1/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_2/Reshape_2/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_instance_normalization_2_reshape_2_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_2/Reshape_2/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 5
              }
            }
            tensor_content: "\001\000\000\000\000\001\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_2/Reshape_2"
      op: "Reshape"
      input: "sequential/instance_normalization_2/Reshape_2/ReadVariableOp:value:0"
      input: "sequential/instance_normalization_2/Reshape_2/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_2/batchnorm/add/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999747378752e-06
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_2/batchnorm/add"
      op: "Add"
      input: "sequential/instance_normalization_2/moments/variance:output:0"
      input: "sequential/instance_normalization_2/batchnorm/add/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_2/batchnorm/Rsqrt"
      op: "Rsqrt"
      input: "sequential/instance_normalization_2/batchnorm/add:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_2/batchnorm/mul"
      op: "Mul"
      input: "sequential/instance_normalization_2/batchnorm/Rsqrt:y:0"
      input: "sequential/instance_normalization_2/Reshape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_2/batchnorm/mul_1"
      op: "Mul"
      input: "sequential/instance_normalization_2/Reshape:output:0"
      input: "sequential/instance_normalization_2/batchnorm/mul:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_2/batchnorm/mul_2"
      op: "Mul"
      input: "sequential/instance_normalization_2/moments/mean:output:0"
      input: "sequential/instance_normalization_2/batchnorm/mul:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_2/batchnorm/sub"
      op: "Sub"
      input: "sequential/instance_normalization_2/Reshape_2:output:0"
      input: "sequential/instance_normalization_2/batchnorm/mul_2:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_2/batchnorm/add_1"
      op: "Add"
      input: "sequential/instance_normalization_2/batchnorm/mul_1:z:0"
      input: "sequential/instance_normalization_2/batchnorm/sub:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_2/Reshape_3"
      op: "Reshape"
      input: "sequential/instance_normalization_2/batchnorm/add_1:z:0"
      input: "sequential/instance_normalization_2/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/re_lu_1_2/Relu"
      op: "Relu"
      input: "sequential/instance_normalization_2/Reshape_3:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/conv2d_3/Conv2D/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_conv2d_3_conv2d_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/conv2d_3/Conv2D"
      op: "Conv2D"
      input: "sequential/re_lu_1_2/Relu:activations:0"
      input: "sequential/conv2d_3/Conv2D/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 2
            i: 2
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/conv2d_3/BiasAdd/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_conv2d_3_biasadd_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/conv2d_3/BiasAdd"
      op: "BiasAdd"
      input: "sequential/conv2d_3/Conv2D:output:0"
      input: "sequential/conv2d_3/BiasAdd/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_3/Shape"
      op: "Shape"
      input: "sequential/conv2d_3/BiasAdd:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_3/strided_slice/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_3/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_3/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_3/strided_slice"
      op: "StridedSlice"
      input: "sequential/instance_normalization_3/Shape:output:0"
      input: "sequential/instance_normalization_3/strided_slice/stack:output:0"
      input: "sequential/instance_normalization_3/strided_slice/stack_1:output:0"
      input: "sequential/instance_normalization_3/strided_slice/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_3/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_3/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_3/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_3/strided_slice_1"
      op: "StridedSlice"
      input: "sequential/instance_normalization_3/Shape:output:0"
      input: "sequential/instance_normalization_3/strided_slice_1/stack:output:0"
      input: "sequential/instance_normalization_3/strided_slice_1/stack_1:output:0"
      input: "sequential/instance_normalization_3/strided_slice_1/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_3/strided_slice_2/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_3/strided_slice_2/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_3/strided_slice_2/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_3/strided_slice_2"
      op: "StridedSlice"
      input: "sequential/instance_normalization_3/Shape:output:0"
      input: "sequential/instance_normalization_3/strided_slice_2/stack:output:0"
      input: "sequential/instance_normalization_3/strided_slice_2/stack_1:output:0"
      input: "sequential/instance_normalization_3/strided_slice_2/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_3/strided_slice_3/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_3/strided_slice_3/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 4
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_3/strided_slice_3/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_3/strided_slice_3"
      op: "StridedSlice"
      input: "sequential/instance_normalization_3/Shape:output:0"
      input: "sequential/instance_normalization_3/strided_slice_3/stack:output:0"
      input: "sequential/instance_normalization_3/strided_slice_3/stack_1:output:0"
      input: "sequential/instance_normalization_3/strided_slice_3/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_3/stack/1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 512
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_3/stack/4"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_3/stack"
      op: "Pack"
      input: "sequential/instance_normalization_3/strided_slice:output:0"
      input: "sequential/instance_normalization_3/stack/1:output:0"
      input: "sequential/instance_normalization_3/strided_slice_1:output:0"
      input: "sequential/instance_normalization_3/strided_slice_2:output:0"
      input: "sequential/instance_normalization_3/stack/4:output:0"
      attr {
        key: "N"
        value {
          i: 5
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_3/Reshape"
      op: "Reshape"
      input: "sequential/conv2d_3/BiasAdd:output:0"
      input: "sequential/instance_normalization_3/stack:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_3/moments/mean/reduction_indices"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_3/moments/mean"
      op: "Mean"
      input: "sequential/instance_normalization_3/Reshape:output:0"
      input: "sequential/instance_normalization_3/moments/mean/reduction_indices:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_3/moments/StopGradient"
      op: "StopGradient"
      input: "sequential/instance_normalization_3/moments/mean:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_3/moments/SquaredDifference"
      op: "SquaredDifference"
      input: "sequential/instance_normalization_3/Reshape:output:0"
      input: "sequential/instance_normalization_3/moments/StopGradient:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_3/moments/variance/reduction_indices"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_3/moments/variance"
      op: "Mean"
      input: "sequential/instance_normalization_3/moments/SquaredDifference:z:0"
      input: "sequential/instance_normalization_3/moments/variance/reduction_indices:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_3/Reshape_1/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_instance_normalization_3_reshape_1_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_3/Reshape_1/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 5
              }
            }
            tensor_content: "\001\000\000\000\000\002\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_3/Reshape_1"
      op: "Reshape"
      input: "sequential/instance_normalization_3/Reshape_1/ReadVariableOp:value:0"
      input: "sequential/instance_normalization_3/Reshape_1/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_3/Reshape_2/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_instance_normalization_3_reshape_2_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_3/Reshape_2/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 5
              }
            }
            tensor_content: "\001\000\000\000\000\002\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_3/Reshape_2"
      op: "Reshape"
      input: "sequential/instance_normalization_3/Reshape_2/ReadVariableOp:value:0"
      input: "sequential/instance_normalization_3/Reshape_2/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_3/batchnorm/add/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999747378752e-06
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_3/batchnorm/add"
      op: "Add"
      input: "sequential/instance_normalization_3/moments/variance:output:0"
      input: "sequential/instance_normalization_3/batchnorm/add/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_3/batchnorm/Rsqrt"
      op: "Rsqrt"
      input: "sequential/instance_normalization_3/batchnorm/add:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_3/batchnorm/mul"
      op: "Mul"
      input: "sequential/instance_normalization_3/batchnorm/Rsqrt:y:0"
      input: "sequential/instance_normalization_3/Reshape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_3/batchnorm/mul_1"
      op: "Mul"
      input: "sequential/instance_normalization_3/Reshape:output:0"
      input: "sequential/instance_normalization_3/batchnorm/mul:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_3/batchnorm/mul_2"
      op: "Mul"
      input: "sequential/instance_normalization_3/moments/mean:output:0"
      input: "sequential/instance_normalization_3/batchnorm/mul:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_3/batchnorm/sub"
      op: "Sub"
      input: "sequential/instance_normalization_3/Reshape_2:output:0"
      input: "sequential/instance_normalization_3/batchnorm/mul_2:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_3/batchnorm/add_1"
      op: "Add"
      input: "sequential/instance_normalization_3/batchnorm/mul_1:z:0"
      input: "sequential/instance_normalization_3/batchnorm/sub:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_3/Reshape_3"
      op: "Reshape"
      input: "sequential/instance_normalization_3/batchnorm/add_1:z:0"
      input: "sequential/instance_normalization_3/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/re_lu_1_3/Relu"
      op: "Relu"
      input: "sequential/instance_normalization_3/Reshape_3:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/conv2d_4/Conv2D/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_conv2d_4_conv2d_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/conv2d_4/Conv2D"
      op: "Conv2D"
      input: "sequential/re_lu_1_3/Relu:activations:0"
      input: "sequential/conv2d_4/Conv2D/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 2
            i: 2
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/conv2d_4/BiasAdd/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_conv2d_4_biasadd_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/conv2d_4/BiasAdd"
      op: "BiasAdd"
      input: "sequential/conv2d_4/Conv2D:output:0"
      input: "sequential/conv2d_4/BiasAdd/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_4/Shape"
      op: "Shape"
      input: "sequential/conv2d_4/BiasAdd:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_4/strided_slice/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_4/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_4/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_4/strided_slice"
      op: "StridedSlice"
      input: "sequential/instance_normalization_4/Shape:output:0"
      input: "sequential/instance_normalization_4/strided_slice/stack:output:0"
      input: "sequential/instance_normalization_4/strided_slice/stack_1:output:0"
      input: "sequential/instance_normalization_4/strided_slice/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_4/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_4/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_4/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_4/strided_slice_1"
      op: "StridedSlice"
      input: "sequential/instance_normalization_4/Shape:output:0"
      input: "sequential/instance_normalization_4/strided_slice_1/stack:output:0"
      input: "sequential/instance_normalization_4/strided_slice_1/stack_1:output:0"
      input: "sequential/instance_normalization_4/strided_slice_1/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_4/strided_slice_2/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_4/strided_slice_2/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_4/strided_slice_2/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_4/strided_slice_2"
      op: "StridedSlice"
      input: "sequential/instance_normalization_4/Shape:output:0"
      input: "sequential/instance_normalization_4/strided_slice_2/stack:output:0"
      input: "sequential/instance_normalization_4/strided_slice_2/stack_1:output:0"
      input: "sequential/instance_normalization_4/strided_slice_2/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_4/strided_slice_3/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_4/strided_slice_3/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 4
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_4/strided_slice_3/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_4/strided_slice_3"
      op: "StridedSlice"
      input: "sequential/instance_normalization_4/Shape:output:0"
      input: "sequential/instance_normalization_4/strided_slice_3/stack:output:0"
      input: "sequential/instance_normalization_4/strided_slice_3/stack_1:output:0"
      input: "sequential/instance_normalization_4/strided_slice_3/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_4/stack/1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1024
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_4/stack/4"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_4/stack"
      op: "Pack"
      input: "sequential/instance_normalization_4/strided_slice:output:0"
      input: "sequential/instance_normalization_4/stack/1:output:0"
      input: "sequential/instance_normalization_4/strided_slice_1:output:0"
      input: "sequential/instance_normalization_4/strided_slice_2:output:0"
      input: "sequential/instance_normalization_4/stack/4:output:0"
      attr {
        key: "N"
        value {
          i: 5
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_4/Reshape"
      op: "Reshape"
      input: "sequential/conv2d_4/BiasAdd:output:0"
      input: "sequential/instance_normalization_4/stack:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_4/moments/mean/reduction_indices"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_4/moments/mean"
      op: "Mean"
      input: "sequential/instance_normalization_4/Reshape:output:0"
      input: "sequential/instance_normalization_4/moments/mean/reduction_indices:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_4/moments/StopGradient"
      op: "StopGradient"
      input: "sequential/instance_normalization_4/moments/mean:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_4/moments/SquaredDifference"
      op: "SquaredDifference"
      input: "sequential/instance_normalization_4/Reshape:output:0"
      input: "sequential/instance_normalization_4/moments/StopGradient:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_4/moments/variance/reduction_indices"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_4/moments/variance"
      op: "Mean"
      input: "sequential/instance_normalization_4/moments/SquaredDifference:z:0"
      input: "sequential/instance_normalization_4/moments/variance/reduction_indices:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_4/Reshape_1/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_instance_normalization_4_reshape_1_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_4/Reshape_1/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 5
              }
            }
            tensor_content: "\001\000\000\000\000\004\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_4/Reshape_1"
      op: "Reshape"
      input: "sequential/instance_normalization_4/Reshape_1/ReadVariableOp:value:0"
      input: "sequential/instance_normalization_4/Reshape_1/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_4/Reshape_2/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_instance_normalization_4_reshape_2_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_4/Reshape_2/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 5
              }
            }
            tensor_content: "\001\000\000\000\000\004\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_4/Reshape_2"
      op: "Reshape"
      input: "sequential/instance_normalization_4/Reshape_2/ReadVariableOp:value:0"
      input: "sequential/instance_normalization_4/Reshape_2/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_4/batchnorm/add/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999747378752e-06
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_4/batchnorm/add"
      op: "Add"
      input: "sequential/instance_normalization_4/moments/variance:output:0"
      input: "sequential/instance_normalization_4/batchnorm/add/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_4/batchnorm/Rsqrt"
      op: "Rsqrt"
      input: "sequential/instance_normalization_4/batchnorm/add:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_4/batchnorm/mul"
      op: "Mul"
      input: "sequential/instance_normalization_4/batchnorm/Rsqrt:y:0"
      input: "sequential/instance_normalization_4/Reshape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_4/batchnorm/mul_1"
      op: "Mul"
      input: "sequential/instance_normalization_4/Reshape:output:0"
      input: "sequential/instance_normalization_4/batchnorm/mul:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_4/batchnorm/mul_2"
      op: "Mul"
      input: "sequential/instance_normalization_4/moments/mean:output:0"
      input: "sequential/instance_normalization_4/batchnorm/mul:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_4/batchnorm/sub"
      op: "Sub"
      input: "sequential/instance_normalization_4/Reshape_2:output:0"
      input: "sequential/instance_normalization_4/batchnorm/mul_2:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_4/batchnorm/add_1"
      op: "Add"
      input: "sequential/instance_normalization_4/batchnorm/mul_1:z:0"
      input: "sequential/instance_normalization_4/batchnorm/sub:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_4/Reshape_3"
      op: "Reshape"
      input: "sequential/instance_normalization_4/batchnorm/add_1:z:0"
      input: "sequential/instance_normalization_4/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/re_lu_1_4/Relu"
      op: "Relu"
      input: "sequential/instance_normalization_4/Reshape_3:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/zero_padding2d/Pad/paddings"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/zero_padding2d/Pad"
      op: "Pad"
      input: "sequential/re_lu_1_4/Relu:activations:0"
      input: "sequential/resnet_block/sequential_1/zero_padding2d/Pad/paddings:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tpaddings"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/conv2d_5/Conv2D/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_sequential_1_conv2d_5_conv2d_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/conv2d_5/Conv2D"
      op: "Conv2D"
      input: "sequential/resnet_block/sequential_1/zero_padding2d/Pad:output:0"
      input: "sequential/resnet_block/sequential_1/conv2d_5/Conv2D/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/conv2d_5/BiasAdd/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_sequential_1_conv2d_5_biasadd_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/conv2d_5/BiasAdd"
      op: "BiasAdd"
      input: "sequential/resnet_block/sequential_1/conv2d_5/Conv2D:output:0"
      input: "sequential/resnet_block/sequential_1/conv2d_5/BiasAdd/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_5/Shape"
      op: "Shape"
      input: "sequential/resnet_block/sequential_1/conv2d_5/BiasAdd:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_5/strided_slice/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_5/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_5/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_5/strided_slice"
      op: "StridedSlice"
      input: "sequential/resnet_block/sequential_1/instance_normalization_5/Shape:output:0"
      input: "sequential/resnet_block/sequential_1/instance_normalization_5/strided_slice/stack:output:0"
      input: "sequential/resnet_block/sequential_1/instance_normalization_5/strided_slice/stack_1:output:0"
      input: "sequential/resnet_block/sequential_1/instance_normalization_5/strided_slice/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_5/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_5/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_5/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_5/strided_slice_1"
      op: "StridedSlice"
      input: "sequential/resnet_block/sequential_1/instance_normalization_5/Shape:output:0"
      input: "sequential/resnet_block/sequential_1/instance_normalization_5/strided_slice_1/stack:output:0"
      input: "sequential/resnet_block/sequential_1/instance_normalization_5/strided_slice_1/stack_1:output:0"
      input: "sequential/resnet_block/sequential_1/instance_normalization_5/strided_slice_1/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_5/strided_slice_2/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_5/strided_slice_2/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_5/strided_slice_2/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_5/strided_slice_2"
      op: "StridedSlice"
      input: "sequential/resnet_block/sequential_1/instance_normalization_5/Shape:output:0"
      input: "sequential/resnet_block/sequential_1/instance_normalization_5/strided_slice_2/stack:output:0"
      input: "sequential/resnet_block/sequential_1/instance_normalization_5/strided_slice_2/stack_1:output:0"
      input: "sequential/resnet_block/sequential_1/instance_normalization_5/strided_slice_2/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_5/strided_slice_3/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_5/strided_slice_3/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 4
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_5/strided_slice_3/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_5/strided_slice_3"
      op: "StridedSlice"
      input: "sequential/resnet_block/sequential_1/instance_normalization_5/Shape:output:0"
      input: "sequential/resnet_block/sequential_1/instance_normalization_5/strided_slice_3/stack:output:0"
      input: "sequential/resnet_block/sequential_1/instance_normalization_5/strided_slice_3/stack_1:output:0"
      input: "sequential/resnet_block/sequential_1/instance_normalization_5/strided_slice_3/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_5/stack/1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1024
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_5/stack/4"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_5/stack"
      op: "Pack"
      input: "sequential/resnet_block/sequential_1/instance_normalization_5/strided_slice:output:0"
      input: "sequential/resnet_block/sequential_1/instance_normalization_5/stack/1:output:0"
      input: "sequential/resnet_block/sequential_1/instance_normalization_5/strided_slice_1:output:0"
      input: "sequential/resnet_block/sequential_1/instance_normalization_5/strided_slice_2:output:0"
      input: "sequential/resnet_block/sequential_1/instance_normalization_5/stack/4:output:0"
      attr {
        key: "N"
        value {
          i: 5
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_5/Reshape"
      op: "Reshape"
      input: "sequential/resnet_block/sequential_1/conv2d_5/BiasAdd:output:0"
      input: "sequential/resnet_block/sequential_1/instance_normalization_5/stack:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_5/moments/mean/reduction_indices"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_5/moments/mean"
      op: "Mean"
      input: "sequential/resnet_block/sequential_1/instance_normalization_5/Reshape:output:0"
      input: "sequential/resnet_block/sequential_1/instance_normalization_5/moments/mean/reduction_indices:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_5/moments/StopGradient"
      op: "StopGradient"
      input: "sequential/resnet_block/sequential_1/instance_normalization_5/moments/mean:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_5/moments/SquaredDifference"
      op: "SquaredDifference"
      input: "sequential/resnet_block/sequential_1/instance_normalization_5/Reshape:output:0"
      input: "sequential/resnet_block/sequential_1/instance_normalization_5/moments/StopGradient:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_5/moments/variance/reduction_indices"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_5/moments/variance"
      op: "Mean"
      input: "sequential/resnet_block/sequential_1/instance_normalization_5/moments/SquaredDifference:z:0"
      input: "sequential/resnet_block/sequential_1/instance_normalization_5/moments/variance/reduction_indices:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_5/Reshape_1/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_sequential_1_instance_normalization_5_reshape_1_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_5/Reshape_1/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 5
              }
            }
            tensor_content: "\001\000\000\000\000\004\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_5/Reshape_1"
      op: "Reshape"
      input: "sequential/resnet_block/sequential_1/instance_normalization_5/Reshape_1/ReadVariableOp:value:0"
      input: "sequential/resnet_block/sequential_1/instance_normalization_5/Reshape_1/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_5/Reshape_2/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_sequential_1_instance_normalization_5_reshape_2_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_5/Reshape_2/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 5
              }
            }
            tensor_content: "\001\000\000\000\000\004\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_5/Reshape_2"
      op: "Reshape"
      input: "sequential/resnet_block/sequential_1/instance_normalization_5/Reshape_2/ReadVariableOp:value:0"
      input: "sequential/resnet_block/sequential_1/instance_normalization_5/Reshape_2/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_5/batchnorm/add/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999747378752e-06
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_5/batchnorm/add"
      op: "Add"
      input: "sequential/resnet_block/sequential_1/instance_normalization_5/moments/variance:output:0"
      input: "sequential/resnet_block/sequential_1/instance_normalization_5/batchnorm/add/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_5/batchnorm/Rsqrt"
      op: "Rsqrt"
      input: "sequential/resnet_block/sequential_1/instance_normalization_5/batchnorm/add:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_5/batchnorm/mul"
      op: "Mul"
      input: "sequential/resnet_block/sequential_1/instance_normalization_5/batchnorm/Rsqrt:y:0"
      input: "sequential/resnet_block/sequential_1/instance_normalization_5/Reshape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_5/batchnorm/mul_1"
      op: "Mul"
      input: "sequential/resnet_block/sequential_1/instance_normalization_5/Reshape:output:0"
      input: "sequential/resnet_block/sequential_1/instance_normalization_5/batchnorm/mul:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_5/batchnorm/mul_2"
      op: "Mul"
      input: "sequential/resnet_block/sequential_1/instance_normalization_5/moments/mean:output:0"
      input: "sequential/resnet_block/sequential_1/instance_normalization_5/batchnorm/mul:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_5/batchnorm/sub"
      op: "Sub"
      input: "sequential/resnet_block/sequential_1/instance_normalization_5/Reshape_2:output:0"
      input: "sequential/resnet_block/sequential_1/instance_normalization_5/batchnorm/mul_2:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_5/batchnorm/add_1"
      op: "Add"
      input: "sequential/resnet_block/sequential_1/instance_normalization_5/batchnorm/mul_1:z:0"
      input: "sequential/resnet_block/sequential_1/instance_normalization_5/batchnorm/sub:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_5/Reshape_3"
      op: "Reshape"
      input: "sequential/resnet_block/sequential_1/instance_normalization_5/batchnorm/add_1:z:0"
      input: "sequential/resnet_block/sequential_1/instance_normalization_5/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/re_lu_1/Relu"
      op: "Relu"
      input: "sequential/resnet_block/sequential_1/instance_normalization_5/Reshape_3:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/zero_padding2d_1/Pad/paddings"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/zero_padding2d_1/Pad"
      op: "Pad"
      input: "sequential/resnet_block/sequential_1/re_lu_1/Relu:activations:0"
      input: "sequential/resnet_block/sequential_1/zero_padding2d_1/Pad/paddings:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tpaddings"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/conv2d_6/Conv2D/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_sequential_1_conv2d_6_conv2d_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/conv2d_6/Conv2D"
      op: "Conv2D"
      input: "sequential/resnet_block/sequential_1/zero_padding2d_1/Pad:output:0"
      input: "sequential/resnet_block/sequential_1/conv2d_6/Conv2D/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/conv2d_6/BiasAdd/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_sequential_1_conv2d_6_biasadd_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/conv2d_6/BiasAdd"
      op: "BiasAdd"
      input: "sequential/resnet_block/sequential_1/conv2d_6/Conv2D:output:0"
      input: "sequential/resnet_block/sequential_1/conv2d_6/BiasAdd/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_6/Shape"
      op: "Shape"
      input: "sequential/resnet_block/sequential_1/conv2d_6/BiasAdd:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_6/strided_slice/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_6/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_6/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_6/strided_slice"
      op: "StridedSlice"
      input: "sequential/resnet_block/sequential_1/instance_normalization_6/Shape:output:0"
      input: "sequential/resnet_block/sequential_1/instance_normalization_6/strided_slice/stack:output:0"
      input: "sequential/resnet_block/sequential_1/instance_normalization_6/strided_slice/stack_1:output:0"
      input: "sequential/resnet_block/sequential_1/instance_normalization_6/strided_slice/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_6/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_6/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_6/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_6/strided_slice_1"
      op: "StridedSlice"
      input: "sequential/resnet_block/sequential_1/instance_normalization_6/Shape:output:0"
      input: "sequential/resnet_block/sequential_1/instance_normalization_6/strided_slice_1/stack:output:0"
      input: "sequential/resnet_block/sequential_1/instance_normalization_6/strided_slice_1/stack_1:output:0"
      input: "sequential/resnet_block/sequential_1/instance_normalization_6/strided_slice_1/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_6/strided_slice_2/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_6/strided_slice_2/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_6/strided_slice_2/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_6/strided_slice_2"
      op: "StridedSlice"
      input: "sequential/resnet_block/sequential_1/instance_normalization_6/Shape:output:0"
      input: "sequential/resnet_block/sequential_1/instance_normalization_6/strided_slice_2/stack:output:0"
      input: "sequential/resnet_block/sequential_1/instance_normalization_6/strided_slice_2/stack_1:output:0"
      input: "sequential/resnet_block/sequential_1/instance_normalization_6/strided_slice_2/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_6/strided_slice_3/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_6/strided_slice_3/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 4
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_6/strided_slice_3/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_6/strided_slice_3"
      op: "StridedSlice"
      input: "sequential/resnet_block/sequential_1/instance_normalization_6/Shape:output:0"
      input: "sequential/resnet_block/sequential_1/instance_normalization_6/strided_slice_3/stack:output:0"
      input: "sequential/resnet_block/sequential_1/instance_normalization_6/strided_slice_3/stack_1:output:0"
      input: "sequential/resnet_block/sequential_1/instance_normalization_6/strided_slice_3/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_6/stack/1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1024
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_6/stack/4"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_6/stack"
      op: "Pack"
      input: "sequential/resnet_block/sequential_1/instance_normalization_6/strided_slice:output:0"
      input: "sequential/resnet_block/sequential_1/instance_normalization_6/stack/1:output:0"
      input: "sequential/resnet_block/sequential_1/instance_normalization_6/strided_slice_1:output:0"
      input: "sequential/resnet_block/sequential_1/instance_normalization_6/strided_slice_2:output:0"
      input: "sequential/resnet_block/sequential_1/instance_normalization_6/stack/4:output:0"
      attr {
        key: "N"
        value {
          i: 5
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_6/Reshape"
      op: "Reshape"
      input: "sequential/resnet_block/sequential_1/conv2d_6/BiasAdd:output:0"
      input: "sequential/resnet_block/sequential_1/instance_normalization_6/stack:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_6/moments/mean/reduction_indices"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_6/moments/mean"
      op: "Mean"
      input: "sequential/resnet_block/sequential_1/instance_normalization_6/Reshape:output:0"
      input: "sequential/resnet_block/sequential_1/instance_normalization_6/moments/mean/reduction_indices:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_6/moments/StopGradient"
      op: "StopGradient"
      input: "sequential/resnet_block/sequential_1/instance_normalization_6/moments/mean:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_6/moments/SquaredDifference"
      op: "SquaredDifference"
      input: "sequential/resnet_block/sequential_1/instance_normalization_6/Reshape:output:0"
      input: "sequential/resnet_block/sequential_1/instance_normalization_6/moments/StopGradient:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_6/moments/variance/reduction_indices"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_6/moments/variance"
      op: "Mean"
      input: "sequential/resnet_block/sequential_1/instance_normalization_6/moments/SquaredDifference:z:0"
      input: "sequential/resnet_block/sequential_1/instance_normalization_6/moments/variance/reduction_indices:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_6/Reshape_1/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_sequential_1_instance_normalization_6_reshape_1_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_6/Reshape_1/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 5
              }
            }
            tensor_content: "\001\000\000\000\000\004\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_6/Reshape_1"
      op: "Reshape"
      input: "sequential/resnet_block/sequential_1/instance_normalization_6/Reshape_1/ReadVariableOp:value:0"
      input: "sequential/resnet_block/sequential_1/instance_normalization_6/Reshape_1/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_6/Reshape_2/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_sequential_1_instance_normalization_6_reshape_2_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_6/Reshape_2/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 5
              }
            }
            tensor_content: "\001\000\000\000\000\004\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_6/Reshape_2"
      op: "Reshape"
      input: "sequential/resnet_block/sequential_1/instance_normalization_6/Reshape_2/ReadVariableOp:value:0"
      input: "sequential/resnet_block/sequential_1/instance_normalization_6/Reshape_2/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_6/batchnorm/add/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999747378752e-06
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_6/batchnorm/add"
      op: "Add"
      input: "sequential/resnet_block/sequential_1/instance_normalization_6/moments/variance:output:0"
      input: "sequential/resnet_block/sequential_1/instance_normalization_6/batchnorm/add/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_6/batchnorm/Rsqrt"
      op: "Rsqrt"
      input: "sequential/resnet_block/sequential_1/instance_normalization_6/batchnorm/add:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_6/batchnorm/mul"
      op: "Mul"
      input: "sequential/resnet_block/sequential_1/instance_normalization_6/batchnorm/Rsqrt:y:0"
      input: "sequential/resnet_block/sequential_1/instance_normalization_6/Reshape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_6/batchnorm/mul_1"
      op: "Mul"
      input: "sequential/resnet_block/sequential_1/instance_normalization_6/Reshape:output:0"
      input: "sequential/resnet_block/sequential_1/instance_normalization_6/batchnorm/mul:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_6/batchnorm/mul_2"
      op: "Mul"
      input: "sequential/resnet_block/sequential_1/instance_normalization_6/moments/mean:output:0"
      input: "sequential/resnet_block/sequential_1/instance_normalization_6/batchnorm/mul:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_6/batchnorm/sub"
      op: "Sub"
      input: "sequential/resnet_block/sequential_1/instance_normalization_6/Reshape_2:output:0"
      input: "sequential/resnet_block/sequential_1/instance_normalization_6/batchnorm/mul_2:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_6/batchnorm/add_1"
      op: "Add"
      input: "sequential/resnet_block/sequential_1/instance_normalization_6/batchnorm/mul_1:z:0"
      input: "sequential/resnet_block/sequential_1/instance_normalization_6/batchnorm/sub:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/sequential_1/instance_normalization_6/Reshape_3"
      op: "Reshape"
      input: "sequential/resnet_block/sequential_1/instance_normalization_6/batchnorm/add_1:z:0"
      input: "sequential/resnet_block/sequential_1/instance_normalization_6/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block/add"
      op: "Add"
      input: "sequential/resnet_block/sequential_1/instance_normalization_6/Reshape_3:output:0"
      input: "sequential/re_lu_1_4/Relu:activations:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/zero_padding2d_2/Pad/paddings"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/zero_padding2d_2/Pad"
      op: "Pad"
      input: "sequential/resnet_block/add:z:0"
      input: "sequential/resnet_block_1/sequential_2/zero_padding2d_2/Pad/paddings:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tpaddings"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/conv2d_7/Conv2D/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_1_sequential_2_conv2d_7_conv2d_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/conv2d_7/Conv2D"
      op: "Conv2D"
      input: "sequential/resnet_block_1/sequential_2/zero_padding2d_2/Pad:output:0"
      input: "sequential/resnet_block_1/sequential_2/conv2d_7/Conv2D/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/conv2d_7/BiasAdd/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_1_sequential_2_conv2d_7_biasadd_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/conv2d_7/BiasAdd"
      op: "BiasAdd"
      input: "sequential/resnet_block_1/sequential_2/conv2d_7/Conv2D:output:0"
      input: "sequential/resnet_block_1/sequential_2/conv2d_7/BiasAdd/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_7/Shape"
      op: "Shape"
      input: "sequential/resnet_block_1/sequential_2/conv2d_7/BiasAdd:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_7/strided_slice/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_7/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_7/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_7/strided_slice"
      op: "StridedSlice"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_7/Shape:output:0"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_7/strided_slice/stack:output:0"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_7/strided_slice/stack_1:output:0"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_7/strided_slice/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_7/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_7/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_7/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_7/strided_slice_1"
      op: "StridedSlice"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_7/Shape:output:0"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_7/strided_slice_1/stack:output:0"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_7/strided_slice_1/stack_1:output:0"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_7/strided_slice_1/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_7/strided_slice_2/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_7/strided_slice_2/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_7/strided_slice_2/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_7/strided_slice_2"
      op: "StridedSlice"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_7/Shape:output:0"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_7/strided_slice_2/stack:output:0"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_7/strided_slice_2/stack_1:output:0"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_7/strided_slice_2/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_7/strided_slice_3/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_7/strided_slice_3/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 4
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_7/strided_slice_3/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_7/strided_slice_3"
      op: "StridedSlice"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_7/Shape:output:0"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_7/strided_slice_3/stack:output:0"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_7/strided_slice_3/stack_1:output:0"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_7/strided_slice_3/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_7/stack/1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1024
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_7/stack/4"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_7/stack"
      op: "Pack"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_7/strided_slice:output:0"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_7/stack/1:output:0"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_7/strided_slice_1:output:0"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_7/strided_slice_2:output:0"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_7/stack/4:output:0"
      attr {
        key: "N"
        value {
          i: 5
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_7/Reshape"
      op: "Reshape"
      input: "sequential/resnet_block_1/sequential_2/conv2d_7/BiasAdd:output:0"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_7/stack:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_7/moments/mean/reduction_indices"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_7/moments/mean"
      op: "Mean"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_7/Reshape:output:0"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_7/moments/mean/reduction_indices:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_7/moments/StopGradient"
      op: "StopGradient"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_7/moments/mean:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_7/moments/SquaredDifference"
      op: "SquaredDifference"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_7/Reshape:output:0"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_7/moments/StopGradient:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_7/moments/variance/reduction_indices"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_7/moments/variance"
      op: "Mean"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_7/moments/SquaredDifference:z:0"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_7/moments/variance/reduction_indices:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_7/Reshape_1/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_1_sequential_2_instance_normalization_7_reshape_1_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_7/Reshape_1/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 5
              }
            }
            tensor_content: "\001\000\000\000\000\004\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_7/Reshape_1"
      op: "Reshape"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_7/Reshape_1/ReadVariableOp:value:0"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_7/Reshape_1/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_7/Reshape_2/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_1_sequential_2_instance_normalization_7_reshape_2_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_7/Reshape_2/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 5
              }
            }
            tensor_content: "\001\000\000\000\000\004\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_7/Reshape_2"
      op: "Reshape"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_7/Reshape_2/ReadVariableOp:value:0"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_7/Reshape_2/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_7/batchnorm/add/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999747378752e-06
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_7/batchnorm/add"
      op: "Add"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_7/moments/variance:output:0"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_7/batchnorm/add/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_7/batchnorm/Rsqrt"
      op: "Rsqrt"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_7/batchnorm/add:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_7/batchnorm/mul"
      op: "Mul"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_7/batchnorm/Rsqrt:y:0"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_7/Reshape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_7/batchnorm/mul_1"
      op: "Mul"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_7/Reshape:output:0"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_7/batchnorm/mul:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_7/batchnorm/mul_2"
      op: "Mul"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_7/moments/mean:output:0"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_7/batchnorm/mul:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_7/batchnorm/sub"
      op: "Sub"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_7/Reshape_2:output:0"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_7/batchnorm/mul_2:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_7/batchnorm/add_1"
      op: "Add"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_7/batchnorm/mul_1:z:0"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_7/batchnorm/sub:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_7/Reshape_3"
      op: "Reshape"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_7/batchnorm/add_1:z:0"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_7/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/re_lu_1/Relu"
      op: "Relu"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_7/Reshape_3:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/zero_padding2d_3/Pad/paddings"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/zero_padding2d_3/Pad"
      op: "Pad"
      input: "sequential/resnet_block_1/sequential_2/re_lu_1/Relu:activations:0"
      input: "sequential/resnet_block_1/sequential_2/zero_padding2d_3/Pad/paddings:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tpaddings"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/conv2d_8/Conv2D/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_1_sequential_2_conv2d_8_conv2d_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/conv2d_8/Conv2D"
      op: "Conv2D"
      input: "sequential/resnet_block_1/sequential_2/zero_padding2d_3/Pad:output:0"
      input: "sequential/resnet_block_1/sequential_2/conv2d_8/Conv2D/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/conv2d_8/BiasAdd/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_1_sequential_2_conv2d_8_biasadd_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/conv2d_8/BiasAdd"
      op: "BiasAdd"
      input: "sequential/resnet_block_1/sequential_2/conv2d_8/Conv2D:output:0"
      input: "sequential/resnet_block_1/sequential_2/conv2d_8/BiasAdd/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_8/Shape"
      op: "Shape"
      input: "sequential/resnet_block_1/sequential_2/conv2d_8/BiasAdd:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_8/strided_slice/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_8/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_8/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_8/strided_slice"
      op: "StridedSlice"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_8/Shape:output:0"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_8/strided_slice/stack:output:0"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_8/strided_slice/stack_1:output:0"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_8/strided_slice/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_8/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_8/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_8/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_8/strided_slice_1"
      op: "StridedSlice"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_8/Shape:output:0"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_8/strided_slice_1/stack:output:0"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_8/strided_slice_1/stack_1:output:0"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_8/strided_slice_1/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_8/strided_slice_2/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_8/strided_slice_2/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_8/strided_slice_2/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_8/strided_slice_2"
      op: "StridedSlice"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_8/Shape:output:0"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_8/strided_slice_2/stack:output:0"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_8/strided_slice_2/stack_1:output:0"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_8/strided_slice_2/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_8/strided_slice_3/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_8/strided_slice_3/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 4
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_8/strided_slice_3/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_8/strided_slice_3"
      op: "StridedSlice"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_8/Shape:output:0"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_8/strided_slice_3/stack:output:0"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_8/strided_slice_3/stack_1:output:0"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_8/strided_slice_3/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_8/stack/1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1024
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_8/stack/4"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_8/stack"
      op: "Pack"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_8/strided_slice:output:0"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_8/stack/1:output:0"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_8/strided_slice_1:output:0"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_8/strided_slice_2:output:0"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_8/stack/4:output:0"
      attr {
        key: "N"
        value {
          i: 5
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_8/Reshape"
      op: "Reshape"
      input: "sequential/resnet_block_1/sequential_2/conv2d_8/BiasAdd:output:0"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_8/stack:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_8/moments/mean/reduction_indices"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_8/moments/mean"
      op: "Mean"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_8/Reshape:output:0"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_8/moments/mean/reduction_indices:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_8/moments/StopGradient"
      op: "StopGradient"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_8/moments/mean:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_8/moments/SquaredDifference"
      op: "SquaredDifference"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_8/Reshape:output:0"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_8/moments/StopGradient:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_8/moments/variance/reduction_indices"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_8/moments/variance"
      op: "Mean"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_8/moments/SquaredDifference:z:0"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_8/moments/variance/reduction_indices:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_8/Reshape_1/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_1_sequential_2_instance_normalization_8_reshape_1_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_8/Reshape_1/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 5
              }
            }
            tensor_content: "\001\000\000\000\000\004\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_8/Reshape_1"
      op: "Reshape"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_8/Reshape_1/ReadVariableOp:value:0"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_8/Reshape_1/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_8/Reshape_2/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_1_sequential_2_instance_normalization_8_reshape_2_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_8/Reshape_2/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 5
              }
            }
            tensor_content: "\001\000\000\000\000\004\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_8/Reshape_2"
      op: "Reshape"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_8/Reshape_2/ReadVariableOp:value:0"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_8/Reshape_2/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_8/batchnorm/add/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999747378752e-06
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_8/batchnorm/add"
      op: "Add"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_8/moments/variance:output:0"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_8/batchnorm/add/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_8/batchnorm/Rsqrt"
      op: "Rsqrt"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_8/batchnorm/add:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_8/batchnorm/mul"
      op: "Mul"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_8/batchnorm/Rsqrt:y:0"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_8/Reshape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_8/batchnorm/mul_1"
      op: "Mul"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_8/Reshape:output:0"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_8/batchnorm/mul:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_8/batchnorm/mul_2"
      op: "Mul"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_8/moments/mean:output:0"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_8/batchnorm/mul:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_8/batchnorm/sub"
      op: "Sub"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_8/Reshape_2:output:0"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_8/batchnorm/mul_2:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_8/batchnorm/add_1"
      op: "Add"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_8/batchnorm/mul_1:z:0"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_8/batchnorm/sub:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/sequential_2/instance_normalization_8/Reshape_3"
      op: "Reshape"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_8/batchnorm/add_1:z:0"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_8/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_1/add"
      op: "Add"
      input: "sequential/resnet_block_1/sequential_2/instance_normalization_8/Reshape_3:output:0"
      input: "sequential/resnet_block/add:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/zero_padding2d_4/Pad/paddings"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/zero_padding2d_4/Pad"
      op: "Pad"
      input: "sequential/resnet_block_1/add:z:0"
      input: "sequential/resnet_block_2/sequential_3/zero_padding2d_4/Pad/paddings:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tpaddings"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/conv2d_9/Conv2D/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_2_sequential_3_conv2d_9_conv2d_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/conv2d_9/Conv2D"
      op: "Conv2D"
      input: "sequential/resnet_block_2/sequential_3/zero_padding2d_4/Pad:output:0"
      input: "sequential/resnet_block_2/sequential_3/conv2d_9/Conv2D/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/conv2d_9/BiasAdd/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_2_sequential_3_conv2d_9_biasadd_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/conv2d_9/BiasAdd"
      op: "BiasAdd"
      input: "sequential/resnet_block_2/sequential_3/conv2d_9/Conv2D:output:0"
      input: "sequential/resnet_block_2/sequential_3/conv2d_9/BiasAdd/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_9/Shape"
      op: "Shape"
      input: "sequential/resnet_block_2/sequential_3/conv2d_9/BiasAdd:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_9/strided_slice/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_9/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_9/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_9/strided_slice"
      op: "StridedSlice"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_9/Shape:output:0"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_9/strided_slice/stack:output:0"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_9/strided_slice/stack_1:output:0"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_9/strided_slice/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_9/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_9/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_9/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_9/strided_slice_1"
      op: "StridedSlice"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_9/Shape:output:0"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_9/strided_slice_1/stack:output:0"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_9/strided_slice_1/stack_1:output:0"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_9/strided_slice_1/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_9/strided_slice_2/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_9/strided_slice_2/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_9/strided_slice_2/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_9/strided_slice_2"
      op: "StridedSlice"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_9/Shape:output:0"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_9/strided_slice_2/stack:output:0"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_9/strided_slice_2/stack_1:output:0"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_9/strided_slice_2/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_9/strided_slice_3/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_9/strided_slice_3/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 4
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_9/strided_slice_3/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_9/strided_slice_3"
      op: "StridedSlice"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_9/Shape:output:0"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_9/strided_slice_3/stack:output:0"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_9/strided_slice_3/stack_1:output:0"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_9/strided_slice_3/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_9/stack/1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1024
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_9/stack/4"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_9/stack"
      op: "Pack"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_9/strided_slice:output:0"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_9/stack/1:output:0"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_9/strided_slice_1:output:0"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_9/strided_slice_2:output:0"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_9/stack/4:output:0"
      attr {
        key: "N"
        value {
          i: 5
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_9/Reshape"
      op: "Reshape"
      input: "sequential/resnet_block_2/sequential_3/conv2d_9/BiasAdd:output:0"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_9/stack:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_9/moments/mean/reduction_indices"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_9/moments/mean"
      op: "Mean"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_9/Reshape:output:0"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_9/moments/mean/reduction_indices:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_9/moments/StopGradient"
      op: "StopGradient"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_9/moments/mean:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_9/moments/SquaredDifference"
      op: "SquaredDifference"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_9/Reshape:output:0"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_9/moments/StopGradient:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_9/moments/variance/reduction_indices"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_9/moments/variance"
      op: "Mean"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_9/moments/SquaredDifference:z:0"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_9/moments/variance/reduction_indices:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_9/Reshape_1/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_2_sequential_3_instance_normalization_9_reshape_1_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_9/Reshape_1/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 5
              }
            }
            tensor_content: "\001\000\000\000\000\004\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_9/Reshape_1"
      op: "Reshape"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_9/Reshape_1/ReadVariableOp:value:0"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_9/Reshape_1/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_9/Reshape_2/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_2_sequential_3_instance_normalization_9_reshape_2_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_9/Reshape_2/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 5
              }
            }
            tensor_content: "\001\000\000\000\000\004\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_9/Reshape_2"
      op: "Reshape"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_9/Reshape_2/ReadVariableOp:value:0"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_9/Reshape_2/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_9/batchnorm/add/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999747378752e-06
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_9/batchnorm/add"
      op: "Add"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_9/moments/variance:output:0"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_9/batchnorm/add/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_9/batchnorm/Rsqrt"
      op: "Rsqrt"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_9/batchnorm/add:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_9/batchnorm/mul"
      op: "Mul"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_9/batchnorm/Rsqrt:y:0"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_9/Reshape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_9/batchnorm/mul_1"
      op: "Mul"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_9/Reshape:output:0"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_9/batchnorm/mul:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_9/batchnorm/mul_2"
      op: "Mul"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_9/moments/mean:output:0"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_9/batchnorm/mul:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_9/batchnorm/sub"
      op: "Sub"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_9/Reshape_2:output:0"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_9/batchnorm/mul_2:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_9/batchnorm/add_1"
      op: "Add"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_9/batchnorm/mul_1:z:0"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_9/batchnorm/sub:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_9/Reshape_3"
      op: "Reshape"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_9/batchnorm/add_1:z:0"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_9/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/re_lu_1/Relu"
      op: "Relu"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_9/Reshape_3:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/zero_padding2d_5/Pad/paddings"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/zero_padding2d_5/Pad"
      op: "Pad"
      input: "sequential/resnet_block_2/sequential_3/re_lu_1/Relu:activations:0"
      input: "sequential/resnet_block_2/sequential_3/zero_padding2d_5/Pad/paddings:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tpaddings"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/conv2d_10/Conv2D/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_2_sequential_3_conv2d_10_conv2d_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/conv2d_10/Conv2D"
      op: "Conv2D"
      input: "sequential/resnet_block_2/sequential_3/zero_padding2d_5/Pad:output:0"
      input: "sequential/resnet_block_2/sequential_3/conv2d_10/Conv2D/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/conv2d_10/BiasAdd/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_2_sequential_3_conv2d_10_biasadd_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/conv2d_10/BiasAdd"
      op: "BiasAdd"
      input: "sequential/resnet_block_2/sequential_3/conv2d_10/Conv2D:output:0"
      input: "sequential/resnet_block_2/sequential_3/conv2d_10/BiasAdd/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_10/Shape"
      op: "Shape"
      input: "sequential/resnet_block_2/sequential_3/conv2d_10/BiasAdd:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_10/strided_slice/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_10/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_10/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_10/strided_slice"
      op: "StridedSlice"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_10/Shape:output:0"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_10/strided_slice/stack:output:0"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_10/strided_slice/stack_1:output:0"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_10/strided_slice/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_10/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_10/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_10/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_10/strided_slice_1"
      op: "StridedSlice"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_10/Shape:output:0"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_10/strided_slice_1/stack:output:0"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_10/strided_slice_1/stack_1:output:0"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_10/strided_slice_1/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_10/strided_slice_2/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_10/strided_slice_2/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_10/strided_slice_2/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_10/strided_slice_2"
      op: "StridedSlice"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_10/Shape:output:0"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_10/strided_slice_2/stack:output:0"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_10/strided_slice_2/stack_1:output:0"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_10/strided_slice_2/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_10/strided_slice_3/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_10/strided_slice_3/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 4
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_10/strided_slice_3/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_10/strided_slice_3"
      op: "StridedSlice"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_10/Shape:output:0"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_10/strided_slice_3/stack:output:0"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_10/strided_slice_3/stack_1:output:0"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_10/strided_slice_3/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_10/stack/1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1024
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_10/stack/4"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_10/stack"
      op: "Pack"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_10/strided_slice:output:0"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_10/stack/1:output:0"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_10/strided_slice_1:output:0"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_10/strided_slice_2:output:0"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_10/stack/4:output:0"
      attr {
        key: "N"
        value {
          i: 5
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_10/Reshape"
      op: "Reshape"
      input: "sequential/resnet_block_2/sequential_3/conv2d_10/BiasAdd:output:0"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_10/stack:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_10/moments/mean/reduction_indices"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_10/moments/mean"
      op: "Mean"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_10/Reshape:output:0"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_10/moments/mean/reduction_indices:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_10/moments/StopGradient"
      op: "StopGradient"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_10/moments/mean:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_10/moments/SquaredDifference"
      op: "SquaredDifference"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_10/Reshape:output:0"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_10/moments/StopGradient:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_10/moments/variance/reduction_indices"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_10/moments/variance"
      op: "Mean"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_10/moments/SquaredDifference:z:0"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_10/moments/variance/reduction_indices:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_10/Reshape_1/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_2_sequential_3_instance_normalization_10_reshape_1_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_10/Reshape_1/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 5
              }
            }
            tensor_content: "\001\000\000\000\000\004\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_10/Reshape_1"
      op: "Reshape"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_10/Reshape_1/ReadVariableOp:value:0"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_10/Reshape_1/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_10/Reshape_2/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_2_sequential_3_instance_normalization_10_reshape_2_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_10/Reshape_2/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 5
              }
            }
            tensor_content: "\001\000\000\000\000\004\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_10/Reshape_2"
      op: "Reshape"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_10/Reshape_2/ReadVariableOp:value:0"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_10/Reshape_2/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_10/batchnorm/add/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999747378752e-06
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_10/batchnorm/add"
      op: "Add"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_10/moments/variance:output:0"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_10/batchnorm/add/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_10/batchnorm/Rsqrt"
      op: "Rsqrt"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_10/batchnorm/add:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_10/batchnorm/mul"
      op: "Mul"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_10/batchnorm/Rsqrt:y:0"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_10/Reshape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_10/batchnorm/mul_1"
      op: "Mul"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_10/Reshape:output:0"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_10/batchnorm/mul:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_10/batchnorm/mul_2"
      op: "Mul"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_10/moments/mean:output:0"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_10/batchnorm/mul:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_10/batchnorm/sub"
      op: "Sub"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_10/Reshape_2:output:0"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_10/batchnorm/mul_2:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_10/batchnorm/add_1"
      op: "Add"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_10/batchnorm/mul_1:z:0"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_10/batchnorm/sub:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/sequential_3/instance_normalization_10/Reshape_3"
      op: "Reshape"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_10/batchnorm/add_1:z:0"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_10/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_2/add"
      op: "Add"
      input: "sequential/resnet_block_2/sequential_3/instance_normalization_10/Reshape_3:output:0"
      input: "sequential/resnet_block_1/add:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/zero_padding2d_6/Pad/paddings"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/zero_padding2d_6/Pad"
      op: "Pad"
      input: "sequential/resnet_block_2/add:z:0"
      input: "sequential/resnet_block_3/sequential_4/zero_padding2d_6/Pad/paddings:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tpaddings"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/conv2d_11/Conv2D/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_3_sequential_4_conv2d_11_conv2d_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/conv2d_11/Conv2D"
      op: "Conv2D"
      input: "sequential/resnet_block_3/sequential_4/zero_padding2d_6/Pad:output:0"
      input: "sequential/resnet_block_3/sequential_4/conv2d_11/Conv2D/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/conv2d_11/BiasAdd/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_3_sequential_4_conv2d_11_biasadd_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/conv2d_11/BiasAdd"
      op: "BiasAdd"
      input: "sequential/resnet_block_3/sequential_4/conv2d_11/Conv2D:output:0"
      input: "sequential/resnet_block_3/sequential_4/conv2d_11/BiasAdd/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_11/Shape"
      op: "Shape"
      input: "sequential/resnet_block_3/sequential_4/conv2d_11/BiasAdd:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_11/strided_slice/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_11/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_11/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_11/strided_slice"
      op: "StridedSlice"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_11/Shape:output:0"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_11/strided_slice/stack:output:0"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_11/strided_slice/stack_1:output:0"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_11/strided_slice/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_11/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_11/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_11/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_11/strided_slice_1"
      op: "StridedSlice"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_11/Shape:output:0"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_11/strided_slice_1/stack:output:0"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_11/strided_slice_1/stack_1:output:0"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_11/strided_slice_1/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_11/strided_slice_2/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_11/strided_slice_2/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_11/strided_slice_2/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_11/strided_slice_2"
      op: "StridedSlice"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_11/Shape:output:0"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_11/strided_slice_2/stack:output:0"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_11/strided_slice_2/stack_1:output:0"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_11/strided_slice_2/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_11/strided_slice_3/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_11/strided_slice_3/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 4
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_11/strided_slice_3/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_11/strided_slice_3"
      op: "StridedSlice"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_11/Shape:output:0"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_11/strided_slice_3/stack:output:0"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_11/strided_slice_3/stack_1:output:0"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_11/strided_slice_3/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_11/stack/1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1024
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_11/stack/4"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_11/stack"
      op: "Pack"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_11/strided_slice:output:0"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_11/stack/1:output:0"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_11/strided_slice_1:output:0"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_11/strided_slice_2:output:0"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_11/stack/4:output:0"
      attr {
        key: "N"
        value {
          i: 5
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_11/Reshape"
      op: "Reshape"
      input: "sequential/resnet_block_3/sequential_4/conv2d_11/BiasAdd:output:0"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_11/stack:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_11/moments/mean/reduction_indices"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_11/moments/mean"
      op: "Mean"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_11/Reshape:output:0"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_11/moments/mean/reduction_indices:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_11/moments/StopGradient"
      op: "StopGradient"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_11/moments/mean:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_11/moments/SquaredDifference"
      op: "SquaredDifference"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_11/Reshape:output:0"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_11/moments/StopGradient:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_11/moments/variance/reduction_indices"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_11/moments/variance"
      op: "Mean"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_11/moments/SquaredDifference:z:0"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_11/moments/variance/reduction_indices:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_11/Reshape_1/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_3_sequential_4_instance_normalization_11_reshape_1_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_11/Reshape_1/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 5
              }
            }
            tensor_content: "\001\000\000\000\000\004\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_11/Reshape_1"
      op: "Reshape"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_11/Reshape_1/ReadVariableOp:value:0"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_11/Reshape_1/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_11/Reshape_2/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_3_sequential_4_instance_normalization_11_reshape_2_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_11/Reshape_2/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 5
              }
            }
            tensor_content: "\001\000\000\000\000\004\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_11/Reshape_2"
      op: "Reshape"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_11/Reshape_2/ReadVariableOp:value:0"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_11/Reshape_2/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_11/batchnorm/add/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999747378752e-06
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_11/batchnorm/add"
      op: "Add"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_11/moments/variance:output:0"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_11/batchnorm/add/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_11/batchnorm/Rsqrt"
      op: "Rsqrt"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_11/batchnorm/add:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_11/batchnorm/mul"
      op: "Mul"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_11/batchnorm/Rsqrt:y:0"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_11/Reshape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_11/batchnorm/mul_1"
      op: "Mul"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_11/Reshape:output:0"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_11/batchnorm/mul:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_11/batchnorm/mul_2"
      op: "Mul"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_11/moments/mean:output:0"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_11/batchnorm/mul:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_11/batchnorm/sub"
      op: "Sub"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_11/Reshape_2:output:0"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_11/batchnorm/mul_2:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_11/batchnorm/add_1"
      op: "Add"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_11/batchnorm/mul_1:z:0"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_11/batchnorm/sub:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_11/Reshape_3"
      op: "Reshape"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_11/batchnorm/add_1:z:0"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_11/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/re_lu_1/Relu"
      op: "Relu"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_11/Reshape_3:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/zero_padding2d_7/Pad/paddings"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/zero_padding2d_7/Pad"
      op: "Pad"
      input: "sequential/resnet_block_3/sequential_4/re_lu_1/Relu:activations:0"
      input: "sequential/resnet_block_3/sequential_4/zero_padding2d_7/Pad/paddings:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tpaddings"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/conv2d_12/Conv2D/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_3_sequential_4_conv2d_12_conv2d_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/conv2d_12/Conv2D"
      op: "Conv2D"
      input: "sequential/resnet_block_3/sequential_4/zero_padding2d_7/Pad:output:0"
      input: "sequential/resnet_block_3/sequential_4/conv2d_12/Conv2D/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/conv2d_12/BiasAdd/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_3_sequential_4_conv2d_12_biasadd_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/conv2d_12/BiasAdd"
      op: "BiasAdd"
      input: "sequential/resnet_block_3/sequential_4/conv2d_12/Conv2D:output:0"
      input: "sequential/resnet_block_3/sequential_4/conv2d_12/BiasAdd/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_12/Shape"
      op: "Shape"
      input: "sequential/resnet_block_3/sequential_4/conv2d_12/BiasAdd:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_12/strided_slice/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_12/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_12/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_12/strided_slice"
      op: "StridedSlice"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_12/Shape:output:0"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_12/strided_slice/stack:output:0"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_12/strided_slice/stack_1:output:0"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_12/strided_slice/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_12/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_12/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_12/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_12/strided_slice_1"
      op: "StridedSlice"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_12/Shape:output:0"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_12/strided_slice_1/stack:output:0"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_12/strided_slice_1/stack_1:output:0"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_12/strided_slice_1/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_12/strided_slice_2/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_12/strided_slice_2/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_12/strided_slice_2/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_12/strided_slice_2"
      op: "StridedSlice"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_12/Shape:output:0"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_12/strided_slice_2/stack:output:0"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_12/strided_slice_2/stack_1:output:0"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_12/strided_slice_2/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_12/strided_slice_3/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_12/strided_slice_3/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 4
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_12/strided_slice_3/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_12/strided_slice_3"
      op: "StridedSlice"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_12/Shape:output:0"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_12/strided_slice_3/stack:output:0"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_12/strided_slice_3/stack_1:output:0"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_12/strided_slice_3/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_12/stack/1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1024
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_12/stack/4"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_12/stack"
      op: "Pack"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_12/strided_slice:output:0"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_12/stack/1:output:0"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_12/strided_slice_1:output:0"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_12/strided_slice_2:output:0"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_12/stack/4:output:0"
      attr {
        key: "N"
        value {
          i: 5
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_12/Reshape"
      op: "Reshape"
      input: "sequential/resnet_block_3/sequential_4/conv2d_12/BiasAdd:output:0"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_12/stack:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_12/moments/mean/reduction_indices"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_12/moments/mean"
      op: "Mean"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_12/Reshape:output:0"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_12/moments/mean/reduction_indices:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_12/moments/StopGradient"
      op: "StopGradient"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_12/moments/mean:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_12/moments/SquaredDifference"
      op: "SquaredDifference"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_12/Reshape:output:0"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_12/moments/StopGradient:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_12/moments/variance/reduction_indices"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_12/moments/variance"
      op: "Mean"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_12/moments/SquaredDifference:z:0"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_12/moments/variance/reduction_indices:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_12/Reshape_1/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_3_sequential_4_instance_normalization_12_reshape_1_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_12/Reshape_1/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 5
              }
            }
            tensor_content: "\001\000\000\000\000\004\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_12/Reshape_1"
      op: "Reshape"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_12/Reshape_1/ReadVariableOp:value:0"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_12/Reshape_1/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_12/Reshape_2/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_3_sequential_4_instance_normalization_12_reshape_2_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_12/Reshape_2/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 5
              }
            }
            tensor_content: "\001\000\000\000\000\004\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_12/Reshape_2"
      op: "Reshape"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_12/Reshape_2/ReadVariableOp:value:0"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_12/Reshape_2/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_12/batchnorm/add/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999747378752e-06
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_12/batchnorm/add"
      op: "Add"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_12/moments/variance:output:0"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_12/batchnorm/add/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_12/batchnorm/Rsqrt"
      op: "Rsqrt"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_12/batchnorm/add:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_12/batchnorm/mul"
      op: "Mul"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_12/batchnorm/Rsqrt:y:0"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_12/Reshape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_12/batchnorm/mul_1"
      op: "Mul"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_12/Reshape:output:0"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_12/batchnorm/mul:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_12/batchnorm/mul_2"
      op: "Mul"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_12/moments/mean:output:0"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_12/batchnorm/mul:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_12/batchnorm/sub"
      op: "Sub"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_12/Reshape_2:output:0"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_12/batchnorm/mul_2:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_12/batchnorm/add_1"
      op: "Add"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_12/batchnorm/mul_1:z:0"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_12/batchnorm/sub:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/sequential_4/instance_normalization_12/Reshape_3"
      op: "Reshape"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_12/batchnorm/add_1:z:0"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_12/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_3/add"
      op: "Add"
      input: "sequential/resnet_block_3/sequential_4/instance_normalization_12/Reshape_3:output:0"
      input: "sequential/resnet_block_2/add:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/zero_padding2d_8/Pad/paddings"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/zero_padding2d_8/Pad"
      op: "Pad"
      input: "sequential/resnet_block_3/add:z:0"
      input: "sequential/resnet_block_4/sequential_5/zero_padding2d_8/Pad/paddings:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tpaddings"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/conv2d_13/Conv2D/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_4_sequential_5_conv2d_13_conv2d_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/conv2d_13/Conv2D"
      op: "Conv2D"
      input: "sequential/resnet_block_4/sequential_5/zero_padding2d_8/Pad:output:0"
      input: "sequential/resnet_block_4/sequential_5/conv2d_13/Conv2D/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/conv2d_13/BiasAdd/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_4_sequential_5_conv2d_13_biasadd_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/conv2d_13/BiasAdd"
      op: "BiasAdd"
      input: "sequential/resnet_block_4/sequential_5/conv2d_13/Conv2D:output:0"
      input: "sequential/resnet_block_4/sequential_5/conv2d_13/BiasAdd/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_13/Shape"
      op: "Shape"
      input: "sequential/resnet_block_4/sequential_5/conv2d_13/BiasAdd:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_13/strided_slice/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_13/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_13/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_13/strided_slice"
      op: "StridedSlice"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_13/Shape:output:0"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_13/strided_slice/stack:output:0"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_13/strided_slice/stack_1:output:0"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_13/strided_slice/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_13/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_13/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_13/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_13/strided_slice_1"
      op: "StridedSlice"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_13/Shape:output:0"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_13/strided_slice_1/stack:output:0"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_13/strided_slice_1/stack_1:output:0"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_13/strided_slice_1/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_13/strided_slice_2/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_13/strided_slice_2/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_13/strided_slice_2/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_13/strided_slice_2"
      op: "StridedSlice"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_13/Shape:output:0"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_13/strided_slice_2/stack:output:0"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_13/strided_slice_2/stack_1:output:0"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_13/strided_slice_2/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_13/strided_slice_3/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_13/strided_slice_3/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 4
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_13/strided_slice_3/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_13/strided_slice_3"
      op: "StridedSlice"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_13/Shape:output:0"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_13/strided_slice_3/stack:output:0"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_13/strided_slice_3/stack_1:output:0"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_13/strided_slice_3/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_13/stack/1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1024
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_13/stack/4"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_13/stack"
      op: "Pack"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_13/strided_slice:output:0"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_13/stack/1:output:0"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_13/strided_slice_1:output:0"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_13/strided_slice_2:output:0"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_13/stack/4:output:0"
      attr {
        key: "N"
        value {
          i: 5
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_13/Reshape"
      op: "Reshape"
      input: "sequential/resnet_block_4/sequential_5/conv2d_13/BiasAdd:output:0"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_13/stack:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_13/moments/mean/reduction_indices"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_13/moments/mean"
      op: "Mean"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_13/Reshape:output:0"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_13/moments/mean/reduction_indices:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_13/moments/StopGradient"
      op: "StopGradient"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_13/moments/mean:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_13/moments/SquaredDifference"
      op: "SquaredDifference"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_13/Reshape:output:0"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_13/moments/StopGradient:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_13/moments/variance/reduction_indices"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_13/moments/variance"
      op: "Mean"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_13/moments/SquaredDifference:z:0"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_13/moments/variance/reduction_indices:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_13/Reshape_1/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_4_sequential_5_instance_normalization_13_reshape_1_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_13/Reshape_1/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 5
              }
            }
            tensor_content: "\001\000\000\000\000\004\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_13/Reshape_1"
      op: "Reshape"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_13/Reshape_1/ReadVariableOp:value:0"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_13/Reshape_1/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_13/Reshape_2/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_4_sequential_5_instance_normalization_13_reshape_2_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_13/Reshape_2/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 5
              }
            }
            tensor_content: "\001\000\000\000\000\004\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_13/Reshape_2"
      op: "Reshape"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_13/Reshape_2/ReadVariableOp:value:0"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_13/Reshape_2/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_13/batchnorm/add/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999747378752e-06
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_13/batchnorm/add"
      op: "Add"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_13/moments/variance:output:0"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_13/batchnorm/add/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_13/batchnorm/Rsqrt"
      op: "Rsqrt"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_13/batchnorm/add:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_13/batchnorm/mul"
      op: "Mul"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_13/batchnorm/Rsqrt:y:0"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_13/Reshape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_13/batchnorm/mul_1"
      op: "Mul"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_13/Reshape:output:0"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_13/batchnorm/mul:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_13/batchnorm/mul_2"
      op: "Mul"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_13/moments/mean:output:0"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_13/batchnorm/mul:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_13/batchnorm/sub"
      op: "Sub"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_13/Reshape_2:output:0"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_13/batchnorm/mul_2:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_13/batchnorm/add_1"
      op: "Add"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_13/batchnorm/mul_1:z:0"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_13/batchnorm/sub:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_13/Reshape_3"
      op: "Reshape"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_13/batchnorm/add_1:z:0"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_13/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/re_lu_1/Relu"
      op: "Relu"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_13/Reshape_3:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/zero_padding2d_9/Pad/paddings"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/zero_padding2d_9/Pad"
      op: "Pad"
      input: "sequential/resnet_block_4/sequential_5/re_lu_1/Relu:activations:0"
      input: "sequential/resnet_block_4/sequential_5/zero_padding2d_9/Pad/paddings:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tpaddings"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/conv2d_14/Conv2D/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_4_sequential_5_conv2d_14_conv2d_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/conv2d_14/Conv2D"
      op: "Conv2D"
      input: "sequential/resnet_block_4/sequential_5/zero_padding2d_9/Pad:output:0"
      input: "sequential/resnet_block_4/sequential_5/conv2d_14/Conv2D/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/conv2d_14/BiasAdd/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_4_sequential_5_conv2d_14_biasadd_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/conv2d_14/BiasAdd"
      op: "BiasAdd"
      input: "sequential/resnet_block_4/sequential_5/conv2d_14/Conv2D:output:0"
      input: "sequential/resnet_block_4/sequential_5/conv2d_14/BiasAdd/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_14/Shape"
      op: "Shape"
      input: "sequential/resnet_block_4/sequential_5/conv2d_14/BiasAdd:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_14/strided_slice/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_14/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_14/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_14/strided_slice"
      op: "StridedSlice"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_14/Shape:output:0"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_14/strided_slice/stack:output:0"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_14/strided_slice/stack_1:output:0"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_14/strided_slice/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_14/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_14/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_14/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_14/strided_slice_1"
      op: "StridedSlice"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_14/Shape:output:0"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_14/strided_slice_1/stack:output:0"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_14/strided_slice_1/stack_1:output:0"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_14/strided_slice_1/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_14/strided_slice_2/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_14/strided_slice_2/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_14/strided_slice_2/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_14/strided_slice_2"
      op: "StridedSlice"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_14/Shape:output:0"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_14/strided_slice_2/stack:output:0"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_14/strided_slice_2/stack_1:output:0"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_14/strided_slice_2/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_14/strided_slice_3/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_14/strided_slice_3/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 4
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_14/strided_slice_3/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_14/strided_slice_3"
      op: "StridedSlice"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_14/Shape:output:0"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_14/strided_slice_3/stack:output:0"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_14/strided_slice_3/stack_1:output:0"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_14/strided_slice_3/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_14/stack/1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1024
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_14/stack/4"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_14/stack"
      op: "Pack"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_14/strided_slice:output:0"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_14/stack/1:output:0"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_14/strided_slice_1:output:0"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_14/strided_slice_2:output:0"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_14/stack/4:output:0"
      attr {
        key: "N"
        value {
          i: 5
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_14/Reshape"
      op: "Reshape"
      input: "sequential/resnet_block_4/sequential_5/conv2d_14/BiasAdd:output:0"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_14/stack:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_14/moments/mean/reduction_indices"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_14/moments/mean"
      op: "Mean"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_14/Reshape:output:0"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_14/moments/mean/reduction_indices:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_14/moments/StopGradient"
      op: "StopGradient"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_14/moments/mean:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_14/moments/SquaredDifference"
      op: "SquaredDifference"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_14/Reshape:output:0"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_14/moments/StopGradient:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_14/moments/variance/reduction_indices"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_14/moments/variance"
      op: "Mean"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_14/moments/SquaredDifference:z:0"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_14/moments/variance/reduction_indices:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_14/Reshape_1/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_4_sequential_5_instance_normalization_14_reshape_1_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_14/Reshape_1/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 5
              }
            }
            tensor_content: "\001\000\000\000\000\004\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_14/Reshape_1"
      op: "Reshape"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_14/Reshape_1/ReadVariableOp:value:0"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_14/Reshape_1/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_14/Reshape_2/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_4_sequential_5_instance_normalization_14_reshape_2_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_14/Reshape_2/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 5
              }
            }
            tensor_content: "\001\000\000\000\000\004\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_14/Reshape_2"
      op: "Reshape"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_14/Reshape_2/ReadVariableOp:value:0"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_14/Reshape_2/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_14/batchnorm/add/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999747378752e-06
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_14/batchnorm/add"
      op: "Add"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_14/moments/variance:output:0"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_14/batchnorm/add/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_14/batchnorm/Rsqrt"
      op: "Rsqrt"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_14/batchnorm/add:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_14/batchnorm/mul"
      op: "Mul"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_14/batchnorm/Rsqrt:y:0"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_14/Reshape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_14/batchnorm/mul_1"
      op: "Mul"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_14/Reshape:output:0"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_14/batchnorm/mul:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_14/batchnorm/mul_2"
      op: "Mul"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_14/moments/mean:output:0"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_14/batchnorm/mul:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_14/batchnorm/sub"
      op: "Sub"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_14/Reshape_2:output:0"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_14/batchnorm/mul_2:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_14/batchnorm/add_1"
      op: "Add"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_14/batchnorm/mul_1:z:0"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_14/batchnorm/sub:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/sequential_5/instance_normalization_14/Reshape_3"
      op: "Reshape"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_14/batchnorm/add_1:z:0"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_14/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_4/add"
      op: "Add"
      input: "sequential/resnet_block_4/sequential_5/instance_normalization_14/Reshape_3:output:0"
      input: "sequential/resnet_block_3/add:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/zero_padding2d_10/Pad/paddings"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/zero_padding2d_10/Pad"
      op: "Pad"
      input: "sequential/resnet_block_4/add:z:0"
      input: "sequential/resnet_block_5/sequential_6/zero_padding2d_10/Pad/paddings:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tpaddings"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/conv2d_15/Conv2D/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_5_sequential_6_conv2d_15_conv2d_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/conv2d_15/Conv2D"
      op: "Conv2D"
      input: "sequential/resnet_block_5/sequential_6/zero_padding2d_10/Pad:output:0"
      input: "sequential/resnet_block_5/sequential_6/conv2d_15/Conv2D/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/conv2d_15/BiasAdd/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_5_sequential_6_conv2d_15_biasadd_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/conv2d_15/BiasAdd"
      op: "BiasAdd"
      input: "sequential/resnet_block_5/sequential_6/conv2d_15/Conv2D:output:0"
      input: "sequential/resnet_block_5/sequential_6/conv2d_15/BiasAdd/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_15/Shape"
      op: "Shape"
      input: "sequential/resnet_block_5/sequential_6/conv2d_15/BiasAdd:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_15/strided_slice/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_15/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_15/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_15/strided_slice"
      op: "StridedSlice"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_15/Shape:output:0"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_15/strided_slice/stack:output:0"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_15/strided_slice/stack_1:output:0"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_15/strided_slice/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_15/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_15/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_15/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_15/strided_slice_1"
      op: "StridedSlice"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_15/Shape:output:0"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_15/strided_slice_1/stack:output:0"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_15/strided_slice_1/stack_1:output:0"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_15/strided_slice_1/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_15/strided_slice_2/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_15/strided_slice_2/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_15/strided_slice_2/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_15/strided_slice_2"
      op: "StridedSlice"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_15/Shape:output:0"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_15/strided_slice_2/stack:output:0"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_15/strided_slice_2/stack_1:output:0"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_15/strided_slice_2/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_15/strided_slice_3/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_15/strided_slice_3/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 4
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_15/strided_slice_3/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_15/strided_slice_3"
      op: "StridedSlice"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_15/Shape:output:0"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_15/strided_slice_3/stack:output:0"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_15/strided_slice_3/stack_1:output:0"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_15/strided_slice_3/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_15/stack/1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1024
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_15/stack/4"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_15/stack"
      op: "Pack"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_15/strided_slice:output:0"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_15/stack/1:output:0"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_15/strided_slice_1:output:0"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_15/strided_slice_2:output:0"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_15/stack/4:output:0"
      attr {
        key: "N"
        value {
          i: 5
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_15/Reshape"
      op: "Reshape"
      input: "sequential/resnet_block_5/sequential_6/conv2d_15/BiasAdd:output:0"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_15/stack:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_15/moments/mean/reduction_indices"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_15/moments/mean"
      op: "Mean"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_15/Reshape:output:0"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_15/moments/mean/reduction_indices:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_15/moments/StopGradient"
      op: "StopGradient"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_15/moments/mean:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_15/moments/SquaredDifference"
      op: "SquaredDifference"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_15/Reshape:output:0"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_15/moments/StopGradient:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_15/moments/variance/reduction_indices"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_15/moments/variance"
      op: "Mean"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_15/moments/SquaredDifference:z:0"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_15/moments/variance/reduction_indices:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_15/Reshape_1/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_5_sequential_6_instance_normalization_15_reshape_1_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_15/Reshape_1/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 5
              }
            }
            tensor_content: "\001\000\000\000\000\004\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_15/Reshape_1"
      op: "Reshape"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_15/Reshape_1/ReadVariableOp:value:0"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_15/Reshape_1/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_15/Reshape_2/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_5_sequential_6_instance_normalization_15_reshape_2_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_15/Reshape_2/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 5
              }
            }
            tensor_content: "\001\000\000\000\000\004\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_15/Reshape_2"
      op: "Reshape"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_15/Reshape_2/ReadVariableOp:value:0"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_15/Reshape_2/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_15/batchnorm/add/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999747378752e-06
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_15/batchnorm/add"
      op: "Add"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_15/moments/variance:output:0"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_15/batchnorm/add/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_15/batchnorm/Rsqrt"
      op: "Rsqrt"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_15/batchnorm/add:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_15/batchnorm/mul"
      op: "Mul"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_15/batchnorm/Rsqrt:y:0"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_15/Reshape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_15/batchnorm/mul_1"
      op: "Mul"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_15/Reshape:output:0"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_15/batchnorm/mul:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_15/batchnorm/mul_2"
      op: "Mul"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_15/moments/mean:output:0"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_15/batchnorm/mul:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_15/batchnorm/sub"
      op: "Sub"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_15/Reshape_2:output:0"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_15/batchnorm/mul_2:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_15/batchnorm/add_1"
      op: "Add"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_15/batchnorm/mul_1:z:0"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_15/batchnorm/sub:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_15/Reshape_3"
      op: "Reshape"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_15/batchnorm/add_1:z:0"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_15/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/re_lu_1/Relu"
      op: "Relu"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_15/Reshape_3:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/zero_padding2d_11/Pad/paddings"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/zero_padding2d_11/Pad"
      op: "Pad"
      input: "sequential/resnet_block_5/sequential_6/re_lu_1/Relu:activations:0"
      input: "sequential/resnet_block_5/sequential_6/zero_padding2d_11/Pad/paddings:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tpaddings"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/conv2d_16/Conv2D/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_5_sequential_6_conv2d_16_conv2d_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/conv2d_16/Conv2D"
      op: "Conv2D"
      input: "sequential/resnet_block_5/sequential_6/zero_padding2d_11/Pad:output:0"
      input: "sequential/resnet_block_5/sequential_6/conv2d_16/Conv2D/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/conv2d_16/BiasAdd/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_5_sequential_6_conv2d_16_biasadd_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/conv2d_16/BiasAdd"
      op: "BiasAdd"
      input: "sequential/resnet_block_5/sequential_6/conv2d_16/Conv2D:output:0"
      input: "sequential/resnet_block_5/sequential_6/conv2d_16/BiasAdd/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_16/Shape"
      op: "Shape"
      input: "sequential/resnet_block_5/sequential_6/conv2d_16/BiasAdd:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_16/strided_slice/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_16/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_16/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_16/strided_slice"
      op: "StridedSlice"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_16/Shape:output:0"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_16/strided_slice/stack:output:0"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_16/strided_slice/stack_1:output:0"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_16/strided_slice/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_16/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_16/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_16/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_16/strided_slice_1"
      op: "StridedSlice"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_16/Shape:output:0"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_16/strided_slice_1/stack:output:0"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_16/strided_slice_1/stack_1:output:0"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_16/strided_slice_1/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_16/strided_slice_2/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_16/strided_slice_2/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_16/strided_slice_2/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_16/strided_slice_2"
      op: "StridedSlice"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_16/Shape:output:0"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_16/strided_slice_2/stack:output:0"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_16/strided_slice_2/stack_1:output:0"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_16/strided_slice_2/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_16/strided_slice_3/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_16/strided_slice_3/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 4
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_16/strided_slice_3/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_16/strided_slice_3"
      op: "StridedSlice"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_16/Shape:output:0"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_16/strided_slice_3/stack:output:0"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_16/strided_slice_3/stack_1:output:0"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_16/strided_slice_3/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_16/stack/1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1024
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_16/stack/4"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_16/stack"
      op: "Pack"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_16/strided_slice:output:0"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_16/stack/1:output:0"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_16/strided_slice_1:output:0"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_16/strided_slice_2:output:0"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_16/stack/4:output:0"
      attr {
        key: "N"
        value {
          i: 5
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_16/Reshape"
      op: "Reshape"
      input: "sequential/resnet_block_5/sequential_6/conv2d_16/BiasAdd:output:0"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_16/stack:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_16/moments/mean/reduction_indices"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_16/moments/mean"
      op: "Mean"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_16/Reshape:output:0"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_16/moments/mean/reduction_indices:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_16/moments/StopGradient"
      op: "StopGradient"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_16/moments/mean:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_16/moments/SquaredDifference"
      op: "SquaredDifference"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_16/Reshape:output:0"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_16/moments/StopGradient:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_16/moments/variance/reduction_indices"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_16/moments/variance"
      op: "Mean"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_16/moments/SquaredDifference:z:0"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_16/moments/variance/reduction_indices:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_16/Reshape_1/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_5_sequential_6_instance_normalization_16_reshape_1_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_16/Reshape_1/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 5
              }
            }
            tensor_content: "\001\000\000\000\000\004\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_16/Reshape_1"
      op: "Reshape"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_16/Reshape_1/ReadVariableOp:value:0"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_16/Reshape_1/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_16/Reshape_2/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_5_sequential_6_instance_normalization_16_reshape_2_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_16/Reshape_2/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 5
              }
            }
            tensor_content: "\001\000\000\000\000\004\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_16/Reshape_2"
      op: "Reshape"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_16/Reshape_2/ReadVariableOp:value:0"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_16/Reshape_2/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_16/batchnorm/add/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999747378752e-06
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_16/batchnorm/add"
      op: "Add"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_16/moments/variance:output:0"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_16/batchnorm/add/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_16/batchnorm/Rsqrt"
      op: "Rsqrt"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_16/batchnorm/add:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_16/batchnorm/mul"
      op: "Mul"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_16/batchnorm/Rsqrt:y:0"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_16/Reshape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_16/batchnorm/mul_1"
      op: "Mul"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_16/Reshape:output:0"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_16/batchnorm/mul:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_16/batchnorm/mul_2"
      op: "Mul"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_16/moments/mean:output:0"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_16/batchnorm/mul:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_16/batchnorm/sub"
      op: "Sub"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_16/Reshape_2:output:0"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_16/batchnorm/mul_2:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_16/batchnorm/add_1"
      op: "Add"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_16/batchnorm/mul_1:z:0"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_16/batchnorm/sub:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/sequential_6/instance_normalization_16/Reshape_3"
      op: "Reshape"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_16/batchnorm/add_1:z:0"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_16/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_5/add"
      op: "Add"
      input: "sequential/resnet_block_5/sequential_6/instance_normalization_16/Reshape_3:output:0"
      input: "sequential/resnet_block_4/add:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/zero_padding2d_12/Pad/paddings"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/zero_padding2d_12/Pad"
      op: "Pad"
      input: "sequential/resnet_block_5/add:z:0"
      input: "sequential/resnet_block_6/sequential_7/zero_padding2d_12/Pad/paddings:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tpaddings"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/conv2d_17/Conv2D/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_6_sequential_7_conv2d_17_conv2d_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/conv2d_17/Conv2D"
      op: "Conv2D"
      input: "sequential/resnet_block_6/sequential_7/zero_padding2d_12/Pad:output:0"
      input: "sequential/resnet_block_6/sequential_7/conv2d_17/Conv2D/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/conv2d_17/BiasAdd/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_6_sequential_7_conv2d_17_biasadd_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/conv2d_17/BiasAdd"
      op: "BiasAdd"
      input: "sequential/resnet_block_6/sequential_7/conv2d_17/Conv2D:output:0"
      input: "sequential/resnet_block_6/sequential_7/conv2d_17/BiasAdd/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_17/Shape"
      op: "Shape"
      input: "sequential/resnet_block_6/sequential_7/conv2d_17/BiasAdd:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_17/strided_slice/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_17/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_17/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_17/strided_slice"
      op: "StridedSlice"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_17/Shape:output:0"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_17/strided_slice/stack:output:0"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_17/strided_slice/stack_1:output:0"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_17/strided_slice/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_17/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_17/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_17/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_17/strided_slice_1"
      op: "StridedSlice"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_17/Shape:output:0"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_17/strided_slice_1/stack:output:0"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_17/strided_slice_1/stack_1:output:0"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_17/strided_slice_1/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_17/strided_slice_2/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_17/strided_slice_2/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_17/strided_slice_2/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_17/strided_slice_2"
      op: "StridedSlice"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_17/Shape:output:0"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_17/strided_slice_2/stack:output:0"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_17/strided_slice_2/stack_1:output:0"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_17/strided_slice_2/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_17/strided_slice_3/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_17/strided_slice_3/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 4
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_17/strided_slice_3/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_17/strided_slice_3"
      op: "StridedSlice"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_17/Shape:output:0"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_17/strided_slice_3/stack:output:0"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_17/strided_slice_3/stack_1:output:0"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_17/strided_slice_3/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_17/stack/1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1024
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_17/stack/4"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_17/stack"
      op: "Pack"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_17/strided_slice:output:0"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_17/stack/1:output:0"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_17/strided_slice_1:output:0"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_17/strided_slice_2:output:0"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_17/stack/4:output:0"
      attr {
        key: "N"
        value {
          i: 5
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_17/Reshape"
      op: "Reshape"
      input: "sequential/resnet_block_6/sequential_7/conv2d_17/BiasAdd:output:0"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_17/stack:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_17/moments/mean/reduction_indices"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_17/moments/mean"
      op: "Mean"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_17/Reshape:output:0"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_17/moments/mean/reduction_indices:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_17/moments/StopGradient"
      op: "StopGradient"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_17/moments/mean:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_17/moments/SquaredDifference"
      op: "SquaredDifference"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_17/Reshape:output:0"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_17/moments/StopGradient:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_17/moments/variance/reduction_indices"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_17/moments/variance"
      op: "Mean"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_17/moments/SquaredDifference:z:0"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_17/moments/variance/reduction_indices:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_17/Reshape_1/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_6_sequential_7_instance_normalization_17_reshape_1_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_17/Reshape_1/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 5
              }
            }
            tensor_content: "\001\000\000\000\000\004\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_17/Reshape_1"
      op: "Reshape"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_17/Reshape_1/ReadVariableOp:value:0"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_17/Reshape_1/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_17/Reshape_2/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_6_sequential_7_instance_normalization_17_reshape_2_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_17/Reshape_2/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 5
              }
            }
            tensor_content: "\001\000\000\000\000\004\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_17/Reshape_2"
      op: "Reshape"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_17/Reshape_2/ReadVariableOp:value:0"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_17/Reshape_2/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_17/batchnorm/add/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999747378752e-06
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_17/batchnorm/add"
      op: "Add"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_17/moments/variance:output:0"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_17/batchnorm/add/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_17/batchnorm/Rsqrt"
      op: "Rsqrt"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_17/batchnorm/add:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_17/batchnorm/mul"
      op: "Mul"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_17/batchnorm/Rsqrt:y:0"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_17/Reshape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_17/batchnorm/mul_1"
      op: "Mul"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_17/Reshape:output:0"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_17/batchnorm/mul:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_17/batchnorm/mul_2"
      op: "Mul"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_17/moments/mean:output:0"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_17/batchnorm/mul:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_17/batchnorm/sub"
      op: "Sub"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_17/Reshape_2:output:0"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_17/batchnorm/mul_2:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_17/batchnorm/add_1"
      op: "Add"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_17/batchnorm/mul_1:z:0"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_17/batchnorm/sub:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_17/Reshape_3"
      op: "Reshape"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_17/batchnorm/add_1:z:0"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_17/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/re_lu_1/Relu"
      op: "Relu"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_17/Reshape_3:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/zero_padding2d_13/Pad/paddings"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/zero_padding2d_13/Pad"
      op: "Pad"
      input: "sequential/resnet_block_6/sequential_7/re_lu_1/Relu:activations:0"
      input: "sequential/resnet_block_6/sequential_7/zero_padding2d_13/Pad/paddings:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tpaddings"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/conv2d_18/Conv2D/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_6_sequential_7_conv2d_18_conv2d_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/conv2d_18/Conv2D"
      op: "Conv2D"
      input: "sequential/resnet_block_6/sequential_7/zero_padding2d_13/Pad:output:0"
      input: "sequential/resnet_block_6/sequential_7/conv2d_18/Conv2D/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/conv2d_18/BiasAdd/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_6_sequential_7_conv2d_18_biasadd_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/conv2d_18/BiasAdd"
      op: "BiasAdd"
      input: "sequential/resnet_block_6/sequential_7/conv2d_18/Conv2D:output:0"
      input: "sequential/resnet_block_6/sequential_7/conv2d_18/BiasAdd/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_18/Shape"
      op: "Shape"
      input: "sequential/resnet_block_6/sequential_7/conv2d_18/BiasAdd:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_18/strided_slice/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_18/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_18/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_18/strided_slice"
      op: "StridedSlice"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_18/Shape:output:0"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_18/strided_slice/stack:output:0"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_18/strided_slice/stack_1:output:0"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_18/strided_slice/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_18/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_18/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_18/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_18/strided_slice_1"
      op: "StridedSlice"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_18/Shape:output:0"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_18/strided_slice_1/stack:output:0"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_18/strided_slice_1/stack_1:output:0"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_18/strided_slice_1/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_18/strided_slice_2/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_18/strided_slice_2/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_18/strided_slice_2/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_18/strided_slice_2"
      op: "StridedSlice"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_18/Shape:output:0"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_18/strided_slice_2/stack:output:0"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_18/strided_slice_2/stack_1:output:0"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_18/strided_slice_2/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_18/strided_slice_3/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_18/strided_slice_3/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 4
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_18/strided_slice_3/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_18/strided_slice_3"
      op: "StridedSlice"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_18/Shape:output:0"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_18/strided_slice_3/stack:output:0"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_18/strided_slice_3/stack_1:output:0"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_18/strided_slice_3/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_18/stack/1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1024
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_18/stack/4"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_18/stack"
      op: "Pack"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_18/strided_slice:output:0"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_18/stack/1:output:0"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_18/strided_slice_1:output:0"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_18/strided_slice_2:output:0"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_18/stack/4:output:0"
      attr {
        key: "N"
        value {
          i: 5
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_18/Reshape"
      op: "Reshape"
      input: "sequential/resnet_block_6/sequential_7/conv2d_18/BiasAdd:output:0"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_18/stack:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_18/moments/mean/reduction_indices"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_18/moments/mean"
      op: "Mean"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_18/Reshape:output:0"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_18/moments/mean/reduction_indices:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_18/moments/StopGradient"
      op: "StopGradient"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_18/moments/mean:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_18/moments/SquaredDifference"
      op: "SquaredDifference"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_18/Reshape:output:0"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_18/moments/StopGradient:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_18/moments/variance/reduction_indices"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_18/moments/variance"
      op: "Mean"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_18/moments/SquaredDifference:z:0"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_18/moments/variance/reduction_indices:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_18/Reshape_1/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_6_sequential_7_instance_normalization_18_reshape_1_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_18/Reshape_1/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 5
              }
            }
            tensor_content: "\001\000\000\000\000\004\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_18/Reshape_1"
      op: "Reshape"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_18/Reshape_1/ReadVariableOp:value:0"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_18/Reshape_1/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_18/Reshape_2/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_6_sequential_7_instance_normalization_18_reshape_2_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_18/Reshape_2/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 5
              }
            }
            tensor_content: "\001\000\000\000\000\004\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_18/Reshape_2"
      op: "Reshape"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_18/Reshape_2/ReadVariableOp:value:0"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_18/Reshape_2/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_18/batchnorm/add/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999747378752e-06
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_18/batchnorm/add"
      op: "Add"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_18/moments/variance:output:0"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_18/batchnorm/add/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_18/batchnorm/Rsqrt"
      op: "Rsqrt"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_18/batchnorm/add:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_18/batchnorm/mul"
      op: "Mul"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_18/batchnorm/Rsqrt:y:0"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_18/Reshape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_18/batchnorm/mul_1"
      op: "Mul"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_18/Reshape:output:0"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_18/batchnorm/mul:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_18/batchnorm/mul_2"
      op: "Mul"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_18/moments/mean:output:0"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_18/batchnorm/mul:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_18/batchnorm/sub"
      op: "Sub"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_18/Reshape_2:output:0"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_18/batchnorm/mul_2:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_18/batchnorm/add_1"
      op: "Add"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_18/batchnorm/mul_1:z:0"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_18/batchnorm/sub:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/sequential_7/instance_normalization_18/Reshape_3"
      op: "Reshape"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_18/batchnorm/add_1:z:0"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_18/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_6/add"
      op: "Add"
      input: "sequential/resnet_block_6/sequential_7/instance_normalization_18/Reshape_3:output:0"
      input: "sequential/resnet_block_5/add:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/zero_padding2d_14/Pad/paddings"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/zero_padding2d_14/Pad"
      op: "Pad"
      input: "sequential/resnet_block_6/add:z:0"
      input: "sequential/resnet_block_7/sequential_8/zero_padding2d_14/Pad/paddings:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tpaddings"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/conv2d_19/Conv2D/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_7_sequential_8_conv2d_19_conv2d_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/conv2d_19/Conv2D"
      op: "Conv2D"
      input: "sequential/resnet_block_7/sequential_8/zero_padding2d_14/Pad:output:0"
      input: "sequential/resnet_block_7/sequential_8/conv2d_19/Conv2D/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/conv2d_19/BiasAdd/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_7_sequential_8_conv2d_19_biasadd_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/conv2d_19/BiasAdd"
      op: "BiasAdd"
      input: "sequential/resnet_block_7/sequential_8/conv2d_19/Conv2D:output:0"
      input: "sequential/resnet_block_7/sequential_8/conv2d_19/BiasAdd/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_19/Shape"
      op: "Shape"
      input: "sequential/resnet_block_7/sequential_8/conv2d_19/BiasAdd:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_19/strided_slice/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_19/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_19/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_19/strided_slice"
      op: "StridedSlice"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_19/Shape:output:0"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_19/strided_slice/stack:output:0"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_19/strided_slice/stack_1:output:0"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_19/strided_slice/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_19/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_19/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_19/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_19/strided_slice_1"
      op: "StridedSlice"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_19/Shape:output:0"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_19/strided_slice_1/stack:output:0"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_19/strided_slice_1/stack_1:output:0"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_19/strided_slice_1/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_19/strided_slice_2/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_19/strided_slice_2/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_19/strided_slice_2/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_19/strided_slice_2"
      op: "StridedSlice"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_19/Shape:output:0"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_19/strided_slice_2/stack:output:0"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_19/strided_slice_2/stack_1:output:0"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_19/strided_slice_2/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_19/strided_slice_3/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_19/strided_slice_3/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 4
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_19/strided_slice_3/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_19/strided_slice_3"
      op: "StridedSlice"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_19/Shape:output:0"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_19/strided_slice_3/stack:output:0"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_19/strided_slice_3/stack_1:output:0"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_19/strided_slice_3/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_19/stack/1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1024
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_19/stack/4"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_19/stack"
      op: "Pack"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_19/strided_slice:output:0"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_19/stack/1:output:0"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_19/strided_slice_1:output:0"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_19/strided_slice_2:output:0"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_19/stack/4:output:0"
      attr {
        key: "N"
        value {
          i: 5
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_19/Reshape"
      op: "Reshape"
      input: "sequential/resnet_block_7/sequential_8/conv2d_19/BiasAdd:output:0"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_19/stack:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_19/moments/mean/reduction_indices"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_19/moments/mean"
      op: "Mean"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_19/Reshape:output:0"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_19/moments/mean/reduction_indices:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_19/moments/StopGradient"
      op: "StopGradient"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_19/moments/mean:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_19/moments/SquaredDifference"
      op: "SquaredDifference"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_19/Reshape:output:0"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_19/moments/StopGradient:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_19/moments/variance/reduction_indices"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_19/moments/variance"
      op: "Mean"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_19/moments/SquaredDifference:z:0"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_19/moments/variance/reduction_indices:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_19/Reshape_1/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_7_sequential_8_instance_normalization_19_reshape_1_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_19/Reshape_1/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 5
              }
            }
            tensor_content: "\001\000\000\000\000\004\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_19/Reshape_1"
      op: "Reshape"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_19/Reshape_1/ReadVariableOp:value:0"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_19/Reshape_1/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_19/Reshape_2/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_7_sequential_8_instance_normalization_19_reshape_2_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_19/Reshape_2/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 5
              }
            }
            tensor_content: "\001\000\000\000\000\004\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_19/Reshape_2"
      op: "Reshape"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_19/Reshape_2/ReadVariableOp:value:0"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_19/Reshape_2/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_19/batchnorm/add/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999747378752e-06
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_19/batchnorm/add"
      op: "Add"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_19/moments/variance:output:0"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_19/batchnorm/add/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_19/batchnorm/Rsqrt"
      op: "Rsqrt"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_19/batchnorm/add:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_19/batchnorm/mul"
      op: "Mul"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_19/batchnorm/Rsqrt:y:0"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_19/Reshape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_19/batchnorm/mul_1"
      op: "Mul"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_19/Reshape:output:0"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_19/batchnorm/mul:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_19/batchnorm/mul_2"
      op: "Mul"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_19/moments/mean:output:0"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_19/batchnorm/mul:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_19/batchnorm/sub"
      op: "Sub"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_19/Reshape_2:output:0"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_19/batchnorm/mul_2:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_19/batchnorm/add_1"
      op: "Add"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_19/batchnorm/mul_1:z:0"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_19/batchnorm/sub:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_19/Reshape_3"
      op: "Reshape"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_19/batchnorm/add_1:z:0"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_19/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/re_lu_1/Relu"
      op: "Relu"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_19/Reshape_3:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/zero_padding2d_15/Pad/paddings"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/zero_padding2d_15/Pad"
      op: "Pad"
      input: "sequential/resnet_block_7/sequential_8/re_lu_1/Relu:activations:0"
      input: "sequential/resnet_block_7/sequential_8/zero_padding2d_15/Pad/paddings:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tpaddings"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/conv2d_20/Conv2D/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_7_sequential_8_conv2d_20_conv2d_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/conv2d_20/Conv2D"
      op: "Conv2D"
      input: "sequential/resnet_block_7/sequential_8/zero_padding2d_15/Pad:output:0"
      input: "sequential/resnet_block_7/sequential_8/conv2d_20/Conv2D/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/conv2d_20/BiasAdd/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_7_sequential_8_conv2d_20_biasadd_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/conv2d_20/BiasAdd"
      op: "BiasAdd"
      input: "sequential/resnet_block_7/sequential_8/conv2d_20/Conv2D:output:0"
      input: "sequential/resnet_block_7/sequential_8/conv2d_20/BiasAdd/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_20/Shape"
      op: "Shape"
      input: "sequential/resnet_block_7/sequential_8/conv2d_20/BiasAdd:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_20/strided_slice/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_20/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_20/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_20/strided_slice"
      op: "StridedSlice"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_20/Shape:output:0"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_20/strided_slice/stack:output:0"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_20/strided_slice/stack_1:output:0"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_20/strided_slice/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_20/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_20/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_20/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_20/strided_slice_1"
      op: "StridedSlice"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_20/Shape:output:0"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_20/strided_slice_1/stack:output:0"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_20/strided_slice_1/stack_1:output:0"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_20/strided_slice_1/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_20/strided_slice_2/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_20/strided_slice_2/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_20/strided_slice_2/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_20/strided_slice_2"
      op: "StridedSlice"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_20/Shape:output:0"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_20/strided_slice_2/stack:output:0"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_20/strided_slice_2/stack_1:output:0"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_20/strided_slice_2/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_20/strided_slice_3/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_20/strided_slice_3/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 4
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_20/strided_slice_3/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_20/strided_slice_3"
      op: "StridedSlice"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_20/Shape:output:0"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_20/strided_slice_3/stack:output:0"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_20/strided_slice_3/stack_1:output:0"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_20/strided_slice_3/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_20/stack/1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1024
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_20/stack/4"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_20/stack"
      op: "Pack"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_20/strided_slice:output:0"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_20/stack/1:output:0"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_20/strided_slice_1:output:0"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_20/strided_slice_2:output:0"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_20/stack/4:output:0"
      attr {
        key: "N"
        value {
          i: 5
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_20/Reshape"
      op: "Reshape"
      input: "sequential/resnet_block_7/sequential_8/conv2d_20/BiasAdd:output:0"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_20/stack:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_20/moments/mean/reduction_indices"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_20/moments/mean"
      op: "Mean"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_20/Reshape:output:0"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_20/moments/mean/reduction_indices:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_20/moments/StopGradient"
      op: "StopGradient"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_20/moments/mean:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_20/moments/SquaredDifference"
      op: "SquaredDifference"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_20/Reshape:output:0"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_20/moments/StopGradient:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_20/moments/variance/reduction_indices"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_20/moments/variance"
      op: "Mean"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_20/moments/SquaredDifference:z:0"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_20/moments/variance/reduction_indices:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_20/Reshape_1/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_7_sequential_8_instance_normalization_20_reshape_1_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_20/Reshape_1/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 5
              }
            }
            tensor_content: "\001\000\000\000\000\004\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_20/Reshape_1"
      op: "Reshape"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_20/Reshape_1/ReadVariableOp:value:0"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_20/Reshape_1/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_20/Reshape_2/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_7_sequential_8_instance_normalization_20_reshape_2_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_20/Reshape_2/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 5
              }
            }
            tensor_content: "\001\000\000\000\000\004\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_20/Reshape_2"
      op: "Reshape"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_20/Reshape_2/ReadVariableOp:value:0"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_20/Reshape_2/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_20/batchnorm/add/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999747378752e-06
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_20/batchnorm/add"
      op: "Add"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_20/moments/variance:output:0"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_20/batchnorm/add/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_20/batchnorm/Rsqrt"
      op: "Rsqrt"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_20/batchnorm/add:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_20/batchnorm/mul"
      op: "Mul"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_20/batchnorm/Rsqrt:y:0"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_20/Reshape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_20/batchnorm/mul_1"
      op: "Mul"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_20/Reshape:output:0"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_20/batchnorm/mul:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_20/batchnorm/mul_2"
      op: "Mul"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_20/moments/mean:output:0"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_20/batchnorm/mul:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_20/batchnorm/sub"
      op: "Sub"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_20/Reshape_2:output:0"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_20/batchnorm/mul_2:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_20/batchnorm/add_1"
      op: "Add"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_20/batchnorm/mul_1:z:0"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_20/batchnorm/sub:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/sequential_8/instance_normalization_20/Reshape_3"
      op: "Reshape"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_20/batchnorm/add_1:z:0"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_20/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_7/add"
      op: "Add"
      input: "sequential/resnet_block_7/sequential_8/instance_normalization_20/Reshape_3:output:0"
      input: "sequential/resnet_block_6/add:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/zero_padding2d_16/Pad/paddings"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/zero_padding2d_16/Pad"
      op: "Pad"
      input: "sequential/resnet_block_7/add:z:0"
      input: "sequential/resnet_block_8/sequential_9/zero_padding2d_16/Pad/paddings:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tpaddings"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/conv2d_21/Conv2D/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_8_sequential_9_conv2d_21_conv2d_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/conv2d_21/Conv2D"
      op: "Conv2D"
      input: "sequential/resnet_block_8/sequential_9/zero_padding2d_16/Pad:output:0"
      input: "sequential/resnet_block_8/sequential_9/conv2d_21/Conv2D/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/conv2d_21/BiasAdd/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_8_sequential_9_conv2d_21_biasadd_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/conv2d_21/BiasAdd"
      op: "BiasAdd"
      input: "sequential/resnet_block_8/sequential_9/conv2d_21/Conv2D:output:0"
      input: "sequential/resnet_block_8/sequential_9/conv2d_21/BiasAdd/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_21/Shape"
      op: "Shape"
      input: "sequential/resnet_block_8/sequential_9/conv2d_21/BiasAdd:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_21/strided_slice/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_21/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_21/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_21/strided_slice"
      op: "StridedSlice"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_21/Shape:output:0"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_21/strided_slice/stack:output:0"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_21/strided_slice/stack_1:output:0"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_21/strided_slice/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_21/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_21/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_21/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_21/strided_slice_1"
      op: "StridedSlice"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_21/Shape:output:0"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_21/strided_slice_1/stack:output:0"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_21/strided_slice_1/stack_1:output:0"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_21/strided_slice_1/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_21/strided_slice_2/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_21/strided_slice_2/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_21/strided_slice_2/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_21/strided_slice_2"
      op: "StridedSlice"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_21/Shape:output:0"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_21/strided_slice_2/stack:output:0"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_21/strided_slice_2/stack_1:output:0"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_21/strided_slice_2/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_21/strided_slice_3/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_21/strided_slice_3/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 4
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_21/strided_slice_3/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_21/strided_slice_3"
      op: "StridedSlice"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_21/Shape:output:0"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_21/strided_slice_3/stack:output:0"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_21/strided_slice_3/stack_1:output:0"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_21/strided_slice_3/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_21/stack/1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1024
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_21/stack/4"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_21/stack"
      op: "Pack"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_21/strided_slice:output:0"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_21/stack/1:output:0"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_21/strided_slice_1:output:0"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_21/strided_slice_2:output:0"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_21/stack/4:output:0"
      attr {
        key: "N"
        value {
          i: 5
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_21/Reshape"
      op: "Reshape"
      input: "sequential/resnet_block_8/sequential_9/conv2d_21/BiasAdd:output:0"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_21/stack:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_21/moments/mean/reduction_indices"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_21/moments/mean"
      op: "Mean"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_21/Reshape:output:0"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_21/moments/mean/reduction_indices:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_21/moments/StopGradient"
      op: "StopGradient"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_21/moments/mean:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_21/moments/SquaredDifference"
      op: "SquaredDifference"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_21/Reshape:output:0"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_21/moments/StopGradient:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_21/moments/variance/reduction_indices"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_21/moments/variance"
      op: "Mean"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_21/moments/SquaredDifference:z:0"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_21/moments/variance/reduction_indices:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_21/Reshape_1/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_8_sequential_9_instance_normalization_21_reshape_1_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_21/Reshape_1/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 5
              }
            }
            tensor_content: "\001\000\000\000\000\004\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_21/Reshape_1"
      op: "Reshape"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_21/Reshape_1/ReadVariableOp:value:0"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_21/Reshape_1/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_21/Reshape_2/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_8_sequential_9_instance_normalization_21_reshape_2_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_21/Reshape_2/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 5
              }
            }
            tensor_content: "\001\000\000\000\000\004\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_21/Reshape_2"
      op: "Reshape"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_21/Reshape_2/ReadVariableOp:value:0"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_21/Reshape_2/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_21/batchnorm/add/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999747378752e-06
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_21/batchnorm/add"
      op: "Add"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_21/moments/variance:output:0"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_21/batchnorm/add/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_21/batchnorm/Rsqrt"
      op: "Rsqrt"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_21/batchnorm/add:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_21/batchnorm/mul"
      op: "Mul"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_21/batchnorm/Rsqrt:y:0"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_21/Reshape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_21/batchnorm/mul_1"
      op: "Mul"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_21/Reshape:output:0"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_21/batchnorm/mul:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_21/batchnorm/mul_2"
      op: "Mul"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_21/moments/mean:output:0"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_21/batchnorm/mul:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_21/batchnorm/sub"
      op: "Sub"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_21/Reshape_2:output:0"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_21/batchnorm/mul_2:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_21/batchnorm/add_1"
      op: "Add"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_21/batchnorm/mul_1:z:0"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_21/batchnorm/sub:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_21/Reshape_3"
      op: "Reshape"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_21/batchnorm/add_1:z:0"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_21/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/re_lu_1/Relu"
      op: "Relu"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_21/Reshape_3:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/zero_padding2d_17/Pad/paddings"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/zero_padding2d_17/Pad"
      op: "Pad"
      input: "sequential/resnet_block_8/sequential_9/re_lu_1/Relu:activations:0"
      input: "sequential/resnet_block_8/sequential_9/zero_padding2d_17/Pad/paddings:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tpaddings"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/conv2d_22/Conv2D/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_8_sequential_9_conv2d_22_conv2d_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/conv2d_22/Conv2D"
      op: "Conv2D"
      input: "sequential/resnet_block_8/sequential_9/zero_padding2d_17/Pad:output:0"
      input: "sequential/resnet_block_8/sequential_9/conv2d_22/Conv2D/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/conv2d_22/BiasAdd/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_8_sequential_9_conv2d_22_biasadd_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/conv2d_22/BiasAdd"
      op: "BiasAdd"
      input: "sequential/resnet_block_8/sequential_9/conv2d_22/Conv2D:output:0"
      input: "sequential/resnet_block_8/sequential_9/conv2d_22/BiasAdd/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_22/Shape"
      op: "Shape"
      input: "sequential/resnet_block_8/sequential_9/conv2d_22/BiasAdd:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_22/strided_slice/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_22/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_22/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_22/strided_slice"
      op: "StridedSlice"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_22/Shape:output:0"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_22/strided_slice/stack:output:0"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_22/strided_slice/stack_1:output:0"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_22/strided_slice/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_22/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_22/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_22/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_22/strided_slice_1"
      op: "StridedSlice"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_22/Shape:output:0"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_22/strided_slice_1/stack:output:0"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_22/strided_slice_1/stack_1:output:0"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_22/strided_slice_1/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_22/strided_slice_2/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_22/strided_slice_2/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_22/strided_slice_2/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_22/strided_slice_2"
      op: "StridedSlice"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_22/Shape:output:0"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_22/strided_slice_2/stack:output:0"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_22/strided_slice_2/stack_1:output:0"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_22/strided_slice_2/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_22/strided_slice_3/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_22/strided_slice_3/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 4
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_22/strided_slice_3/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_22/strided_slice_3"
      op: "StridedSlice"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_22/Shape:output:0"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_22/strided_slice_3/stack:output:0"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_22/strided_slice_3/stack_1:output:0"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_22/strided_slice_3/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_22/stack/1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1024
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_22/stack/4"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_22/stack"
      op: "Pack"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_22/strided_slice:output:0"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_22/stack/1:output:0"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_22/strided_slice_1:output:0"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_22/strided_slice_2:output:0"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_22/stack/4:output:0"
      attr {
        key: "N"
        value {
          i: 5
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_22/Reshape"
      op: "Reshape"
      input: "sequential/resnet_block_8/sequential_9/conv2d_22/BiasAdd:output:0"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_22/stack:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_22/moments/mean/reduction_indices"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_22/moments/mean"
      op: "Mean"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_22/Reshape:output:0"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_22/moments/mean/reduction_indices:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_22/moments/StopGradient"
      op: "StopGradient"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_22/moments/mean:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_22/moments/SquaredDifference"
      op: "SquaredDifference"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_22/Reshape:output:0"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_22/moments/StopGradient:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_22/moments/variance/reduction_indices"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_22/moments/variance"
      op: "Mean"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_22/moments/SquaredDifference:z:0"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_22/moments/variance/reduction_indices:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_22/Reshape_1/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_8_sequential_9_instance_normalization_22_reshape_1_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_22/Reshape_1/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 5
              }
            }
            tensor_content: "\001\000\000\000\000\004\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_22/Reshape_1"
      op: "Reshape"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_22/Reshape_1/ReadVariableOp:value:0"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_22/Reshape_1/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_22/Reshape_2/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_resnet_block_8_sequential_9_instance_normalization_22_reshape_2_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_22/Reshape_2/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 5
              }
            }
            tensor_content: "\001\000\000\000\000\004\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_22/Reshape_2"
      op: "Reshape"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_22/Reshape_2/ReadVariableOp:value:0"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_22/Reshape_2/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_22/batchnorm/add/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999747378752e-06
          }
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_22/batchnorm/add"
      op: "Add"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_22/moments/variance:output:0"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_22/batchnorm/add/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_22/batchnorm/Rsqrt"
      op: "Rsqrt"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_22/batchnorm/add:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_22/batchnorm/mul"
      op: "Mul"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_22/batchnorm/Rsqrt:y:0"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_22/Reshape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_22/batchnorm/mul_1"
      op: "Mul"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_22/Reshape:output:0"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_22/batchnorm/mul:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_22/batchnorm/mul_2"
      op: "Mul"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_22/moments/mean:output:0"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_22/batchnorm/mul:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_22/batchnorm/sub"
      op: "Sub"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_22/Reshape_2:output:0"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_22/batchnorm/mul_2:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_22/batchnorm/add_1"
      op: "Add"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_22/batchnorm/mul_1:z:0"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_22/batchnorm/sub:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/sequential_9/instance_normalization_22/Reshape_3"
      op: "Reshape"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_22/batchnorm/add_1:z:0"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_22/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/resnet_block_8/add"
      op: "Add"
      input: "sequential/resnet_block_8/sequential_9/instance_normalization_22/Reshape_3:output:0"
      input: "sequential/resnet_block_7/add:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose/Shape"
      op: "Shape"
      input: "sequential/resnet_block_8/add:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose/strided_slice/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose/strided_slice"
      op: "StridedSlice"
      input: "sequential/conv2d_transpose/Shape:output:0"
      input: "sequential/conv2d_transpose/strided_slice/stack:output:0"
      input: "sequential/conv2d_transpose/strided_slice/stack_1:output:0"
      input: "sequential/conv2d_transpose/strided_slice/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose/strided_slice_1"
      op: "StridedSlice"
      input: "sequential/conv2d_transpose/Shape:output:0"
      input: "sequential/conv2d_transpose/strided_slice_1/stack:output:0"
      input: "sequential/conv2d_transpose/strided_slice_1/stack_1:output:0"
      input: "sequential/conv2d_transpose/strided_slice_1/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose/strided_slice_2/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose/strided_slice_2/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose/strided_slice_2/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose/strided_slice_2"
      op: "StridedSlice"
      input: "sequential/conv2d_transpose/Shape:output:0"
      input: "sequential/conv2d_transpose/strided_slice_2/stack:output:0"
      input: "sequential/conv2d_transpose/strided_slice_2/stack_1:output:0"
      input: "sequential/conv2d_transpose/strided_slice_2/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose/sub/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose/sub"
      op: "Sub"
      input: "sequential/conv2d_transpose/strided_slice_1:output:0"
      input: "sequential/conv2d_transpose/sub/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose/mul/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose/mul"
      op: "Mul"
      input: "sequential/conv2d_transpose/sub:z:0"
      input: "sequential/conv2d_transpose/mul/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose/add/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose/add"
      op: "Add"
      input: "sequential/conv2d_transpose/mul:z:0"
      input: "sequential/conv2d_transpose/add/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose/sub_1/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose/sub_1"
      op: "Sub"
      input: "sequential/conv2d_transpose/add:z:0"
      input: "sequential/conv2d_transpose/sub_1/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose/add_1/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose/add_1"
      op: "Add"
      input: "sequential/conv2d_transpose/sub_1:z:0"
      input: "sequential/conv2d_transpose/add_1/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose/sub_2/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose/sub_2"
      op: "Sub"
      input: "sequential/conv2d_transpose/strided_slice_2:output:0"
      input: "sequential/conv2d_transpose/sub_2/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose/mul_1/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose/mul_1"
      op: "Mul"
      input: "sequential/conv2d_transpose/sub_2:z:0"
      input: "sequential/conv2d_transpose/mul_1/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose/add_2/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose/add_2"
      op: "Add"
      input: "sequential/conv2d_transpose/mul_1:z:0"
      input: "sequential/conv2d_transpose/add_2/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose/sub_3/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose/sub_3"
      op: "Sub"
      input: "sequential/conv2d_transpose/add_2:z:0"
      input: "sequential/conv2d_transpose/sub_3/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose/add_3/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose/add_3"
      op: "Add"
      input: "sequential/conv2d_transpose/sub_3:z:0"
      input: "sequential/conv2d_transpose/add_3/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose/stack/3"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 512
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose/stack"
      op: "Pack"
      input: "sequential/conv2d_transpose/strided_slice:output:0"
      input: "sequential/conv2d_transpose/add_1:z:0"
      input: "sequential/conv2d_transpose/add_3:z:0"
      input: "sequential/conv2d_transpose/stack/3:output:0"
      attr {
        key: "N"
        value {
          i: 4
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose/strided_slice_3/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose/strided_slice_3/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose/strided_slice_3/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose/strided_slice_3"
      op: "StridedSlice"
      input: "sequential/conv2d_transpose/stack:output:0"
      input: "sequential/conv2d_transpose/strided_slice_3/stack:output:0"
      input: "sequential/conv2d_transpose/strided_slice_3/stack_1:output:0"
      input: "sequential/conv2d_transpose/strided_slice_3/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose/conv2d_transpose/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_conv2d_transpose_conv2d_transpose_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose/conv2d_transpose"
      op: "Conv2DBackpropInput"
      input: "sequential/conv2d_transpose/stack:output:0"
      input: "sequential/conv2d_transpose/conv2d_transpose/ReadVariableOp:value:0"
      input: "sequential/resnet_block_8/add:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 2
            i: 2
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose/BiasAdd/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_conv2d_transpose_biasadd_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose/BiasAdd"
      op: "BiasAdd"
      input: "sequential/conv2d_transpose/conv2d_transpose:output:0"
      input: "sequential/conv2d_transpose/BiasAdd/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_23/Shape"
      op: "Shape"
      input: "sequential/conv2d_transpose/BiasAdd:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_23/strided_slice/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_23/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_23/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_23/strided_slice"
      op: "StridedSlice"
      input: "sequential/instance_normalization_23/Shape:output:0"
      input: "sequential/instance_normalization_23/strided_slice/stack:output:0"
      input: "sequential/instance_normalization_23/strided_slice/stack_1:output:0"
      input: "sequential/instance_normalization_23/strided_slice/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_23/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_23/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_23/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_23/strided_slice_1"
      op: "StridedSlice"
      input: "sequential/instance_normalization_23/Shape:output:0"
      input: "sequential/instance_normalization_23/strided_slice_1/stack:output:0"
      input: "sequential/instance_normalization_23/strided_slice_1/stack_1:output:0"
      input: "sequential/instance_normalization_23/strided_slice_1/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_23/strided_slice_2/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_23/strided_slice_2/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_23/strided_slice_2/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_23/strided_slice_2"
      op: "StridedSlice"
      input: "sequential/instance_normalization_23/Shape:output:0"
      input: "sequential/instance_normalization_23/strided_slice_2/stack:output:0"
      input: "sequential/instance_normalization_23/strided_slice_2/stack_1:output:0"
      input: "sequential/instance_normalization_23/strided_slice_2/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_23/strided_slice_3/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_23/strided_slice_3/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 4
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_23/strided_slice_3/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_23/strided_slice_3"
      op: "StridedSlice"
      input: "sequential/instance_normalization_23/Shape:output:0"
      input: "sequential/instance_normalization_23/strided_slice_3/stack:output:0"
      input: "sequential/instance_normalization_23/strided_slice_3/stack_1:output:0"
      input: "sequential/instance_normalization_23/strided_slice_3/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_23/stack/1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 512
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_23/stack/4"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_23/stack"
      op: "Pack"
      input: "sequential/instance_normalization_23/strided_slice:output:0"
      input: "sequential/instance_normalization_23/stack/1:output:0"
      input: "sequential/instance_normalization_23/strided_slice_1:output:0"
      input: "sequential/instance_normalization_23/strided_slice_2:output:0"
      input: "sequential/instance_normalization_23/stack/4:output:0"
      attr {
        key: "N"
        value {
          i: 5
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_23/Reshape"
      op: "Reshape"
      input: "sequential/conv2d_transpose/BiasAdd:output:0"
      input: "sequential/instance_normalization_23/stack:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_23/moments/mean/reduction_indices"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_23/moments/mean"
      op: "Mean"
      input: "sequential/instance_normalization_23/Reshape:output:0"
      input: "sequential/instance_normalization_23/moments/mean/reduction_indices:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_23/moments/StopGradient"
      op: "StopGradient"
      input: "sequential/instance_normalization_23/moments/mean:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_23/moments/SquaredDifference"
      op: "SquaredDifference"
      input: "sequential/instance_normalization_23/Reshape:output:0"
      input: "sequential/instance_normalization_23/moments/StopGradient:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_23/moments/variance/reduction_indices"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_23/moments/variance"
      op: "Mean"
      input: "sequential/instance_normalization_23/moments/SquaredDifference:z:0"
      input: "sequential/instance_normalization_23/moments/variance/reduction_indices:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_23/Reshape_1/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_instance_normalization_23_reshape_1_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_23/Reshape_1/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 5
              }
            }
            tensor_content: "\001\000\000\000\000\002\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_23/Reshape_1"
      op: "Reshape"
      input: "sequential/instance_normalization_23/Reshape_1/ReadVariableOp:value:0"
      input: "sequential/instance_normalization_23/Reshape_1/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_23/Reshape_2/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_instance_normalization_23_reshape_2_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_23/Reshape_2/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 5
              }
            }
            tensor_content: "\001\000\000\000\000\002\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_23/Reshape_2"
      op: "Reshape"
      input: "sequential/instance_normalization_23/Reshape_2/ReadVariableOp:value:0"
      input: "sequential/instance_normalization_23/Reshape_2/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_23/batchnorm/add/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999747378752e-06
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_23/batchnorm/add"
      op: "Add"
      input: "sequential/instance_normalization_23/moments/variance:output:0"
      input: "sequential/instance_normalization_23/batchnorm/add/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_23/batchnorm/Rsqrt"
      op: "Rsqrt"
      input: "sequential/instance_normalization_23/batchnorm/add:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_23/batchnorm/mul"
      op: "Mul"
      input: "sequential/instance_normalization_23/batchnorm/Rsqrt:y:0"
      input: "sequential/instance_normalization_23/Reshape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_23/batchnorm/mul_1"
      op: "Mul"
      input: "sequential/instance_normalization_23/Reshape:output:0"
      input: "sequential/instance_normalization_23/batchnorm/mul:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_23/batchnorm/mul_2"
      op: "Mul"
      input: "sequential/instance_normalization_23/moments/mean:output:0"
      input: "sequential/instance_normalization_23/batchnorm/mul:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_23/batchnorm/sub"
      op: "Sub"
      input: "sequential/instance_normalization_23/Reshape_2:output:0"
      input: "sequential/instance_normalization_23/batchnorm/mul_2:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_23/batchnorm/add_1"
      op: "Add"
      input: "sequential/instance_normalization_23/batchnorm/mul_1:z:0"
      input: "sequential/instance_normalization_23/batchnorm/sub:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_23/Reshape_3"
      op: "Reshape"
      input: "sequential/instance_normalization_23/batchnorm/add_1:z:0"
      input: "sequential/instance_normalization_23/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/re_lu_1_5/Relu"
      op: "Relu"
      input: "sequential/instance_normalization_23/Reshape_3:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_1/Shape"
      op: "Shape"
      input: "sequential/re_lu_1_5/Relu:activations:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_1/strided_slice/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_1/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_1/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_1/strided_slice"
      op: "StridedSlice"
      input: "sequential/conv2d_transpose_1/Shape:output:0"
      input: "sequential/conv2d_transpose_1/strided_slice/stack:output:0"
      input: "sequential/conv2d_transpose_1/strided_slice/stack_1:output:0"
      input: "sequential/conv2d_transpose_1/strided_slice/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_1/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_1/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_1/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_1/strided_slice_1"
      op: "StridedSlice"
      input: "sequential/conv2d_transpose_1/Shape:output:0"
      input: "sequential/conv2d_transpose_1/strided_slice_1/stack:output:0"
      input: "sequential/conv2d_transpose_1/strided_slice_1/stack_1:output:0"
      input: "sequential/conv2d_transpose_1/strided_slice_1/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_1/strided_slice_2/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_1/strided_slice_2/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_1/strided_slice_2/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_1/strided_slice_2"
      op: "StridedSlice"
      input: "sequential/conv2d_transpose_1/Shape:output:0"
      input: "sequential/conv2d_transpose_1/strided_slice_2/stack:output:0"
      input: "sequential/conv2d_transpose_1/strided_slice_2/stack_1:output:0"
      input: "sequential/conv2d_transpose_1/strided_slice_2/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_1/sub/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_1/sub"
      op: "Sub"
      input: "sequential/conv2d_transpose_1/strided_slice_1:output:0"
      input: "sequential/conv2d_transpose_1/sub/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_1/mul/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_1/mul"
      op: "Mul"
      input: "sequential/conv2d_transpose_1/sub:z:0"
      input: "sequential/conv2d_transpose_1/mul/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_1/add/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_1/add"
      op: "Add"
      input: "sequential/conv2d_transpose_1/mul:z:0"
      input: "sequential/conv2d_transpose_1/add/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_1/sub_1/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_1/sub_1"
      op: "Sub"
      input: "sequential/conv2d_transpose_1/add:z:0"
      input: "sequential/conv2d_transpose_1/sub_1/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_1/add_1/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_1/add_1"
      op: "Add"
      input: "sequential/conv2d_transpose_1/sub_1:z:0"
      input: "sequential/conv2d_transpose_1/add_1/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_1/sub_2/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_1/sub_2"
      op: "Sub"
      input: "sequential/conv2d_transpose_1/strided_slice_2:output:0"
      input: "sequential/conv2d_transpose_1/sub_2/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_1/mul_1/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_1/mul_1"
      op: "Mul"
      input: "sequential/conv2d_transpose_1/sub_2:z:0"
      input: "sequential/conv2d_transpose_1/mul_1/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_1/add_2/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_1/add_2"
      op: "Add"
      input: "sequential/conv2d_transpose_1/mul_1:z:0"
      input: "sequential/conv2d_transpose_1/add_2/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_1/sub_3/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_1/sub_3"
      op: "Sub"
      input: "sequential/conv2d_transpose_1/add_2:z:0"
      input: "sequential/conv2d_transpose_1/sub_3/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_1/add_3/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_1/add_3"
      op: "Add"
      input: "sequential/conv2d_transpose_1/sub_3:z:0"
      input: "sequential/conv2d_transpose_1/add_3/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_1/stack/3"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 256
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_1/stack"
      op: "Pack"
      input: "sequential/conv2d_transpose_1/strided_slice:output:0"
      input: "sequential/conv2d_transpose_1/add_1:z:0"
      input: "sequential/conv2d_transpose_1/add_3:z:0"
      input: "sequential/conv2d_transpose_1/stack/3:output:0"
      attr {
        key: "N"
        value {
          i: 4
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_1/strided_slice_3/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_1/strided_slice_3/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_1/strided_slice_3/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_1/strided_slice_3"
      op: "StridedSlice"
      input: "sequential/conv2d_transpose_1/stack:output:0"
      input: "sequential/conv2d_transpose_1/strided_slice_3/stack:output:0"
      input: "sequential/conv2d_transpose_1/strided_slice_3/stack_1:output:0"
      input: "sequential/conv2d_transpose_1/strided_slice_3/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_1/conv2d_transpose/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_conv2d_transpose_1_conv2d_transpose_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_1/conv2d_transpose"
      op: "Conv2DBackpropInput"
      input: "sequential/conv2d_transpose_1/stack:output:0"
      input: "sequential/conv2d_transpose_1/conv2d_transpose/ReadVariableOp:value:0"
      input: "sequential/re_lu_1_5/Relu:activations:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 2
            i: 2
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_1/BiasAdd/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_conv2d_transpose_1_biasadd_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_1/BiasAdd"
      op: "BiasAdd"
      input: "sequential/conv2d_transpose_1/conv2d_transpose:output:0"
      input: "sequential/conv2d_transpose_1/BiasAdd/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_24/Shape"
      op: "Shape"
      input: "sequential/conv2d_transpose_1/BiasAdd:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_24/strided_slice/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_24/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_24/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_24/strided_slice"
      op: "StridedSlice"
      input: "sequential/instance_normalization_24/Shape:output:0"
      input: "sequential/instance_normalization_24/strided_slice/stack:output:0"
      input: "sequential/instance_normalization_24/strided_slice/stack_1:output:0"
      input: "sequential/instance_normalization_24/strided_slice/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_24/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_24/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_24/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_24/strided_slice_1"
      op: "StridedSlice"
      input: "sequential/instance_normalization_24/Shape:output:0"
      input: "sequential/instance_normalization_24/strided_slice_1/stack:output:0"
      input: "sequential/instance_normalization_24/strided_slice_1/stack_1:output:0"
      input: "sequential/instance_normalization_24/strided_slice_1/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_24/strided_slice_2/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_24/strided_slice_2/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_24/strided_slice_2/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_24/strided_slice_2"
      op: "StridedSlice"
      input: "sequential/instance_normalization_24/Shape:output:0"
      input: "sequential/instance_normalization_24/strided_slice_2/stack:output:0"
      input: "sequential/instance_normalization_24/strided_slice_2/stack_1:output:0"
      input: "sequential/instance_normalization_24/strided_slice_2/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_24/strided_slice_3/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_24/strided_slice_3/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 4
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_24/strided_slice_3/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_24/strided_slice_3"
      op: "StridedSlice"
      input: "sequential/instance_normalization_24/Shape:output:0"
      input: "sequential/instance_normalization_24/strided_slice_3/stack:output:0"
      input: "sequential/instance_normalization_24/strided_slice_3/stack_1:output:0"
      input: "sequential/instance_normalization_24/strided_slice_3/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_24/stack/1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 256
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_24/stack/4"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_24/stack"
      op: "Pack"
      input: "sequential/instance_normalization_24/strided_slice:output:0"
      input: "sequential/instance_normalization_24/stack/1:output:0"
      input: "sequential/instance_normalization_24/strided_slice_1:output:0"
      input: "sequential/instance_normalization_24/strided_slice_2:output:0"
      input: "sequential/instance_normalization_24/stack/4:output:0"
      attr {
        key: "N"
        value {
          i: 5
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_24/Reshape"
      op: "Reshape"
      input: "sequential/conv2d_transpose_1/BiasAdd:output:0"
      input: "sequential/instance_normalization_24/stack:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_24/moments/mean/reduction_indices"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_24/moments/mean"
      op: "Mean"
      input: "sequential/instance_normalization_24/Reshape:output:0"
      input: "sequential/instance_normalization_24/moments/mean/reduction_indices:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_24/moments/StopGradient"
      op: "StopGradient"
      input: "sequential/instance_normalization_24/moments/mean:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_24/moments/SquaredDifference"
      op: "SquaredDifference"
      input: "sequential/instance_normalization_24/Reshape:output:0"
      input: "sequential/instance_normalization_24/moments/StopGradient:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_24/moments/variance/reduction_indices"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_24/moments/variance"
      op: "Mean"
      input: "sequential/instance_normalization_24/moments/SquaredDifference:z:0"
      input: "sequential/instance_normalization_24/moments/variance/reduction_indices:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_24/Reshape_1/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_instance_normalization_24_reshape_1_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_24/Reshape_1/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 5
              }
            }
            tensor_content: "\001\000\000\000\000\001\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_24/Reshape_1"
      op: "Reshape"
      input: "sequential/instance_normalization_24/Reshape_1/ReadVariableOp:value:0"
      input: "sequential/instance_normalization_24/Reshape_1/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_24/Reshape_2/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_instance_normalization_24_reshape_2_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_24/Reshape_2/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 5
              }
            }
            tensor_content: "\001\000\000\000\000\001\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_24/Reshape_2"
      op: "Reshape"
      input: "sequential/instance_normalization_24/Reshape_2/ReadVariableOp:value:0"
      input: "sequential/instance_normalization_24/Reshape_2/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_24/batchnorm/add/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999747378752e-06
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_24/batchnorm/add"
      op: "Add"
      input: "sequential/instance_normalization_24/moments/variance:output:0"
      input: "sequential/instance_normalization_24/batchnorm/add/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_24/batchnorm/Rsqrt"
      op: "Rsqrt"
      input: "sequential/instance_normalization_24/batchnorm/add:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_24/batchnorm/mul"
      op: "Mul"
      input: "sequential/instance_normalization_24/batchnorm/Rsqrt:y:0"
      input: "sequential/instance_normalization_24/Reshape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_24/batchnorm/mul_1"
      op: "Mul"
      input: "sequential/instance_normalization_24/Reshape:output:0"
      input: "sequential/instance_normalization_24/batchnorm/mul:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_24/batchnorm/mul_2"
      op: "Mul"
      input: "sequential/instance_normalization_24/moments/mean:output:0"
      input: "sequential/instance_normalization_24/batchnorm/mul:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_24/batchnorm/sub"
      op: "Sub"
      input: "sequential/instance_normalization_24/Reshape_2:output:0"
      input: "sequential/instance_normalization_24/batchnorm/mul_2:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_24/batchnorm/add_1"
      op: "Add"
      input: "sequential/instance_normalization_24/batchnorm/mul_1:z:0"
      input: "sequential/instance_normalization_24/batchnorm/sub:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_24/Reshape_3"
      op: "Reshape"
      input: "sequential/instance_normalization_24/batchnorm/add_1:z:0"
      input: "sequential/instance_normalization_24/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/re_lu_1_6/Relu"
      op: "Relu"
      input: "sequential/instance_normalization_24/Reshape_3:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_2/Shape"
      op: "Shape"
      input: "sequential/re_lu_1_6/Relu:activations:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_2/strided_slice/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_2/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_2/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_2/strided_slice"
      op: "StridedSlice"
      input: "sequential/conv2d_transpose_2/Shape:output:0"
      input: "sequential/conv2d_transpose_2/strided_slice/stack:output:0"
      input: "sequential/conv2d_transpose_2/strided_slice/stack_1:output:0"
      input: "sequential/conv2d_transpose_2/strided_slice/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_2/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_2/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_2/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_2/strided_slice_1"
      op: "StridedSlice"
      input: "sequential/conv2d_transpose_2/Shape:output:0"
      input: "sequential/conv2d_transpose_2/strided_slice_1/stack:output:0"
      input: "sequential/conv2d_transpose_2/strided_slice_1/stack_1:output:0"
      input: "sequential/conv2d_transpose_2/strided_slice_1/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_2/strided_slice_2/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_2/strided_slice_2/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_2/strided_slice_2/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_2/strided_slice_2"
      op: "StridedSlice"
      input: "sequential/conv2d_transpose_2/Shape:output:0"
      input: "sequential/conv2d_transpose_2/strided_slice_2/stack:output:0"
      input: "sequential/conv2d_transpose_2/strided_slice_2/stack_1:output:0"
      input: "sequential/conv2d_transpose_2/strided_slice_2/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_2/sub/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_2/sub"
      op: "Sub"
      input: "sequential/conv2d_transpose_2/strided_slice_1:output:0"
      input: "sequential/conv2d_transpose_2/sub/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_2/mul/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_2/mul"
      op: "Mul"
      input: "sequential/conv2d_transpose_2/sub:z:0"
      input: "sequential/conv2d_transpose_2/mul/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_2/add/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_2/add"
      op: "Add"
      input: "sequential/conv2d_transpose_2/mul:z:0"
      input: "sequential/conv2d_transpose_2/add/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_2/sub_1/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_2/sub_1"
      op: "Sub"
      input: "sequential/conv2d_transpose_2/add:z:0"
      input: "sequential/conv2d_transpose_2/sub_1/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_2/add_1/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_2/add_1"
      op: "Add"
      input: "sequential/conv2d_transpose_2/sub_1:z:0"
      input: "sequential/conv2d_transpose_2/add_1/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_2/sub_2/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_2/sub_2"
      op: "Sub"
      input: "sequential/conv2d_transpose_2/strided_slice_2:output:0"
      input: "sequential/conv2d_transpose_2/sub_2/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_2/mul_1/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_2/mul_1"
      op: "Mul"
      input: "sequential/conv2d_transpose_2/sub_2:z:0"
      input: "sequential/conv2d_transpose_2/mul_1/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_2/add_2/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_2/add_2"
      op: "Add"
      input: "sequential/conv2d_transpose_2/mul_1:z:0"
      input: "sequential/conv2d_transpose_2/add_2/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_2/sub_3/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_2/sub_3"
      op: "Sub"
      input: "sequential/conv2d_transpose_2/add_2:z:0"
      input: "sequential/conv2d_transpose_2/sub_3/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_2/add_3/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_2/add_3"
      op: "Add"
      input: "sequential/conv2d_transpose_2/sub_3:z:0"
      input: "sequential/conv2d_transpose_2/add_3/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_2/stack/3"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 128
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_2/stack"
      op: "Pack"
      input: "sequential/conv2d_transpose_2/strided_slice:output:0"
      input: "sequential/conv2d_transpose_2/add_1:z:0"
      input: "sequential/conv2d_transpose_2/add_3:z:0"
      input: "sequential/conv2d_transpose_2/stack/3:output:0"
      attr {
        key: "N"
        value {
          i: 4
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_2/strided_slice_3/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_2/strided_slice_3/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_2/strided_slice_3/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_2/strided_slice_3"
      op: "StridedSlice"
      input: "sequential/conv2d_transpose_2/stack:output:0"
      input: "sequential/conv2d_transpose_2/strided_slice_3/stack:output:0"
      input: "sequential/conv2d_transpose_2/strided_slice_3/stack_1:output:0"
      input: "sequential/conv2d_transpose_2/strided_slice_3/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_2/conv2d_transpose/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_conv2d_transpose_2_conv2d_transpose_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_2/conv2d_transpose"
      op: "Conv2DBackpropInput"
      input: "sequential/conv2d_transpose_2/stack:output:0"
      input: "sequential/conv2d_transpose_2/conv2d_transpose/ReadVariableOp:value:0"
      input: "sequential/re_lu_1_6/Relu:activations:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 2
            i: 2
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_2/BiasAdd/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_conv2d_transpose_2_biasadd_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_2/BiasAdd"
      op: "BiasAdd"
      input: "sequential/conv2d_transpose_2/conv2d_transpose:output:0"
      input: "sequential/conv2d_transpose_2/BiasAdd/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_25/Shape"
      op: "Shape"
      input: "sequential/conv2d_transpose_2/BiasAdd:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_25/strided_slice/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_25/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_25/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_25/strided_slice"
      op: "StridedSlice"
      input: "sequential/instance_normalization_25/Shape:output:0"
      input: "sequential/instance_normalization_25/strided_slice/stack:output:0"
      input: "sequential/instance_normalization_25/strided_slice/stack_1:output:0"
      input: "sequential/instance_normalization_25/strided_slice/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_25/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_25/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_25/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_25/strided_slice_1"
      op: "StridedSlice"
      input: "sequential/instance_normalization_25/Shape:output:0"
      input: "sequential/instance_normalization_25/strided_slice_1/stack:output:0"
      input: "sequential/instance_normalization_25/strided_slice_1/stack_1:output:0"
      input: "sequential/instance_normalization_25/strided_slice_1/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_25/strided_slice_2/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_25/strided_slice_2/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_25/strided_slice_2/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_25/strided_slice_2"
      op: "StridedSlice"
      input: "sequential/instance_normalization_25/Shape:output:0"
      input: "sequential/instance_normalization_25/strided_slice_2/stack:output:0"
      input: "sequential/instance_normalization_25/strided_slice_2/stack_1:output:0"
      input: "sequential/instance_normalization_25/strided_slice_2/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_25/strided_slice_3/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_25/strided_slice_3/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 4
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_25/strided_slice_3/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_25/strided_slice_3"
      op: "StridedSlice"
      input: "sequential/instance_normalization_25/Shape:output:0"
      input: "sequential/instance_normalization_25/strided_slice_3/stack:output:0"
      input: "sequential/instance_normalization_25/strided_slice_3/stack_1:output:0"
      input: "sequential/instance_normalization_25/strided_slice_3/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_25/stack/1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 128
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_25/stack/4"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_25/stack"
      op: "Pack"
      input: "sequential/instance_normalization_25/strided_slice:output:0"
      input: "sequential/instance_normalization_25/stack/1:output:0"
      input: "sequential/instance_normalization_25/strided_slice_1:output:0"
      input: "sequential/instance_normalization_25/strided_slice_2:output:0"
      input: "sequential/instance_normalization_25/stack/4:output:0"
      attr {
        key: "N"
        value {
          i: 5
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_25/Reshape"
      op: "Reshape"
      input: "sequential/conv2d_transpose_2/BiasAdd:output:0"
      input: "sequential/instance_normalization_25/stack:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_25/moments/mean/reduction_indices"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_25/moments/mean"
      op: "Mean"
      input: "sequential/instance_normalization_25/Reshape:output:0"
      input: "sequential/instance_normalization_25/moments/mean/reduction_indices:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_25/moments/StopGradient"
      op: "StopGradient"
      input: "sequential/instance_normalization_25/moments/mean:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_25/moments/SquaredDifference"
      op: "SquaredDifference"
      input: "sequential/instance_normalization_25/Reshape:output:0"
      input: "sequential/instance_normalization_25/moments/StopGradient:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_25/moments/variance/reduction_indices"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_25/moments/variance"
      op: "Mean"
      input: "sequential/instance_normalization_25/moments/SquaredDifference:z:0"
      input: "sequential/instance_normalization_25/moments/variance/reduction_indices:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_25/Reshape_1/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_instance_normalization_25_reshape_1_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_25/Reshape_1/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 5
              }
            }
            tensor_content: "\001\000\000\000\200\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_25/Reshape_1"
      op: "Reshape"
      input: "sequential/instance_normalization_25/Reshape_1/ReadVariableOp:value:0"
      input: "sequential/instance_normalization_25/Reshape_1/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_25/Reshape_2/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_instance_normalization_25_reshape_2_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_25/Reshape_2/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 5
              }
            }
            tensor_content: "\001\000\000\000\200\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_25/Reshape_2"
      op: "Reshape"
      input: "sequential/instance_normalization_25/Reshape_2/ReadVariableOp:value:0"
      input: "sequential/instance_normalization_25/Reshape_2/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_25/batchnorm/add/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999747378752e-06
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_25/batchnorm/add"
      op: "Add"
      input: "sequential/instance_normalization_25/moments/variance:output:0"
      input: "sequential/instance_normalization_25/batchnorm/add/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_25/batchnorm/Rsqrt"
      op: "Rsqrt"
      input: "sequential/instance_normalization_25/batchnorm/add:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_25/batchnorm/mul"
      op: "Mul"
      input: "sequential/instance_normalization_25/batchnorm/Rsqrt:y:0"
      input: "sequential/instance_normalization_25/Reshape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_25/batchnorm/mul_1"
      op: "Mul"
      input: "sequential/instance_normalization_25/Reshape:output:0"
      input: "sequential/instance_normalization_25/batchnorm/mul:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_25/batchnorm/mul_2"
      op: "Mul"
      input: "sequential/instance_normalization_25/moments/mean:output:0"
      input: "sequential/instance_normalization_25/batchnorm/mul:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_25/batchnorm/sub"
      op: "Sub"
      input: "sequential/instance_normalization_25/Reshape_2:output:0"
      input: "sequential/instance_normalization_25/batchnorm/mul_2:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_25/batchnorm/add_1"
      op: "Add"
      input: "sequential/instance_normalization_25/batchnorm/mul_1:z:0"
      input: "sequential/instance_normalization_25/batchnorm/sub:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_25/Reshape_3"
      op: "Reshape"
      input: "sequential/instance_normalization_25/batchnorm/add_1:z:0"
      input: "sequential/instance_normalization_25/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/re_lu_1_7/Relu"
      op: "Relu"
      input: "sequential/instance_normalization_25/Reshape_3:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_3/Shape"
      op: "Shape"
      input: "sequential/re_lu_1_7/Relu:activations:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_3/strided_slice/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_3/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_3/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_3/strided_slice"
      op: "StridedSlice"
      input: "sequential/conv2d_transpose_3/Shape:output:0"
      input: "sequential/conv2d_transpose_3/strided_slice/stack:output:0"
      input: "sequential/conv2d_transpose_3/strided_slice/stack_1:output:0"
      input: "sequential/conv2d_transpose_3/strided_slice/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_3/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_3/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_3/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_3/strided_slice_1"
      op: "StridedSlice"
      input: "sequential/conv2d_transpose_3/Shape:output:0"
      input: "sequential/conv2d_transpose_3/strided_slice_1/stack:output:0"
      input: "sequential/conv2d_transpose_3/strided_slice_1/stack_1:output:0"
      input: "sequential/conv2d_transpose_3/strided_slice_1/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_3/strided_slice_2/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_3/strided_slice_2/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_3/strided_slice_2/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_3/strided_slice_2"
      op: "StridedSlice"
      input: "sequential/conv2d_transpose_3/Shape:output:0"
      input: "sequential/conv2d_transpose_3/strided_slice_2/stack:output:0"
      input: "sequential/conv2d_transpose_3/strided_slice_2/stack_1:output:0"
      input: "sequential/conv2d_transpose_3/strided_slice_2/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_3/sub/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_3/sub"
      op: "Sub"
      input: "sequential/conv2d_transpose_3/strided_slice_1:output:0"
      input: "sequential/conv2d_transpose_3/sub/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_3/mul/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_3/mul"
      op: "Mul"
      input: "sequential/conv2d_transpose_3/sub:z:0"
      input: "sequential/conv2d_transpose_3/mul/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_3/add/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_3/add"
      op: "Add"
      input: "sequential/conv2d_transpose_3/mul:z:0"
      input: "sequential/conv2d_transpose_3/add/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_3/sub_1/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_3/sub_1"
      op: "Sub"
      input: "sequential/conv2d_transpose_3/add:z:0"
      input: "sequential/conv2d_transpose_3/sub_1/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_3/add_1/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_3/add_1"
      op: "Add"
      input: "sequential/conv2d_transpose_3/sub_1:z:0"
      input: "sequential/conv2d_transpose_3/add_1/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_3/sub_2/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_3/sub_2"
      op: "Sub"
      input: "sequential/conv2d_transpose_3/strided_slice_2:output:0"
      input: "sequential/conv2d_transpose_3/sub_2/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_3/mul_1/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_3/mul_1"
      op: "Mul"
      input: "sequential/conv2d_transpose_3/sub_2:z:0"
      input: "sequential/conv2d_transpose_3/mul_1/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_3/add_2/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_3/add_2"
      op: "Add"
      input: "sequential/conv2d_transpose_3/mul_1:z:0"
      input: "sequential/conv2d_transpose_3/add_2/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_3/sub_3/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_3/sub_3"
      op: "Sub"
      input: "sequential/conv2d_transpose_3/add_2:z:0"
      input: "sequential/conv2d_transpose_3/sub_3/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_3/add_3/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_3/add_3"
      op: "Add"
      input: "sequential/conv2d_transpose_3/sub_3:z:0"
      input: "sequential/conv2d_transpose_3/add_3/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_3/stack/3"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 64
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_3/stack"
      op: "Pack"
      input: "sequential/conv2d_transpose_3/strided_slice:output:0"
      input: "sequential/conv2d_transpose_3/add_1:z:0"
      input: "sequential/conv2d_transpose_3/add_3:z:0"
      input: "sequential/conv2d_transpose_3/stack/3:output:0"
      attr {
        key: "N"
        value {
          i: 4
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_3/strided_slice_3/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_3/strided_slice_3/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_3/strided_slice_3/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_3/strided_slice_3"
      op: "StridedSlice"
      input: "sequential/conv2d_transpose_3/stack:output:0"
      input: "sequential/conv2d_transpose_3/strided_slice_3/stack:output:0"
      input: "sequential/conv2d_transpose_3/strided_slice_3/stack_1:output:0"
      input: "sequential/conv2d_transpose_3/strided_slice_3/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_3/conv2d_transpose/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_conv2d_transpose_3_conv2d_transpose_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_3/conv2d_transpose"
      op: "Conv2DBackpropInput"
      input: "sequential/conv2d_transpose_3/stack:output:0"
      input: "sequential/conv2d_transpose_3/conv2d_transpose/ReadVariableOp:value:0"
      input: "sequential/re_lu_1_7/Relu:activations:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "SAME"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 2
            i: 2
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_3/BiasAdd/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_conv2d_transpose_3_biasadd_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/conv2d_transpose_3/BiasAdd"
      op: "BiasAdd"
      input: "sequential/conv2d_transpose_3/conv2d_transpose:output:0"
      input: "sequential/conv2d_transpose_3/BiasAdd/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_26/Shape"
      op: "Shape"
      input: "sequential/conv2d_transpose_3/BiasAdd:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "out_type"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_26/strided_slice/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 0
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_26/strided_slice/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_26/strided_slice/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_26/strided_slice"
      op: "StridedSlice"
      input: "sequential/instance_normalization_26/Shape:output:0"
      input: "sequential/instance_normalization_26/strided_slice/stack:output:0"
      input: "sequential/instance_normalization_26/strided_slice/stack_1:output:0"
      input: "sequential/instance_normalization_26/strided_slice/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_26/strided_slice_1/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_26/strided_slice_1/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_26/strided_slice_1/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_26/strided_slice_1"
      op: "StridedSlice"
      input: "sequential/instance_normalization_26/Shape:output:0"
      input: "sequential/instance_normalization_26/strided_slice_1/stack:output:0"
      input: "sequential/instance_normalization_26/strided_slice_1/stack_1:output:0"
      input: "sequential/instance_normalization_26/strided_slice_1/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_26/strided_slice_2/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_26/strided_slice_2/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_26/strided_slice_2/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_26/strided_slice_2"
      op: "StridedSlice"
      input: "sequential/instance_normalization_26/Shape:output:0"
      input: "sequential/instance_normalization_26/strided_slice_2/stack:output:0"
      input: "sequential/instance_normalization_26/strided_slice_2/stack_1:output:0"
      input: "sequential/instance_normalization_26/strided_slice_2/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_26/strided_slice_3/stack"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 3
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_26/strided_slice_3/stack_1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 4
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_26/strided_slice_3/stack_2"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_26/strided_slice_3"
      op: "StridedSlice"
      input: "sequential/instance_normalization_26/Shape:output:0"
      input: "sequential/instance_normalization_26/strided_slice_3/stack:output:0"
      input: "sequential/instance_normalization_26/strided_slice_3/stack_1:output:0"
      input: "sequential/instance_normalization_26/strided_slice_3/stack_2:output:0"
      attr {
        key: "Index"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "begin_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "ellipsis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "end_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "new_axis_mask"
        value {
          i: 0
        }
      }
      attr {
        key: "shrink_axis_mask"
        value {
          i: 1
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_26/stack/1"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 64
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_26/stack/4"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_26/stack"
      op: "Pack"
      input: "sequential/instance_normalization_26/strided_slice:output:0"
      input: "sequential/instance_normalization_26/stack/1:output:0"
      input: "sequential/instance_normalization_26/strided_slice_1:output:0"
      input: "sequential/instance_normalization_26/strided_slice_2:output:0"
      input: "sequential/instance_normalization_26/stack/4:output:0"
      attr {
        key: "N"
        value {
          i: 5
        }
      }
      attr {
        key: "T"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "axis"
        value {
          i: 0
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_26/Reshape"
      op: "Reshape"
      input: "sequential/conv2d_transpose_3/BiasAdd:output:0"
      input: "sequential/instance_normalization_26/stack:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_26/moments/mean/reduction_indices"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_26/moments/mean"
      op: "Mean"
      input: "sequential/instance_normalization_26/Reshape:output:0"
      input: "sequential/instance_normalization_26/moments/mean/reduction_indices:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_26/moments/StopGradient"
      op: "StopGradient"
      input: "sequential/instance_normalization_26/moments/mean:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_26/moments/SquaredDifference"
      op: "SquaredDifference"
      input: "sequential/instance_normalization_26/Reshape:output:0"
      input: "sequential/instance_normalization_26/moments/StopGradient:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_26/moments/variance/reduction_indices"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 3
              }
            }
            tensor_content: "\002\000\000\000\003\000\000\000\004\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_26/moments/variance"
      op: "Mean"
      input: "sequential/instance_normalization_26/moments/SquaredDifference:z:0"
      input: "sequential/instance_normalization_26/moments/variance/reduction_indices:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_26/Reshape_1/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_instance_normalization_26_reshape_1_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_26/Reshape_1/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 5
              }
            }
            tensor_content: "\001\000\000\000@\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_26/Reshape_1"
      op: "Reshape"
      input: "sequential/instance_normalization_26/Reshape_1/ReadVariableOp:value:0"
      input: "sequential/instance_normalization_26/Reshape_1/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_26/Reshape_2/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_instance_normalization_26_reshape_2_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_26/Reshape_2/shape"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 5
              }
            }
            tensor_content: "\001\000\000\000@\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_26/Reshape_2"
      op: "Reshape"
      input: "sequential/instance_normalization_26/Reshape_2/ReadVariableOp:value:0"
      input: "sequential/instance_normalization_26/Reshape_2/shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_26/batchnorm/add/y"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_FLOAT
            tensor_shape {
            }
            float_val: 9.999999747378752e-06
          }
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_26/batchnorm/add"
      op: "Add"
      input: "sequential/instance_normalization_26/moments/variance:output:0"
      input: "sequential/instance_normalization_26/batchnorm/add/y:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_26/batchnorm/Rsqrt"
      op: "Rsqrt"
      input: "sequential/instance_normalization_26/batchnorm/add:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_26/batchnorm/mul"
      op: "Mul"
      input: "sequential/instance_normalization_26/batchnorm/Rsqrt:y:0"
      input: "sequential/instance_normalization_26/Reshape_1:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_26/batchnorm/mul_1"
      op: "Mul"
      input: "sequential/instance_normalization_26/Reshape:output:0"
      input: "sequential/instance_normalization_26/batchnorm/mul:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_26/batchnorm/mul_2"
      op: "Mul"
      input: "sequential/instance_normalization_26/moments/mean:output:0"
      input: "sequential/instance_normalization_26/batchnorm/mul:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_26/batchnorm/sub"
      op: "Sub"
      input: "sequential/instance_normalization_26/Reshape_2:output:0"
      input: "sequential/instance_normalization_26/batchnorm/mul_2:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_26/batchnorm/add_1"
      op: "Add"
      input: "sequential/instance_normalization_26/batchnorm/mul_1:z:0"
      input: "sequential/instance_normalization_26/batchnorm/sub:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/instance_normalization_26/Reshape_3"
      op: "Reshape"
      input: "sequential/instance_normalization_26/batchnorm/add_1:z:0"
      input: "sequential/instance_normalization_26/Shape:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tshape"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "sequential/re_lu_1_8/Relu"
      op: "Relu"
      input: "sequential/instance_normalization_26/Reshape_3:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/reflection_pad2d_1/MirrorPad/paddings"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 4
              }
              dim {
                size: 2
              }
            }
            tensor_content: "\000\000\000\000\000\000\000\000\003\000\000\000\003\000\000\000\003\000\000\000\003\000\000\000\000\000\000\000\000\000\000\000"
          }
        }
      }
    }
    node_def {
      name: "sequential/reflection_pad2d_1/MirrorPad"
      op: "MirrorPad"
      input: "sequential/re_lu_1_8/Relu:activations:0"
      input: "sequential/reflection_pad2d_1/MirrorPad/paddings:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tpaddings"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "mode"
        value {
          s: "REFLECT"
        }
      }
    }
    node_def {
      name: "sequential/conv2d_23/Conv2D/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_conv2d_23_conv2d_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/conv2d_23/Conv2D"
      op: "Conv2D"
      input: "sequential/reflection_pad2d_1/MirrorPad:output:0"
      input: "sequential/conv2d_23/Conv2D/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
      attr {
        key: "dilations"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "explicit_paddings"
        value {
          list {
          }
        }
      }
      attr {
        key: "padding"
        value {
          s: "VALID"
        }
      }
      attr {
        key: "strides"
        value {
          list {
            i: 1
            i: 1
            i: 1
            i: 1
          }
        }
      }
      attr {
        key: "use_cudnn_on_gpu"
        value {
          b: true
        }
      }
    }
    node_def {
      name: "sequential/conv2d_23/BiasAdd/ReadVariableOp"
      op: "ReadVariableOp"
      input: "sequential_conv2d_23_biasadd_readvariableop_resource"
      device: "/job:localhost/replica:0/task:0/device:GPU:0"
      attr {
        key: "dtype"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "sequential/conv2d_23/BiasAdd"
      op: "BiasAdd"
      input: "sequential/conv2d_23/Conv2D:output:0"
      input: "sequential/conv2d_23/BiasAdd/ReadVariableOp:value:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "data_format"
        value {
          s: "NHWC"
        }
      }
    }
    node_def {
      name: "sequential/global_output/Tanh"
      op: "Tanh"
      input: "sequential/conv2d_23/BiasAdd:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "Identity"
      op: "Identity"
      input: "sequential/global_output/Tanh:y:0"
      input: "^sequential/resnet_block_4/sequential_5/instance_normalization_13/Reshape_1/ReadVariableOp"
      input: "^sequential/resnet_block_5/sequential_6/conv2d_16/Conv2D/ReadVariableOp"
      input: "^sequential/instance_normalization_24/Reshape_2/ReadVariableOp"
      input: "^sequential/conv2d_3/BiasAdd/ReadVariableOp"
      input: "^sequential/resnet_block_5/sequential_6/instance_normalization_15/Reshape_2/ReadVariableOp"
      input: "^sequential/conv2d_3/Conv2D/ReadVariableOp"
      input: "^sequential/resnet_block_5/sequential_6/conv2d_15/Conv2D/ReadVariableOp"
      input: "^sequential/resnet_block_8/sequential_9/conv2d_21/BiasAdd/ReadVariableOp"
      input: "^sequential/resnet_block_7/sequential_8/instance_normalization_19/Reshape_1/ReadVariableOp"
      input: "^sequential/conv2d_transpose/BiasAdd/ReadVariableOp"
      input: "^sequential/resnet_block_4/sequential_5/instance_normalization_14/Reshape_1/ReadVariableOp"
      input: "^sequential/conv2d_1/BiasAdd/ReadVariableOp"
      input: "^sequential/resnet_block_3/sequential_4/conv2d_12/BiasAdd/ReadVariableOp"
      input: "^sequential/resnet_block_5/sequential_6/instance_normalization_16/Reshape_2/ReadVariableOp"
      input: "^sequential/resnet_block_1/sequential_2/instance_normalization_7/Reshape_1/ReadVariableOp"
      input: "^sequential/resnet_block_6/sequential_7/conv2d_17/BiasAdd/ReadVariableOp"
      input: "^sequential/resnet_block_8/sequential_9/instance_normalization_21/Reshape_2/ReadVariableOp"
      input: "^sequential/conv2d_transpose_2/conv2d_transpose/ReadVariableOp"
      input: "^sequential/resnet_block_6/sequential_7/instance_normalization_18/Reshape_1/ReadVariableOp"
      input: "^sequential/resnet_block_8/sequential_9/conv2d_21/Conv2D/ReadVariableOp"
      input: "^sequential/conv2d_transpose_1/conv2d_transpose/ReadVariableOp"
      input: "^sequential/resnet_block_7/sequential_8/instance_normalization_20/Reshape_2/ReadVariableOp"
      input: "^sequential/instance_normalization_23/Reshape_2/ReadVariableOp"
      input: "^sequential/instance_normalization_3/Reshape_2/ReadVariableOp"
      input: "^sequential/resnet_block/sequential_1/instance_normalization_6/Reshape_1/ReadVariableOp"
      input: "^sequential/instance_normalization_26/Reshape_1/ReadVariableOp"
      input: "^sequential/resnet_block_7/sequential_8/conv2d_20/Conv2D/ReadVariableOp"
      input: "^sequential/resnet_block_5/sequential_6/conv2d_15/BiasAdd/ReadVariableOp"
      input: "^sequential/resnet_block_1/sequential_2/conv2d_8/Conv2D/ReadVariableOp"
      input: "^sequential/resnet_block_8/sequential_9/conv2d_22/BiasAdd/ReadVariableOp"
      input: "^sequential/conv2d_transpose_2/BiasAdd/ReadVariableOp"
      input: "^sequential/resnet_block_3/sequential_4/instance_normalization_12/Reshape_1/ReadVariableOp"
      input: "^sequential/conv2d_transpose_1/BiasAdd/ReadVariableOp"
      input: "^sequential/resnet_block_4/sequential_5/instance_normalization_14/Reshape_2/ReadVariableOp"
      input: "^sequential/conv2d_23/Conv2D/ReadVariableOp"
      input: "^sequential/conv2d_4/BiasAdd/ReadVariableOp"
      input: "^sequential/resnet_block_4/sequential_5/conv2d_14/Conv2D/ReadVariableOp"
      input: "^sequential/instance_normalization_1/Reshape_1/ReadVariableOp"
      input: "^sequential/conv2d/Conv2D/ReadVariableOp"
      input: "^sequential/instance_normalization/Reshape_1/ReadVariableOp"
      input: "^sequential/resnet_block_2/sequential_3/instance_normalization_9/Reshape_1/ReadVariableOp"
      input: "^sequential/resnet_block_3/sequential_4/conv2d_11/BiasAdd/ReadVariableOp"
      input: "^sequential/resnet_block_5/sequential_6/conv2d_16/BiasAdd/ReadVariableOp"
      input: "^sequential/resnet_block_7/sequential_8/conv2d_20/BiasAdd/ReadVariableOp"
      input: "^sequential/instance_normalization_25/Reshape_1/ReadVariableOp"
      input: "^sequential/resnet_block_1/sequential_2/conv2d_8/BiasAdd/ReadVariableOp"
      input: "^sequential/resnet_block_6/sequential_7/instance_normalization_17/Reshape_1/ReadVariableOp"
      input: "^sequential/resnet_block_7/sequential_8/instance_normalization_19/Reshape_2/ReadVariableOp"
      input: "^sequential/instance_normalization_4/Reshape_1/ReadVariableOp"
      input: "^sequential/resnet_block/sequential_1/instance_normalization_5/Reshape_1/ReadVariableOp"
      input: "^sequential/resnet_block_2/sequential_3/instance_normalization_10/Reshape_2/ReadVariableOp"
      input: "^sequential/conv2d_transpose_3/BiasAdd/ReadVariableOp"
      input: "^sequential/resnet_block_1/sequential_2/instance_normalization_7/Reshape_2/ReadVariableOp"
      input: "^sequential/resnet_block_7/sequential_8/conv2d_19/Conv2D/ReadVariableOp"
      input: "^sequential/conv2d_23/BiasAdd/ReadVariableOp"
      input: "^sequential/resnet_block_2/sequential_3/conv2d_10/BiasAdd/ReadVariableOp"
      input: "^sequential/resnet_block_4/sequential_5/conv2d_14/BiasAdd/ReadVariableOp"
      input: "^sequential/conv2d_transpose/conv2d_transpose/ReadVariableOp"
      input: "^sequential/resnet_block_1/sequential_2/conv2d_7/Conv2D/ReadVariableOp"
      input: "^sequential/resnet_block_3/sequential_4/instance_normalization_11/Reshape_1/ReadVariableOp"
      input: "^sequential/instance_normalization_26/Reshape_2/ReadVariableOp"
      input: "^sequential/resnet_block_4/sequential_5/instance_normalization_13/Reshape_2/ReadVariableOp"
      input: "^sequential/resnet_block_8/sequential_9/instance_normalization_22/Reshape_1/ReadVariableOp"
      input: "^sequential/conv2d/BiasAdd/ReadVariableOp"
      input: "^sequential/resnet_block_2/sequential_3/conv2d_9/BiasAdd/ReadVariableOp"
      input: "^sequential/conv2d_2/Conv2D/ReadVariableOp"
      input: "^sequential/conv2d_4/Conv2D/ReadVariableOp"
      input: "^sequential/resnet_block_1/sequential_2/instance_normalization_8/Reshape_2/ReadVariableOp"
      input: "^sequential/resnet_block_4/sequential_5/conv2d_13/Conv2D/ReadVariableOp"
      input: "^sequential/resnet_block_2/sequential_3/conv2d_10/Conv2D/ReadVariableOp"
      input: "^sequential/resnet_block_7/sequential_8/conv2d_19/BiasAdd/ReadVariableOp"
      input: "^sequential/resnet_block_5/sequential_6/instance_normalization_16/Reshape_1/ReadVariableOp"
      input: "^sequential/instance_normalization_1/Reshape_2/ReadVariableOp"
      input: "^sequential/resnet_block_1/sequential_2/conv2d_7/BiasAdd/ReadVariableOp"
      input: "^sequential/resnet_block_6/sequential_7/instance_normalization_18/Reshape_2/ReadVariableOp"
      input: "^sequential/instance_normalization_24/Reshape_1/ReadVariableOp"
      input: "^sequential/conv2d_2/BiasAdd/ReadVariableOp"
      input: "^sequential/resnet_block/sequential_1/instance_normalization_6/Reshape_2/ReadVariableOp"
      input: "^sequential/resnet_block_6/sequential_7/conv2d_18/Conv2D/ReadVariableOp"
      input: "^sequential/resnet_block_4/sequential_5/conv2d_13/BiasAdd/ReadVariableOp"
      input: "^sequential/resnet_block/sequential_1/conv2d_6/Conv2D/ReadVariableOp"
      input: "^sequential/resnet_block_3/sequential_4/instance_normalization_12/Reshape_2/ReadVariableOp"
      input: "^sequential/resnet_block_8/sequential_9/instance_normalization_21/Reshape_1/ReadVariableOp"
      input: "^sequential/resnet_block_2/sequential_3/instance_normalization_10/Reshape_1/ReadVariableOp"
      input: "^sequential/resnet_block_3/sequential_4/conv2d_11/Conv2D/ReadVariableOp"
      input: "^sequential/resnet_block_3/sequential_4/conv2d_12/Conv2D/ReadVariableOp"
      input: "^sequential/resnet_block/sequential_1/conv2d_5/BiasAdd/ReadVariableOp"
      input: "^sequential/conv2d_transpose_3/conv2d_transpose/ReadVariableOp"
      input: "^sequential/resnet_block_6/sequential_7/conv2d_18/BiasAdd/ReadVariableOp"
      input: "^sequential/instance_normalization_25/Reshape_2/ReadVariableOp"
      input: "^sequential/instance_normalization_4/Reshape_2/ReadVariableOp"
      input: "^sequential/resnet_block/sequential_1/conv2d_6/BiasAdd/ReadVariableOp"
      input: "^sequential/resnet_block_5/sequential_6/instance_normalization_15/Reshape_1/ReadVariableOp"
      input: "^sequential/resnet_block_6/sequential_7/instance_normalization_17/Reshape_2/ReadVariableOp"
      input: "^sequential/resnet_block/sequential_1/instance_normalization_5/Reshape_2/ReadVariableOp"
      input: "^sequential/resnet_block_6/sequential_7/conv2d_17/Conv2D/ReadVariableOp"
      input: "^sequential/resnet_block_2/sequential_3/conv2d_9/Conv2D/ReadVariableOp"
      input: "^sequential/conv2d_1/Conv2D/ReadVariableOp"
      input: "^sequential/resnet_block_7/sequential_8/instance_normalization_20/Reshape_1/ReadVariableOp"
      input: "^sequential/resnet_block_3/sequential_4/instance_normalization_11/Reshape_2/ReadVariableOp"
      input: "^sequential/instance_normalization_23/Reshape_1/ReadVariableOp"
      input: "^sequential/instance_normalization/Reshape_2/ReadVariableOp"
      input: "^sequential/resnet_block_8/sequential_9/instance_normalization_22/Reshape_2/ReadVariableOp"
      input: "^sequential/resnet_block_1/sequential_2/instance_normalization_8/Reshape_1/ReadVariableOp"
      input: "^sequential/resnet_block_8/sequential_9/conv2d_22/Conv2D/ReadVariableOp"
      input: "^sequential/resnet_block/sequential_1/conv2d_5/Conv2D/ReadVariableOp"
      input: "^sequential/resnet_block_2/sequential_3/instance_normalization_9/Reshape_2/ReadVariableOp"
      input: "^sequential/instance_normalization_2/Reshape_1/ReadVariableOp"
      input: "^sequential/instance_normalization_2/Reshape_2/ReadVariableOp"
      input: "^sequential/instance_normalization_3/Reshape_1/ReadVariableOp"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    ret {
      key: "identity"
      value: "Identity:output:0"
    }
    control_ret {
      key: "sequential/conv2d/BiasAdd/ReadVariableOp"
      value: "sequential/conv2d/BiasAdd/ReadVariableOp"
    }
    control_ret {
      key: "sequential/conv2d/Conv2D/ReadVariableOp"
      value: "sequential/conv2d/Conv2D/ReadVariableOp"
    }
    control_ret {
      key: "sequential/conv2d_1/BiasAdd/ReadVariableOp"
      value: "sequential/conv2d_1/BiasAdd/ReadVariableOp"
    }
    control_ret {
      key: "sequential/conv2d_1/Conv2D/ReadVariableOp"
      value: "sequential/conv2d_1/Conv2D/ReadVariableOp"
    }
    control_ret {
      key: "sequential/conv2d_2/BiasAdd/ReadVariableOp"
      value: "sequential/conv2d_2/BiasAdd/ReadVariableOp"
    }
    control_ret {
      key: "sequential/conv2d_2/Conv2D/ReadVariableOp"
      value: "sequential/conv2d_2/Conv2D/ReadVariableOp"
    }
    control_ret {
      key: "sequential/conv2d_23/BiasAdd/ReadVariableOp"
      value: "sequential/conv2d_23/BiasAdd/ReadVariableOp"
    }
    control_ret {
      key: "sequential/conv2d_23/Conv2D/ReadVariableOp"
      value: "sequential/conv2d_23/Conv2D/ReadVariableOp"
    }
    control_ret {
      key: "sequential/conv2d_3/BiasAdd/ReadVariableOp"
      value: "sequential/conv2d_3/BiasAdd/ReadVariableOp"
    }
    control_ret {
      key: "sequential/conv2d_3/Conv2D/ReadVariableOp"
      value: "sequential/conv2d_3/Conv2D/ReadVariableOp"
    }
    control_ret {
      key: "sequential/conv2d_4/BiasAdd/ReadVariableOp"
      value: "sequential/conv2d_4/BiasAdd/ReadVariableOp"
    }
    control_ret {
      key: "sequential/conv2d_4/Conv2D/ReadVariableOp"
      value: "sequential/conv2d_4/Conv2D/ReadVariableOp"
    }
    control_ret {
      key: "sequential/conv2d_transpose/BiasAdd/ReadVariableOp"
      value: "sequential/conv2d_transpose/BiasAdd/ReadVariableOp"
    }
    control_ret {
      key: "sequential/conv2d_transpose/conv2d_transpose/ReadVariableOp"
      value: "sequential/conv2d_transpose/conv2d_transpose/ReadVariableOp"
    }
    control_ret {
      key: "sequential/conv2d_transpose_1/BiasAdd/ReadVariableOp"
      value: "sequential/conv2d_transpose_1/BiasAdd/ReadVariableOp"
    }
    control_ret {
      key: "sequential/conv2d_transpose_1/conv2d_transpose/ReadVariableOp"
      value: "sequential/conv2d_transpose_1/conv2d_transpose/ReadVariableOp"
    }
    control_ret {
      key: "sequential/conv2d_transpose_2/BiasAdd/ReadVariableOp"
      value: "sequential/conv2d_transpose_2/BiasAdd/ReadVariableOp"
    }
    control_ret {
      key: "sequential/conv2d_transpose_2/conv2d_transpose/ReadVariableOp"
      value: "sequential/conv2d_transpose_2/conv2d_transpose/ReadVariableOp"
    }
    control_ret {
      key: "sequential/conv2d_transpose_3/BiasAdd/ReadVariableOp"
      value: "sequential/conv2d_transpose_3/BiasAdd/ReadVariableOp"
    }
    control_ret {
      key: "sequential/conv2d_transpose_3/conv2d_transpose/ReadVariableOp"
      value: "sequential/conv2d_transpose_3/conv2d_transpose/ReadVariableOp"
    }
    control_ret {
      key: "sequential/instance_normalization/Reshape_1/ReadVariableOp"
      value: "sequential/instance_normalization/Reshape_1/ReadVariableOp"
    }
    control_ret {
      key: "sequential/instance_normalization/Reshape_2/ReadVariableOp"
      value: "sequential/instance_normalization/Reshape_2/ReadVariableOp"
    }
    control_ret {
      key: "sequential/instance_normalization_1/Reshape_1/ReadVariableOp"
      value: "sequential/instance_normalization_1/Reshape_1/ReadVariableOp"
    }
    control_ret {
      key: "sequential/instance_normalization_1/Reshape_2/ReadVariableOp"
      value: "sequential/instance_normalization_1/Reshape_2/ReadVariableOp"
    }
    control_ret {
      key: "sequential/instance_normalization_2/Reshape_1/ReadVariableOp"
      value: "sequential/instance_normalization_2/Reshape_1/ReadVariableOp"
    }
    control_ret {
      key: "sequential/instance_normalization_2/Reshape_2/ReadVariableOp"
      value: "sequential/instance_normalization_2/Reshape_2/ReadVariableOp"
    }
    control_ret {
      key: "sequential/instance_normalization_23/Reshape_1/ReadVariableOp"
      value: "sequential/instance_normalization_23/Reshape_1/ReadVariableOp"
    }
    control_ret {
      key: "sequential/instance_normalization_23/Reshape_2/ReadVariableOp"
      value: "sequential/instance_normalization_23/Reshape_2/ReadVariableOp"
    }
    control_ret {
      key: "sequential/instance_normalization_24/Reshape_1/ReadVariableOp"
      value: "sequential/instance_normalization_24/Reshape_1/ReadVariableOp"
    }
    control_ret {
      key: "sequential/instance_normalization_24/Reshape_2/ReadVariableOp"
      value: "sequential/instance_normalization_24/Reshape_2/ReadVariableOp"
    }
    control_ret {
      key: "sequential/instance_normalization_25/Reshape_1/ReadVariableOp"
      value: "sequential/instance_normalization_25/Reshape_1/ReadVariableOp"
    }
    control_ret {
      key: "sequential/instance_normalization_25/Reshape_2/ReadVariableOp"
      value: "sequential/instance_normalization_25/Reshape_2/ReadVariableOp"
    }
    control_ret {
      key: "sequential/instance_normalization_26/Reshape_1/ReadVariableOp"
      value: "sequential/instance_normalization_26/Reshape_1/ReadVariableOp"
    }
    control_ret {
      key: "sequential/instance_normalization_26/Reshape_2/ReadVariableOp"
      value: "sequential/instance_normalization_26/Reshape_2/ReadVariableOp"
    }
    control_ret {
      key: "sequential/instance_normalization_3/Reshape_1/ReadVariableOp"
      value: "sequential/instance_normalization_3/Reshape_1/ReadVariableOp"
    }
    control_ret {
      key: "sequential/instance_normalization_3/Reshape_2/ReadVariableOp"
      value: "sequential/instance_normalization_3/Reshape_2/ReadVariableOp"
    }
    control_ret {
      key: "sequential/instance_normalization_4/Reshape_1/ReadVariableOp"
      value: "sequential/instance_normalization_4/Reshape_1/ReadVariableOp"
    }
    control_ret {
      key: "sequential/instance_normalization_4/Reshape_2/ReadVariableOp"
      value: "sequential/instance_normalization_4/Reshape_2/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block/sequential_1/conv2d_5/BiasAdd/ReadVariableOp"
      value: "sequential/resnet_block/sequential_1/conv2d_5/BiasAdd/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block/sequential_1/conv2d_5/Conv2D/ReadVariableOp"
      value: "sequential/resnet_block/sequential_1/conv2d_5/Conv2D/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block/sequential_1/conv2d_6/BiasAdd/ReadVariableOp"
      value: "sequential/resnet_block/sequential_1/conv2d_6/BiasAdd/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block/sequential_1/conv2d_6/Conv2D/ReadVariableOp"
      value: "sequential/resnet_block/sequential_1/conv2d_6/Conv2D/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block/sequential_1/instance_normalization_5/Reshape_1/ReadVariableOp"
      value: "sequential/resnet_block/sequential_1/instance_normalization_5/Reshape_1/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block/sequential_1/instance_normalization_5/Reshape_2/ReadVariableOp"
      value: "sequential/resnet_block/sequential_1/instance_normalization_5/Reshape_2/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block/sequential_1/instance_normalization_6/Reshape_1/ReadVariableOp"
      value: "sequential/resnet_block/sequential_1/instance_normalization_6/Reshape_1/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block/sequential_1/instance_normalization_6/Reshape_2/ReadVariableOp"
      value: "sequential/resnet_block/sequential_1/instance_normalization_6/Reshape_2/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block_1/sequential_2/conv2d_7/BiasAdd/ReadVariableOp"
      value: "sequential/resnet_block_1/sequential_2/conv2d_7/BiasAdd/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block_1/sequential_2/conv2d_7/Conv2D/ReadVariableOp"
      value: "sequential/resnet_block_1/sequential_2/conv2d_7/Conv2D/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block_1/sequential_2/conv2d_8/BiasAdd/ReadVariableOp"
      value: "sequential/resnet_block_1/sequential_2/conv2d_8/BiasAdd/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block_1/sequential_2/conv2d_8/Conv2D/ReadVariableOp"
      value: "sequential/resnet_block_1/sequential_2/conv2d_8/Conv2D/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block_1/sequential_2/instance_normalization_7/Reshape_1/ReadVariableOp"
      value: "sequential/resnet_block_1/sequential_2/instance_normalization_7/Reshape_1/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block_1/sequential_2/instance_normalization_7/Reshape_2/ReadVariableOp"
      value: "sequential/resnet_block_1/sequential_2/instance_normalization_7/Reshape_2/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block_1/sequential_2/instance_normalization_8/Reshape_1/ReadVariableOp"
      value: "sequential/resnet_block_1/sequential_2/instance_normalization_8/Reshape_1/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block_1/sequential_2/instance_normalization_8/Reshape_2/ReadVariableOp"
      value: "sequential/resnet_block_1/sequential_2/instance_normalization_8/Reshape_2/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block_2/sequential_3/conv2d_10/BiasAdd/ReadVariableOp"
      value: "sequential/resnet_block_2/sequential_3/conv2d_10/BiasAdd/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block_2/sequential_3/conv2d_10/Conv2D/ReadVariableOp"
      value: "sequential/resnet_block_2/sequential_3/conv2d_10/Conv2D/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block_2/sequential_3/conv2d_9/BiasAdd/ReadVariableOp"
      value: "sequential/resnet_block_2/sequential_3/conv2d_9/BiasAdd/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block_2/sequential_3/conv2d_9/Conv2D/ReadVariableOp"
      value: "sequential/resnet_block_2/sequential_3/conv2d_9/Conv2D/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block_2/sequential_3/instance_normalization_10/Reshape_1/ReadVariableOp"
      value: "sequential/resnet_block_2/sequential_3/instance_normalization_10/Reshape_1/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block_2/sequential_3/instance_normalization_10/Reshape_2/ReadVariableOp"
      value: "sequential/resnet_block_2/sequential_3/instance_normalization_10/Reshape_2/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block_2/sequential_3/instance_normalization_9/Reshape_1/ReadVariableOp"
      value: "sequential/resnet_block_2/sequential_3/instance_normalization_9/Reshape_1/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block_2/sequential_3/instance_normalization_9/Reshape_2/ReadVariableOp"
      value: "sequential/resnet_block_2/sequential_3/instance_normalization_9/Reshape_2/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block_3/sequential_4/conv2d_11/BiasAdd/ReadVariableOp"
      value: "sequential/resnet_block_3/sequential_4/conv2d_11/BiasAdd/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block_3/sequential_4/conv2d_11/Conv2D/ReadVariableOp"
      value: "sequential/resnet_block_3/sequential_4/conv2d_11/Conv2D/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block_3/sequential_4/conv2d_12/BiasAdd/ReadVariableOp"
      value: "sequential/resnet_block_3/sequential_4/conv2d_12/BiasAdd/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block_3/sequential_4/conv2d_12/Conv2D/ReadVariableOp"
      value: "sequential/resnet_block_3/sequential_4/conv2d_12/Conv2D/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block_3/sequential_4/instance_normalization_11/Reshape_1/ReadVariableOp"
      value: "sequential/resnet_block_3/sequential_4/instance_normalization_11/Reshape_1/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block_3/sequential_4/instance_normalization_11/Reshape_2/ReadVariableOp"
      value: "sequential/resnet_block_3/sequential_4/instance_normalization_11/Reshape_2/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block_3/sequential_4/instance_normalization_12/Reshape_1/ReadVariableOp"
      value: "sequential/resnet_block_3/sequential_4/instance_normalization_12/Reshape_1/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block_3/sequential_4/instance_normalization_12/Reshape_2/ReadVariableOp"
      value: "sequential/resnet_block_3/sequential_4/instance_normalization_12/Reshape_2/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block_4/sequential_5/conv2d_13/BiasAdd/ReadVariableOp"
      value: "sequential/resnet_block_4/sequential_5/conv2d_13/BiasAdd/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block_4/sequential_5/conv2d_13/Conv2D/ReadVariableOp"
      value: "sequential/resnet_block_4/sequential_5/conv2d_13/Conv2D/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block_4/sequential_5/conv2d_14/BiasAdd/ReadVariableOp"
      value: "sequential/resnet_block_4/sequential_5/conv2d_14/BiasAdd/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block_4/sequential_5/conv2d_14/Conv2D/ReadVariableOp"
      value: "sequential/resnet_block_4/sequential_5/conv2d_14/Conv2D/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block_4/sequential_5/instance_normalization_13/Reshape_1/ReadVariableOp"
      value: "sequential/resnet_block_4/sequential_5/instance_normalization_13/Reshape_1/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block_4/sequential_5/instance_normalization_13/Reshape_2/ReadVariableOp"
      value: "sequential/resnet_block_4/sequential_5/instance_normalization_13/Reshape_2/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block_4/sequential_5/instance_normalization_14/Reshape_1/ReadVariableOp"
      value: "sequential/resnet_block_4/sequential_5/instance_normalization_14/Reshape_1/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block_4/sequential_5/instance_normalization_14/Reshape_2/ReadVariableOp"
      value: "sequential/resnet_block_4/sequential_5/instance_normalization_14/Reshape_2/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block_5/sequential_6/conv2d_15/BiasAdd/ReadVariableOp"
      value: "sequential/resnet_block_5/sequential_6/conv2d_15/BiasAdd/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block_5/sequential_6/conv2d_15/Conv2D/ReadVariableOp"
      value: "sequential/resnet_block_5/sequential_6/conv2d_15/Conv2D/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block_5/sequential_6/conv2d_16/BiasAdd/ReadVariableOp"
      value: "sequential/resnet_block_5/sequential_6/conv2d_16/BiasAdd/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block_5/sequential_6/conv2d_16/Conv2D/ReadVariableOp"
      value: "sequential/resnet_block_5/sequential_6/conv2d_16/Conv2D/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block_5/sequential_6/instance_normalization_15/Reshape_1/ReadVariableOp"
      value: "sequential/resnet_block_5/sequential_6/instance_normalization_15/Reshape_1/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block_5/sequential_6/instance_normalization_15/Reshape_2/ReadVariableOp"
      value: "sequential/resnet_block_5/sequential_6/instance_normalization_15/Reshape_2/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block_5/sequential_6/instance_normalization_16/Reshape_1/ReadVariableOp"
      value: "sequential/resnet_block_5/sequential_6/instance_normalization_16/Reshape_1/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block_5/sequential_6/instance_normalization_16/Reshape_2/ReadVariableOp"
      value: "sequential/resnet_block_5/sequential_6/instance_normalization_16/Reshape_2/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block_6/sequential_7/conv2d_17/BiasAdd/ReadVariableOp"
      value: "sequential/resnet_block_6/sequential_7/conv2d_17/BiasAdd/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block_6/sequential_7/conv2d_17/Conv2D/ReadVariableOp"
      value: "sequential/resnet_block_6/sequential_7/conv2d_17/Conv2D/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block_6/sequential_7/conv2d_18/BiasAdd/ReadVariableOp"
      value: "sequential/resnet_block_6/sequential_7/conv2d_18/BiasAdd/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block_6/sequential_7/conv2d_18/Conv2D/ReadVariableOp"
      value: "sequential/resnet_block_6/sequential_7/conv2d_18/Conv2D/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block_6/sequential_7/instance_normalization_17/Reshape_1/ReadVariableOp"
      value: "sequential/resnet_block_6/sequential_7/instance_normalization_17/Reshape_1/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block_6/sequential_7/instance_normalization_17/Reshape_2/ReadVariableOp"
      value: "sequential/resnet_block_6/sequential_7/instance_normalization_17/Reshape_2/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block_6/sequential_7/instance_normalization_18/Reshape_1/ReadVariableOp"
      value: "sequential/resnet_block_6/sequential_7/instance_normalization_18/Reshape_1/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block_6/sequential_7/instance_normalization_18/Reshape_2/ReadVariableOp"
      value: "sequential/resnet_block_6/sequential_7/instance_normalization_18/Reshape_2/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block_7/sequential_8/conv2d_19/BiasAdd/ReadVariableOp"
      value: "sequential/resnet_block_7/sequential_8/conv2d_19/BiasAdd/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block_7/sequential_8/conv2d_19/Conv2D/ReadVariableOp"
      value: "sequential/resnet_block_7/sequential_8/conv2d_19/Conv2D/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block_7/sequential_8/conv2d_20/BiasAdd/ReadVariableOp"
      value: "sequential/resnet_block_7/sequential_8/conv2d_20/BiasAdd/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block_7/sequential_8/conv2d_20/Conv2D/ReadVariableOp"
      value: "sequential/resnet_block_7/sequential_8/conv2d_20/Conv2D/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block_7/sequential_8/instance_normalization_19/Reshape_1/ReadVariableOp"
      value: "sequential/resnet_block_7/sequential_8/instance_normalization_19/Reshape_1/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block_7/sequential_8/instance_normalization_19/Reshape_2/ReadVariableOp"
      value: "sequential/resnet_block_7/sequential_8/instance_normalization_19/Reshape_2/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block_7/sequential_8/instance_normalization_20/Reshape_1/ReadVariableOp"
      value: "sequential/resnet_block_7/sequential_8/instance_normalization_20/Reshape_1/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block_7/sequential_8/instance_normalization_20/Reshape_2/ReadVariableOp"
      value: "sequential/resnet_block_7/sequential_8/instance_normalization_20/Reshape_2/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block_8/sequential_9/conv2d_21/BiasAdd/ReadVariableOp"
      value: "sequential/resnet_block_8/sequential_9/conv2d_21/BiasAdd/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block_8/sequential_9/conv2d_21/Conv2D/ReadVariableOp"
      value: "sequential/resnet_block_8/sequential_9/conv2d_21/Conv2D/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block_8/sequential_9/conv2d_22/BiasAdd/ReadVariableOp"
      value: "sequential/resnet_block_8/sequential_9/conv2d_22/BiasAdd/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block_8/sequential_9/conv2d_22/Conv2D/ReadVariableOp"
      value: "sequential/resnet_block_8/sequential_9/conv2d_22/Conv2D/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block_8/sequential_9/instance_normalization_21/Reshape_1/ReadVariableOp"
      value: "sequential/resnet_block_8/sequential_9/instance_normalization_21/Reshape_1/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block_8/sequential_9/instance_normalization_21/Reshape_2/ReadVariableOp"
      value: "sequential/resnet_block_8/sequential_9/instance_normalization_21/Reshape_2/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block_8/sequential_9/instance_normalization_22/Reshape_1/ReadVariableOp"
      value: "sequential/resnet_block_8/sequential_9/instance_normalization_22/Reshape_1/ReadVariableOp"
    }
    control_ret {
      key: "sequential/resnet_block_8/sequential_9/instance_normalization_22/Reshape_2/ReadVariableOp"
      value: "sequential/resnet_block_8/sequential_9/instance_normalization_22/Reshape_2/ReadVariableOp"
    }
  }
}
versions {
  producer: 27
  min_consumer: 12
}
